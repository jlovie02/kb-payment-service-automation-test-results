<?xml version="1.0" encoding="utf-8"?>
<TestRun id="ed52e544-3693-4a9a-9850-bceadd6bfc3e" name="@ip-10-130-163-65 2025-09-12 15:39:30" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-12T15:39:30.5557807+12:00" queuing="2025-09-12T15:39:30.5557808+12:00" start="2025-09-12T15:37:47.7167640+12:00" finish="2025-09-12T15:49:26.4775908+12:00" />
  <TestSettings name="default" id="816b2142-69d4-4c0e-a644-7d5491b7c346">
    <Deployment runDeploymentRoot="_ip-10-130-163-65_2025-09-12_15_39_30" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="7abd212f-44bb-422c-9f41-9b8cc7705f5a" testId="4f09f936-6800-9aed-c722-6d781f718908" testName="AccountStatusRules (Unsuccessful BlockedGeneral to Opened,BlockedGeneral,Opened,Debtor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0215507" startTime="2025-09-12T15:41:52.6119188+12:00" endTime="2025-09-12T15:41:54.6337661+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7abd212f-44bb-422c-9f41-9b8cc7705f5a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:52.6124629+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful BlockedGeneral to Opened]\",\"[DebtorFieldValue, BlockedGeneral]\",\"[CreditorFieldValue, Opened]\",\"[ErrorMessage, Debtor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful BlockedGeneral to Opened]","[DebtorFieldValue, BlockedGeneral]","[CreditorFieldValue, Opened]","[ErrorMessage, Debtor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:52.6159789+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c0c6c91e-7c51-4a71-92c0-46c630cf1bfe for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c0c6c91e-7c51-4a71-92c0-46c630cf1bfe","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:53.1178577+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_02384f86-991d-4a93-88bc-2d02fa5d3ee2 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_02384f86-991d-4a93-88bc-2d02fa5d3ee2","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:53.6175859+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_bb464507-1a35-46bd-b333-810add9ab559 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_bb464507-1a35-46bd-b333-810add9ab559","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:54.1166617+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"61e28b4e-593b-43c1-9f1c-0d6dd53a091d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"61e28b4e-593b-43c1-9f1c-0d6dd53a091d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:54.1167767+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:54.1168070+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:54.1314886+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.6431ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.6431,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:54.1316120+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.8527ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.8527,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:54.1318629+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"c87ad8eea16847f9b17c2ae63c51d223\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:54.130Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"c87ad8eea16847f9b17c2ae63c51d223\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:54.130Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to BlockedGeneral
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedGeneral") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Opened") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                               |
  | __typename                         | UnsuccessfulPayment                 |
  | debtorAccountNumber                |                                     |
  | creditorAccountNumber              |                                     |
  | paymentId                          | *                                   |
  | paymentInstructionCreationDateTime | *                                   |
  | initiatingAccessNumber             | *                                   |
  | debtorAccountCode                  | *                                   |
  | debtorAccountParticulars           | *                                   |
  | debtorAccountReference             | *                                   |
  | creditorAccountCode                | *                                   |
  | creditorAccountParticulars         | *                                   |
  | creditorAccountReference           | *                                   |
  | amount                             | *                                   |
  | code                               | INVALID_ACCOUNT_STATE               |
  | message                            | Debtor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1fdae280-817c-48f9-82fe-5a82e49445df" testId="7a32f101-b71a-87d9-22ad-35c27dc4ee2b" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S1N,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3491545" startTime="2025-09-12T15:42:37.5677219+12:00" endTime="2025-09-12T15:42:59.9173004+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1fdae280-817c-48f9-82fe-5a82e49445df">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:37.5686715+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S1N]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S1N]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:37.5755400+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1575f3cb-0d45-4adf-a7de-d3a25f9fe1f0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1575f3cb-0d45-4adf-a7de-d3a25f9fe1f0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:38.0741310+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b7276469-b15d-42fb-8704-7013b8e82903 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b7276469-b15d-42fb-8704-7013b8e82903","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:38.5757857+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_82a0abc1-dcd2-4328-8bd1-005030d5fe02 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_82a0abc1-dcd2-4328-8bd1-005030d5fe02","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:39.0727804+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e688c89b-77f3-4750-bf32-c3f4100f4af8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e688c89b-77f3-4750-bf32-c3f4100f4af8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:39.0729097+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:39.0729393+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:39.1326507+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.6828ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.6828,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:39.1327549+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.8616ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.8616,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:39.1397128+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0e47a4e7-ac01-45e0-83cd-978af8543d16 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0e47a4e7-ac01-45e0-83cd-978af8543d16","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:39.6382837+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8d54c156-f853-47c5-8d59-37c29a425073 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8d54c156-f853-47c5-8d59-37c29a425073","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:40.1395694+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d465c3de-b2be-453d-94f7-585d83dcaee4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d465c3de-b2be-453d-94f7-585d83dcaee4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:40.6380509+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3ad9ca9d-ea6d-4c4e-b6f1-d891ce66d905\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3ad9ca9d-ea6d-4c4e-b6f1-d891ce66d905\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:40.6381842+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:40.6382233+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:40.6928968+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.6414ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.6414,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:40.6929990+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.8372ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.8372,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:40.6979749+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_cf515d05-6311-4ca9-b14b-2526945704a4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_cf515d05-6311-4ca9-b14b-2526945704a4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:41.1979020+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cf02ec61-03b6-40ba-a712-91316e00a004 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cf02ec61-03b6-40ba-a712-91316e00a004","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:41.6991565+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_820be199-2ceb-4283-8db5-7719347566a9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_820be199-2ceb-4283-8db5-7719347566a9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:42.1964405+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d372108a-c71e-4d6d-9981-dc504a1b24d5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d372108a-c71e-4d6d-9981-dc504a1b24d5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:42.1965516+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:42.1965761+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:42.2496486+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.0444ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.0444,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:42.2497506+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.2153ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2153,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:42.2546055+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_48842990-022b-4294-950c-b3070a41f33c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_48842990-022b-4294-950c-b3070a41f33c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:42.7539534+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f2c764b8-5580-45ed-bcab-beec5f6d381a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f2c764b8-5580-45ed-bcab-beec5f6d381a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:43.2574665+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d54f1545-69a4-4cf6-a67c-e0148ecec492 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d54f1545-69a4-4cf6-a67c-e0148ecec492","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:43.7566472+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e5551d18-47b6-4cc3-aad4-ddfa010fb6f1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e5551d18-47b6-4cc3-aad4-ddfa010fb6f1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:43.7567564+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:43.7567810+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:43.8093248+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.5174ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5174,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:43.8094348+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.6936ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.6936,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:43.8145194+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7e7217d6-8eda-4db0-a37b-8037e8084edb for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7e7217d6-8eda-4db0-a37b-8037e8084edb","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:44.3146441+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3c4d0585-9295-46c0-b295-6b53594de936 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3c4d0585-9295-46c0-b295-6b53594de936","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:44.8140376+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8eaea4fe-2d79-4ebb-9f06-3388f383ad2d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8eaea4fe-2d79-4ebb-9f06-3388f383ad2d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:45.3150027+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bb4f4ba3-2c80-4429-8703-eb5c8848bcbd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bb4f4ba3-2c80-4429-8703-eb5c8848bcbd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:45.3151325+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:45.3151637+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:45.3700251+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.8326ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.8326,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:45.3701364+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.0223ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0223,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:45.3750858+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_bf908d2c-94e6-49a6-a73e-d093d246c2a0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_bf908d2c-94e6-49a6-a73e-d093d246c2a0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:45.8759728+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_12f7777d-797f-476c-94aa-420ea64ea06a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_12f7777d-797f-476c-94aa-420ea64ea06a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:46.3750030+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_08d7561c-1b8e-414e-a8e8-cb34b5382c81 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_08d7561c-1b8e-414e-a8e8-cb34b5382c81","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:46.8727185+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"55fd687b-7037-4d28-bdad-1288f093e45c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"55fd687b-7037-4d28-bdad-1288f093e45c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:46.8728643+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:46.8728953+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:46.9359647+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 63.0406ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":63.0406,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:46.9360634+12:00","LogLevel":"Information","Message":"End processing HTTP request after 63.2177ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":63.2177,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:46.9411430+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_12da5347-497f-4086-ac86-d8b0d46ad94a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_12da5347-497f-4086-ac86-d8b0d46ad94a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:47.4405414+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e6e410cc-4ff5-4db0-92e5-dd740dfd7662 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e6e410cc-4ff5-4db0-92e5-dd740dfd7662","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:47.9436245+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3bb5f7cc-2e73-476e-89e2-0badcf2b0a04 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3bb5f7cc-2e73-476e-89e2-0badcf2b0a04","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:48.4404318+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a384cd1e-b1a2-4505-96e4-99c5f0f9dab6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a384cd1e-b1a2-4505-96e4-99c5f0f9dab6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:48.4405478+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:48.4405742+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:48.4941193+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.5174ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5174,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:48.4942324+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6986ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6986,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:48.4994625+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ce0cde93-d6eb-4a3c-97d2-338a03d1cb51 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ce0cde93-d6eb-4a3c-97d2-338a03d1cb51","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:48.9986600+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7265b802-6973-417d-9d10-e521d5f7b260 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7265b802-6973-417d-9d10-e521d5f7b260","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:49.4998791+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b1a56827-c619-4f3f-8526-5519d719ea17 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b1a56827-c619-4f3f-8526-5519d719ea17","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:49.9945240+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aeccb67f-8ef0-40c7-8383-f5a49eca45cb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aeccb67f-8ef0-40c7-8383-f5a49eca45cb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:49.9946507+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:49.9946811+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:50.0489796+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2717ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2717,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:50.0490969+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.464ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.464,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:50.0544277+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_afa8dfdc-a77a-4b03-b0ea-69d7af2501c3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_afa8dfdc-a77a-4b03-b0ea-69d7af2501c3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:50.5562442+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_4821459d-2770-4523-be18-f6cde1f811a1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_4821459d-2770-4523-be18-f6cde1f811a1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:51.0597026+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_970e03d0-726f-43ce-b1f5-4eb12fca65d7 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_970e03d0-726f-43ce-b1f5-4eb12fca65d7","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:51.5568235+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"90a6ca83-3c16-4bfa-bc27-8c7c7f0ad790\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"90a6ca83-3c16-4bfa-bc27-8c7c7f0ad790\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:51.5569504+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:51.5569795+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:51.6115085+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.4989ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4989,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:51.6116058+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.6752ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.6752,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:51.6164631+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8eeb9743-9fbe-43cf-985b-60c834b84329 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8eeb9743-9fbe-43cf-985b-60c834b84329","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:52.1186802+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8c429c6d-b170-4acf-9436-463d921a41d1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8c429c6d-b170-4acf-9436-463d921a41d1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:52.6180369+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_14656d27-2270-46d8-b74b-5a68ffff3d2f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_14656d27-2270-46d8-b74b-5a68ffff3d2f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:53.1169860+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"049bc9aa-b4cf-4d72-9918-dc07a8301c27\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"049bc9aa-b4cf-4d72-9918-dc07a8301c27\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:53.1171110+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:53.1171417+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:53.1708037+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.6324ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6324,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:53.1709326+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.839ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.839,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:53.1766094+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9633593a-caae-40f1-b9e4-0af384c60958 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9633593a-caae-40f1-b9e4-0af384c60958","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:53.6796827+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c3f7878d-bf41-4623-90a9-c815d5147208 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c3f7878d-bf41-4623-90a9-c815d5147208","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:54.1793710+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b92dfc4e-b6f2-4c8a-abe4-406fa71bb005 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b92dfc4e-b6f2-4c8a-abe4-406fa71bb005","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:54.6764332+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8f02136a-b58a-428a-b139-230b4ee1fb07\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8f02136a-b58a-428a-b139-230b4ee1fb07\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:54.6765551+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:54.6765834+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:54.7357905+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.1786ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.1786,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:54.7359038+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.3636ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.3636,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:54.7412555+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1962771d-87f7-40ad-a2b3-db73badc4b12 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1962771d-87f7-40ad-a2b3-db73badc4b12","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:55.2443212+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2dbfb748-237c-4f4e-9a39-845e707236f3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2dbfb748-237c-4f4e-9a39-845e707236f3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:55.7433761+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_5b3cd184-d027-4594-95c3-cef51a22da84 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_5b3cd184-d027-4594-95c3-cef51a22da84","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:56.2423281+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d248f85f-6b71-4426-a4ad-2012c10c9a67\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d248f85f-6b71-4426-a4ad-2012c10c9a67\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:56.2424480+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:56.2424724+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:56.2968758+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.3725ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3725,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:56.2970014+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.5659ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.5659,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:56.3026370+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_119b8b97-0465-4ac7-b3c2-79edeeedc4a9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_119b8b97-0465-4ac7-b3c2-79edeeedc4a9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:56.8036439+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_94706ebf-6c39-4af5-8e25-9e2184386990 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_94706ebf-6c39-4af5-8e25-9e2184386990","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:57.3027950+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_067c5b32-db19-462b-992c-336238076161 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_067c5b32-db19-462b-992c-336238076161","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:57.8015880+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5e631b6e-1f3f-47d8-9deb-8308d5aec544\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5e631b6e-1f3f-47d8-9deb-8308d5aec544\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:57.8017078+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:57.8017339+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:57.8560870+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.3152ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3152,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:57.8562109+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.5172ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.5172,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:57.8617604+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_828017e3-6f78-4cba-a656-c8180cd51040 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_828017e3-6f78-4cba-a656-c8180cd51040","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:58.3628354+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_67d9fdfc-ddf6-4689-afa8-52ff266e2891 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_67d9fdfc-ddf6-4689-afa8-52ff266e2891","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:58.8644837+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6515ac11-452c-4628-aa96-777cc19a2849 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6515ac11-452c-4628-aa96-777cc19a2849","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:59.3594795+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"25f4bb71-26e7-4940-ae41-485896766358\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"25f4bb71-26e7-4940-ae41-485896766358\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:59.3596050+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:59.3596327+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:59.4168723+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.2093ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.2093,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:59.4169571+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.3693ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.3693,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S1N account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S1N", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="842a5b98-022f-4627-8f6e-db7d8c183254" testId="3b5445f8-d600-cbfc-f80f-fc6f971ce629" testName="JWTClient_IdIsPassedThroughToPOrch (Custom ClientId is passed,rX7sR1337,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiclg3c1IxMzM3IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.E_52mKv5ELlUwm9wWZ7t4nvazcsmhTr_A44dmBmqVBoc_YWhyPabJX9vGprE7dWqcvDI44C6GIWxjTZ-oA5-hQ,)" computerName="ip-10-130-163-65" duration="00:00:02.7951848" startTime="2025-09-12T15:39:31.5849033+12:00" endTime="2025-09-12T15:39:34.3873045+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="842a5b98-022f-4627-8f6e-db7d8c183254">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:31.5865790+12:00","LogLevel":"Information","Message":"Starting Test Execution: JWT client_id is passed through to POrch:[\"[Description, Custom ClientId is passed]\",\"[ClientID, rX7sR1337]\",\"[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiclg3c1IxMzM3IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.E_52mKv5ELlUwm9wWZ7t4nvazcsmhTr_A44dmBmqVBoc_YWhyPabJX9vGprE7dWqcvDI44C6GIWxjTZ-oA5-hQ]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"JWT client_id is passed through to POrch","scenarioInfo.Arguments":["[Description, Custom ClientId is passed]","[ClientID, rX7sR1337]","[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiclg3c1IxMzM3IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.E_52mKv5ELlUwm9wWZ7t4nvazcsmhTr_A44dmBmqVBoc_YWhyPabJX9vGprE7dWqcvDI44C6GIWxjTZ-oA5-hQ]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:31.7433276+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_47402587-acbe-451d-8913-b12c72ed5616 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_47402587-acbe-451d-8913-b12c72ed5616","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:32.1938756+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_319d7387-1161-4cf3-b417-29344b30cbbc for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_319d7387-1161-4cf3-b417-29344b30cbbc","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:32.6982613+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4ad6c0e6-6a04-4e8a-a17d-c5ffeb2cbc6b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4ad6c0e6-6a04-4e8a-a17d-c5ffeb2cbc6b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:33.1935795+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e1c37faa-f2db-4d83-9138-075e5230ca26\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e1c37faa-f2db-4d83-9138-075e5230ca26\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:33.1938102+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:33.1938718+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:33.8119141+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 617.9663ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":617.9663,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:33.8120639+12:00","LogLevel":"Information","Message":"End processing HTTP request after 618.2928ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":618.2928,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:33.8141456+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"1750b9d026204f86815cbe81f67e9a58\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:32.686Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:32.686Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"1750b9d026204f86815cbe81f67e9a58\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:32.686Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:32.686Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:33.8740063+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","MessageTemplate":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the JWT token will be eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiclg3c1IxMzM3IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.E_52mKv5ELlUwm9wWZ7t4nvazcsmhTr_A44dmBmqVBoc_YWhyPabJX9vGprE7dWqcvDI44C6GIWxjTZ-oA5-hQ
-&gt; done: PainMockedStepDefinitions.GivenTheJwtTokenWillBe("eyJ0eXAiOiJKV1QiL...") (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.6s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.1s)
And the outgoing request to Porch has the X-Client-Identifier header value of rX7sR1337
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchHasTheXClientIdentifierHeaderValueOf("X-Client-Identifier", "rX7sR1337") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dd3aa33d-58e3-4446-862f-826255c9f004" testId="99e35413-b1bb-f92b-f53d-141041e8b024" testName="UASRetriesForAllowedResponses (504,,)" computerName="ip-10-130-163-65" duration="00:00:02.5952035" startTime="2025-09-12T15:40:31.0054197+12:00" endTime="2025-09-12T15:40:33.6012189+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dd3aa33d-58e3-4446-862f-826255c9f004">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:31.0063107+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS retries for allowed responses:[\"[ErrorCode, 504]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 504]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:31.0126760+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f59352a6-5fa6-4b35-8ea5-49b3f490de97 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f59352a6-5fa6-4b35-8ea5-49b3f490de97","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:31.5155638+12:00","LogLevel":"Information","Message":"Successfully created map UAS_1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS_1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:31.5170299+12:00","LogLevel":"Information","Message":"Successfully created map UAS for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:32.0169262+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_74475dae-a65a-4ae7-a2a2-c673fb945b6a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_74475dae-a65a-4ae7-a2a2-c673fb945b6a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:32.5094425+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4173df4e-e8d1-47f5-a9d8-37fe5000a732\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4173df4e-e8d1-47f5-a9d8-37fe5000a732\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:32.5096139+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:32.5096592+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:33.0940285+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 584.3074ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":584.3074,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:33.0942193+12:00","LogLevel":"Information","Message":"End processing HTTP request after 584.6409ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":584.6409,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:33.0962311+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2ce1b2f699464c44b5049916a2b0352f\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:32.014Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:32.014Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2ce1b2f699464c44b5049916a2b0352f\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:32.014Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:32.014Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will return 504 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillReturnThenSuccessful("504") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "UAS") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f810b75f-6958-4d10-90e1-93af6a618161" testId="672cd772-47fc-5952-be85-b1b776c8a665" testName="UASRetriesToConfiguredMax" computerName="ip-10-130-163-65" duration="00:00:01.5466406" startTime="2025-09-12T15:41:07.6773150+12:00" endTime="2025-09-12T15:41:09.2242104+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f810b75f-6958-4d10-90e1-93af6a618161">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:07.6787133+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS retries to configured max:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS retries to configured max","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:07.6827368+12:00","LogLevel":"Information","Message":"Successfully created map UASError_500_1e25a892-0a26-40d0-bc39-feddec2e8efc for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_500_1e25a892-0a26-40d0-bc39-feddec2e8efc","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:08.1833074+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e997c69b-1c71-4842-8c8e-c23d473e1419\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e997c69b-1c71-4842-8c8e-c23d473e1419\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:08.1834956+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:08.1835339+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:08.7212638+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 537.6824ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":537.6824,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:08.7213842+12:00","LogLevel":"Information","Message":"End processing HTTP request after 537.9105ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":537.9105,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:08.7216517+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"b4a02f0004054cb48f5b91fa7d42e5d6\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:08.719Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"b4a02f0004054cb48f5b91fa7d42e5d6\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:08.719Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the UAS mock response will be 500
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("500") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 2 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(2) (0.0s)
And there are 2 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "UAS") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="290153b6-b273-47d1-b65d-fb11e88e0f3d" testId="49461e46-4f91-0e9d-6ad0-95595e11df66" testName="PainCorrectlyCreatesTheTransferRefField (Successful Core to Legacy,Core,LegacyCore,TMVToLegacy,)" computerName="ip-10-130-163-65" duration="00:00:02.0606500" startTime="2025-09-12T15:48:55.1964365+12:00" endTime="2025-09-12T15:48:57.2572592+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="290153b6-b273-47d1-b65d-fb11e88e0f3d">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:48:55.1973975+12:00","LogLevel":"Information","Message":"Starting Test Execution: Pain correctly creates the transfer ref field:[\"[Description, Successful Core to Legacy]\",\"[DebtorFieldValue, Core]\",\"[CreditorFieldValue, LegacyCore]\",\"[TransferRefType, TMVToLegacy]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Pain correctly creates the transfer ref field","scenarioInfo.Arguments":["[Description, Successful Core to Legacy]","[DebtorFieldValue, Core]","[CreditorFieldValue, LegacyCore]","[TransferRefType, TMVToLegacy]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:55.2014827+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_09336947-0991-41a6-be35-a08feecbbb73 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_09336947-0991-41a6-be35-a08feecbbb73","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:55.7070039+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_cb2cb28a-2989-4050-8490-c011c9621aee for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_cb2cb28a-2989-4050-8490-c011c9621aee","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:56.2067098+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2279d86c-f269-4e1f-bea0-c8f8cb31ca3a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2279d86c-f269-4e1f-bea0-c8f8cb31ca3a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:56.7039973+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d79fb634-4c01-4c93-a2a2-d274affaa567\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d79fb634-4c01-4c93-a2a2-d274affaa567\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:56.7040989+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:56.7041246+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:56.7590574+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.9006ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.9006,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:56.7591628+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.0769ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0769,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:56.7594424+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"5f31940dc0a84867a65e49003505875a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:48:56.204Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:48:56.204Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"5f31940dc0a84867a65e49003505875a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:48:56.204Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:48:56.204Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:56.7607933+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"debtorAccountSource\": \"TMV\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"transferRef\": \"TRANSFER FROM DEBTOR ACCOUNT - 03\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","MessageTemplate":"Captured request is:\n{\n  \"debtorAccountSource\": \"TMV\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"transferRef\": \"TRANSFER FROM DEBTOR ACCOUNT - 03\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Core") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the outgoing request to Porch contains the correct transferRef for type TMVToLegacy
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchContainsTheCorrectTransferRefForType("TMVToLegacy") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a516345b-bc25-4c20-99a9-550c21ba2656" testId="b330ff7e-8af7-1712-c4c5-aa4af30ad36a" testName="PainCorrectlyCreatesTheTransferRefField (Successful Legacy to Core,LegacyCore,Core,LegacyToTMV,)" computerName="ip-10-130-163-65" duration="00:00:02.0673147" startTime="2025-09-12T15:48:57.2575765+12:00" endTime="2025-09-12T15:48:59.3250800+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a516345b-bc25-4c20-99a9-550c21ba2656">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:48:57.2581302+12:00","LogLevel":"Information","Message":"Starting Test Execution: Pain correctly creates the transfer ref field:[\"[Description, Successful Legacy to Core]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, Core]\",\"[TransferRefType, LegacyToTMV]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Pain correctly creates the transfer ref field","scenarioInfo.Arguments":["[Description, Successful Legacy to Core]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, Core]","[TransferRefType, LegacyToTMV]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:57.2664424+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_15040e9e-bfdc-451a-8809-f1b88e3717dc for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_15040e9e-bfdc-451a-8809-f1b88e3717dc","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:57.7702165+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_937e9b58-a337-444d-9761-84533ac3e848 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_937e9b58-a337-444d-9761-84533ac3e848","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:58.2683325+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_5787f3c7-5aad-4c86-aecb-fb713dd25256 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_5787f3c7-5aad-4c86-aecb-fb713dd25256","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:58.7690017+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1277d70f-042e-4bf3-8879-cccdfc6024c6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1277d70f-042e-4bf3-8879-cccdfc6024c6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:58.7691068+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:58.7691351+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:58.8232996+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.1359ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.1359,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:58.8234259+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.3319ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3319,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:58.8236623+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"55d5f1722a43478eb834ee74e4d0fa8b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:48:58.265Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:48:58.265Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"55d5f1722a43478eb834ee74e4d0fa8b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:48:58.265Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:48:58.265Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:58.8248104+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"TMV\",\n  \"transferRef\": \"TRANSFER TO CREDITOR ACCOUNT - 09\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","MessageTemplate":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"TMV\",\n  \"transferRef\": \"TRANSFER TO CREDITOR ACCOUNT - 09\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the outgoing request to Porch contains the correct transferRef for type LegacyToTMV
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchContainsTheCorrectTransferRefForType("LegacyToTMV") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6f3b5613-c493-4a6b-b0f9-1d472633a439" testId="99f21a2f-2e4a-b2b5-ffcf-c75141aa4086" testName="DebtorAccountHasInsufficientBalanceFromUASButPaymentIsSuccessful" computerName="ip-10-130-163-65" duration="00:00:02.0688749" startTime="2025-09-12T15:41:32.2495144+12:00" endTime="2025-09-12T15:41:34.3186357+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6f3b5613-c493-4a6b-b0f9-1d472633a439">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:32.2511560+12:00","LogLevel":"Information","Message":"Starting Test Execution: Debtor account has insufficient balance from UAS but payment is successful:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Debtor account has insufficient balance from UAS but payment is successful","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:32.2554835+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3d9c01fe-44a0-4ab9-b166-3d4d033e02d8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3d9c01fe-44a0-4ab9-b166-3d4d033e02d8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:32.7576316+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a52906ed-0615-4b97-b13f-4089f5ace87f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a52906ed-0615-4b97-b13f-4089f5ace87f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:33.2599293+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_26d2d898-354f-4d16-8ed8-f3ceb46fcd30 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_26d2d898-354f-4d16-8ed8-f3ceb46fcd30","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:33.7533088+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebdf4345-364c-47d1-9f7b-3559d6eb429a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebdf4345-364c-47d1-9f7b-3559d6eb429a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:33.7534232+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:33.7534547+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:33.8144355+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 60.949ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.949,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:33.8145421+12:00","LogLevel":"Information","Message":"End processing HTTP request after 61.1349ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.1349,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:33.8148763+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f765910d90b34551bd1130dfa53dbf77\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:33.257Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:33.257Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f765910d90b34551bd1130dfa53dbf77\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:33.257Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:33.257Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountBalance set to 0.99
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountBalance", "0.99") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="576a4f77-3ec0-4e4d-a7d9-6f2293895d8e" testId="59c88573-0e7e-815d-22f3-9b34515fa396" testName="PorchRetriesForAllowedResponses (503,,)" computerName="ip-10-130-163-65" duration="00:00:02.6013885" startTime="2025-09-12T15:40:36.1871089+12:00" endTime="2025-09-12T15:40:38.7888139+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="576a4f77-3ec0-4e4d-a7d9-6f2293895d8e">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:36.1888814+12:00","LogLevel":"Information","Message":"Starting Test Execution: Porch retries for allowed responses:[\"[ErrorCode, 503]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Porch retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 503]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:36.1931815+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_234fbfad-11c3-45d6-9e9d-69a2db62378d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_234fbfad-11c3-45d6-9e9d-69a2db62378d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:36.6982772+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_d967400f-1dc6-4c19-911b-107706ad5f04 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_d967400f-1dc6-4c19-911b-107706ad5f04","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:37.1974759+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_a95e5920-1fe7-44dc-b41a-84b74781062a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_a95e5920-1fe7-44dc-b41a-84b74781062a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:37.1988140+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_a95e5920-1fe7-44dc-b41a-84b74781062a_1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_a95e5920-1fe7-44dc-b41a-84b74781062a_1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:37.6929315+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cb702bb3-3916-457b-b45b-98e4747d2ff7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cb702bb3-3916-457b-b45b-98e4747d2ff7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:37.6930881+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:37.6931205+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:38.2881740+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 595.0075ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":595.0075,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:38.2882910+12:00","LogLevel":"Information","Message":"End processing HTTP request after 595.2179ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":595.2179,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:38.2886199+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2f5907feeecc4727b9784695d21e72ae\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:37.194Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:37.194Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2f5907feeecc4727b9784695d21e72ae\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:37.194Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:37.194Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will return 503 then successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchTransferMockResponseWillReturnThenSuccessful("transfer", "503") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "POrchTransfer") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="86b2c2d3-c6bf-479f-a8a5-e755285a0360" testId="f39c6877-1863-f10d-e1d5-a113334db8bb" testName="OtherPOrchErrorsDoNotRetry (408,message,Internal Server Error,)" computerName="ip-10-130-163-65" duration="00:00:02.0778138" startTime="2025-09-12T15:40:58.9285203+12:00" endTime="2025-09-12T15:41:01.0067576+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="86b2c2d3-c6bf-479f-a8a5-e755285a0360">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:58.9296466+12:00","LogLevel":"Information","Message":"Starting Test Execution: Other POrch errors do not retry:[\"[ErrorCode, 408]\",\"[ErrorField, message]\",\"[ErrorValue, Internal Server Error]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Other POrch errors do not retry","scenarioInfo.Arguments":["[ErrorCode, 408]","[ErrorField, message]","[ErrorValue, Internal Server Error]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:58.9337049+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2db18353-da21-4d34-bbc4-c0f88e46f6d1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2db18353-da21-4d34-bbc4-c0f88e46f6d1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:59.4385051+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_4ff4de3b-7eb4-46ee-a459-ef7c37befd5f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_4ff4de3b-7eb4-46ee-a459-ef7c37befd5f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:59.9421695+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_f5da40cb-a438-43a5-a25f-3b011ac4c1ba for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_f5da40cb-a438-43a5-a25f-3b011ac4c1ba","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:59.9422362+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_f5da40cb-a438-43a5-a25f-3b011ac4c1ba_1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_f5da40cb-a438-43a5-a25f-3b011ac4c1ba_1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:00.4429967+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"331b6e18-c357-428a-8f96-6c0229c57752\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"331b6e18-c357-428a-8f96-6c0229c57752\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:00.4431512+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:00.4431957+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:00.5010086+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.7646ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.7646,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:00.5011336+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.005ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.005,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:00.5014200+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will return 408 then successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchTransferMockResponseWillReturnThenSuccessful("transfer", "408") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And there are 1 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "POrchTransfer") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                 |
  | $.errors[0].message | Internal Server Error |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7b044bab-0193-4ac0-8fd2-29aae9fc7a68" testId="2c80bca1-5598-bc16-c422-eff5305c50cb" testName="AccountTypeRulesForTransfers_AllowedPaths (Successful Core to Core,Core,Core,)" computerName="ip-10-130-163-65" duration="00:00:02.0777049" startTime="2025-09-12T15:41:17.9899576+12:00" endTime="2025-09-12T15:41:20.0679534+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b044bab-0193-4ac0-8fd2-29aae9fc7a68">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:17.9905329+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - allowed paths:[\"[Description, Successful Core to Core]\",\"[DebtorFieldValue, Core]\",\"[CreditorFieldValue, Core]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - allowed paths","scenarioInfo.Arguments":["[Description, Successful Core to Core]","[DebtorFieldValue, Core]","[CreditorFieldValue, Core]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:17.9953619+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5ba8288a-d0c6-4d1d-8307-77057fb478f6 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5ba8288a-d0c6-4d1d-8307-77057fb478f6","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:18.4993902+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d048b1af-b3c1-46b3-a296-857494189794 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d048b1af-b3c1-46b3-a296-857494189794","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:18.9990512+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_93b1a410-ed2f-47c5-b400-639a3721e923 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_93b1a410-ed2f-47c5-b400-639a3721e923","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:19.4937086+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebb64bf3-3636-4ac3-8ef0-5e981d6936f9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebb64bf3-3636-4ac3-8ef0-5e981d6936f9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:19.4938690+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:19.4939030+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:19.5659416+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 71.9974ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":71.9974,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:19.5660434+12:00","LogLevel":"Information","Message":"End processing HTTP request after 72.1938ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":72.1938,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:19.5663792+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"6074c4157157451eb6a338b43b852d40\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:18.996Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:18.996Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"6074c4157157451eb6a338b43b852d40\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:18.996Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:18.996Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Core") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fae396a3-a255-4da0-a752-87c05322c958" testId="8ef45f61-55b4-2a13-1c8e-55f37b11dd29" testName="OPARetriesForAllowedResponses (408,,)" computerName="ip-10-130-163-65" duration="00:00:02.6335232" startTime="2025-09-12T15:39:47.0042389+12:00" endTime="2025-09-12T15:39:49.6381118+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fae396a3-a255-4da0-a752-87c05322c958">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:47.0049328+12:00","LogLevel":"Information","Message":"Starting Test Execution: OPA retries for allowed responses:[\"[ErrorCode, 408]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"OPA retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 408]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:47.0108255+12:00","LogLevel":"Information","Message":"Successfully created map OPA for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:47.0109418+12:00","LogLevel":"Information","Message":"Successfully created map OPA_1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA_1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:47.5173069+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_e51ab7cc-e761-44c5-b1f8-3d1daf882017 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_e51ab7cc-e761-44c5-b1f8-3d1daf882017","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:48.0163245+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_937294cf-ac83-4fab-90a2-1d5e6ccd8bb3 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_937294cf-ac83-4fab-90a2-1d5e6ccd8bb3","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:48.5137639+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5b8a4745-4b5b-45ea-83b0-5bc442b3a3bc\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5b8a4745-4b5b-45ea-83b0-5bc442b3a3bc\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:48.5139259+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:48.5139644+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:49.1083076+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 594.2793ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":594.2793,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:49.1084356+12:00","LogLevel":"Information","Message":"End processing HTTP request after 594.5295ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":594.5295,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:49.1093423+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2a80f6bacc5242ac972595e0f501418a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:48.012Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:48.012Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2a80f6bacc5242ac972595e0f501418a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:48.012Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:48.012Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will return 408 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBeThenSuccessful("408") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the OPA mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "OPA") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3fdcdf1a-d04d-4aa5-a2ec-382b42fb28d0" testId="9e2eea2f-e2fc-71d6-ac11-dce0ab73068c" testName="UASRetriesForAllowedResponses (503,,)" computerName="ip-10-130-163-65" duration="00:00:02.5906611" startTime="2025-09-12T15:40:28.4139103+12:00" endTime="2025-09-12T15:40:31.0048650+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3fdcdf1a-d04d-4aa5-a2ec-382b42fb28d0">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:28.4144677+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS retries for allowed responses:[\"[ErrorCode, 503]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 503]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:28.4209514+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9bca5a70-5aa6-4801-9da6-f4067ee61be5 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9bca5a70-5aa6-4801-9da6-f4067ee61be5","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:28.9270409+12:00","LogLevel":"Information","Message":"Successfully created map UAS_1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS_1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:28.9290428+12:00","LogLevel":"Information","Message":"Successfully created map UAS for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:29.4268101+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_caf3ac52-4934-4e50-8539-87cf5b4f670f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_caf3ac52-4934-4e50-8539-87cf5b4f670f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:29.9215076+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"02f0674e-271c-4a9c-ba98-a7df2cbce1dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"02f0674e-271c-4a9c-ba98-a7df2cbce1dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:29.9216934+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:29.9217420+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:30.4967421+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 574.9415ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":574.9415,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:30.4968548+12:00","LogLevel":"Information","Message":"End processing HTTP request after 575.1789ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":575.1789,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:30.4971470+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"913d341114fa4014bb028a70f5a908a2\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:29.424Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:29.424Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"913d341114fa4014bb028a70f5a908a2\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:29.424Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:29.424Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will return 503 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillReturnThenSuccessful("503") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "UAS") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a04f811b-6280-4adf-b63c-329da605ee9c" testId="efc3bcb0-daad-9059-b0e7-9379955f06d5" testName="UASRetriesForAllowedResponses (408,,)" computerName="ip-10-130-163-65" duration="00:00:02.5842740" startTime="2025-09-12T15:40:33.6017828+12:00" endTime="2025-09-12T15:40:36.1865306+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a04f811b-6280-4adf-b63c-329da605ee9c">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:33.6025814+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS retries for allowed responses:[\"[ErrorCode, 408]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 408]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:33.6078865+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_25b1c95a-800c-45a6-91e9-b8010a649442 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_25b1c95a-800c-45a6-91e9-b8010a649442","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:34.1107709+12:00","LogLevel":"Information","Message":"Successfully created map UAS for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:34.1120173+12:00","LogLevel":"Information","Message":"Successfully created map UAS_1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS_1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:34.6122038+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3e50b42a-bc0d-4841-919c-eafd50305780 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3e50b42a-bc0d-4841-919c-eafd50305780","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:35.1048825+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1f9ed87d-ee68-4955-b28b-30a2d60a6e95\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1f9ed87d-ee68-4955-b28b-30a2d60a6e95\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:35.1050400+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:35.1050713+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:35.6807621+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 575.6371ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":575.6371,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:35.6808741+12:00","LogLevel":"Information","Message":"End processing HTTP request after 575.8709ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":575.8709,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:35.6813692+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"14f084c4eb2147e58a1a7a683d06c999\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:34.609Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:34.609Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"14f084c4eb2147e58a1a7a683d06c999\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:34.609Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:34.609Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will return 408 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillReturnThenSuccessful("408") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "UAS") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="09f81674-1c59-49d2-ab6a-7431b84e6d8e" testId="c40f6989-18a7-2d9e-b102-a468d4299a05" testName="FreezeStatus_Successful (Successful None to type 2,none,creditor,AgainstAllWithdrawalsFromThisAccount,)" computerName="ip-10-130-163-65" duration="00:00:02.0689805" startTime="2025-09-12T15:42:04.7749252+12:00" endTime="2025-09-12T15:42:06.8441413+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="09f81674-1c59-49d2-ab6a-7431b84e6d8e">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:04.7767689+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Successful:[\"[Description, Successful None to type 2]\",\"[DebtorFieldValue, none]\",\"[WhichAccountFrozen, creditor]\",\"[CreditorFieldValue, AgainstAllWithdrawalsFromThisAccount]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Successful","scenarioInfo.Arguments":["[Description, Successful None to type 2]","[DebtorFieldValue, none]","[WhichAccountFrozen, creditor]","[CreditorFieldValue, AgainstAllWithdrawalsFromThisAccount]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:04.7809877+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2dc0f023-1f8e-4dd7-9ac5-ea603b5a1db1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2dc0f023-1f8e-4dd7-9ac5-ea603b5a1db1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:05.2862635+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_98ad4a46-d6fd-4640-b350-77d6541d7a19 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_98ad4a46-d6fd-4640-b350-77d6541d7a19","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:05.7876091+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a20f1f7d-ff0d-4759-84e9-3fef81e6c44b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a20f1f7d-ff0d-4759-84e9-3fef81e6c44b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:06.2844944+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1baf73cf-20f9-4407-b54d-bba2bd4ac9e7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1baf73cf-20f9-4407-b54d-bba2bd4ac9e7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:06.2845934+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:06.2846200+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:06.3412619+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 56.6129ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.6129,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:06.3413675+12:00","LogLevel":"Information","Message":"End processing HTTP request after 56.788ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.788,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:06.3420330+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3868d46eecda4c33b0ad0282a85520a8\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:05.785Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:05.785Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3868d46eecda4c33b0ad0282a85520a8\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:05.785Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:05.785Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "none") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to AgainstAllWithdrawalsFromThisAccount
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "AgainstAllWithdra...") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                |         |
  | creditorAccountNumber              |         |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f5f26831-f58a-44e2-8ca4-27b014f6c6a9" testId="ace05726-0023-1ea8-2630-d87474842a27" testName="PorchRetriesToConfiguredMax" computerName="ip-10-130-163-65" duration="00:00:02.5512890" startTime="2025-09-12T15:41:05.1253739+12:00" endTime="2025-09-12T15:41:07.6769275+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f5f26831-f58a-44e2-8ca4-27b014f6c6a9">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:05.1267789+12:00","LogLevel":"Information","Message":"Starting Test Execution: Porch retries to configured max:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Porch retries to configured max","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:05.1308895+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ecbf40b4-1ecb-4b87-8df2-bf62c5693c2d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ecbf40b4-1ecb-4b87-8df2-bf62c5693c2d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:05.6312057+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_04ea103a-f559-4e4d-a00e-d5bee532f32b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_04ea103a-f559-4e4d-a00e-d5bee532f32b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:06.1333030+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1e46e181-ded7-4855-82d7-541cffb4d79b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1e46e181-ded7-4855-82d7-541cffb4d79b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:06.6303882+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"df9ab615-ff1a-42cd-b6ee-8210830f7b1f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"df9ab615-ff1a-42cd-b6ee-8210830f7b1f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:06.6305279+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:06.6305582+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:07.1729160+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 542.3086ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":542.3086,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:07.1730213+12:00","LogLevel":"Information","Message":"End processing HTTP request after 542.5137ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":542.5137,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:07.1736272+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be 503
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "503") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "POrchTransfer") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bfa1719c-64c2-44b6-ac34-21418b1ecc3a" testId="aeecf30a-fb62-2197-7286-04433123f061" testName="AccountStatusRules (Unsuccessful Opened to Unknown,Opened,Unknown,Creditor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0242878" startTime="2025-09-12T15:41:44.5060343+12:00" endTime="2025-09-12T15:41:46.5305597+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bfa1719c-64c2-44b6-ac34-21418b1ecc3a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:44.5065021+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Opened to Unknown]\",\"[DebtorFieldValue, Opened]\",\"[CreditorFieldValue, Unknown]\",\"[ErrorMessage, Creditor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Opened to Unknown]","[DebtorFieldValue, Opened]","[CreditorFieldValue, Unknown]","[ErrorMessage, Creditor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:44.5100137+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1a77987b-6006-4c0b-9e65-c330825ce8f4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1a77987b-6006-4c0b-9e65-c330825ce8f4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:45.0163206+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_901c70a3-2453-4a95-bc91-e622b079e0f7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_901c70a3-2453-4a95-bc91-e622b079e0f7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:45.5162426+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_9a002941-5ab8-4844-b180-a7c3d2951de8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_9a002941-5ab8-4844-b180-a7c3d2951de8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:46.0129019+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f9a2dd33-fc2a-4ff3-a675-59643440f340\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f9a2dd33-fc2a-4ff3-a675-59643440f340\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:46.0130063+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:46.0130331+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:46.0280595+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.9968ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.9968,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:46.0281667+12:00","LogLevel":"Information","Message":"End processing HTTP request after 15.1729ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.1729,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:46.0286204+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"c109534b865b4580a7b9407468375751\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:46.027Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"c109534b865b4580a7b9407468375751\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:46.027Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Opened") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Unknown
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Unknown") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                 |
  | __typename                         | UnsuccessfulPayment                   |
  | debtorAccountNumber                |                                       |
  | creditorAccountNumber              |                                       |
  | paymentId                          | *                                     |
  | paymentInstructionCreationDateTime | *                                     |
  | initiatingAccessNumber             | *                                     |
  | debtorAccountCode                  | *                                     |
  | debtorAccountParticulars           | *                                     |
  | debtorAccountReference             | *                                     |
  | creditorAccountCode                | *                                     |
  | creditorAccountParticulars         | *                                     |
  | creditorAccountReference           | *                                     |
  | amount                             | *                                     |
  | code                               | INVALID_ACCOUNT_STATE                 |
  | message                            | Creditor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="082ad610-3601-443b-ac6b-8c746f89114a" testId="6fe3f6fd-f4a6-a627-1f37-0bc420755f18" testName="PainCorrectlyCreatesTheTransferRefField (Successful Legacy to Legacy,LegacyCore,LegacyCore,LegacyToLegacy,)" computerName="ip-10-130-163-65" duration="00:00:02.0825208" startTime="2025-09-12T15:48:53.1128942+12:00" endTime="2025-09-12T15:48:55.1961187+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="082ad610-3601-443b-ac6b-8c746f89114a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:48:53.1157055+12:00","LogLevel":"Information","Message":"Starting Test Execution: Pain correctly creates the transfer ref field:[\"[Description, Successful Legacy to Legacy]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, LegacyCore]\",\"[TransferRefType, LegacyToLegacy]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Pain correctly creates the transfer ref field","scenarioInfo.Arguments":["[Description, Successful Legacy to Legacy]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, LegacyCore]","[TransferRefType, LegacyToLegacy]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:53.1203048+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f809e9ab-03cc-44b6-aa0c-5537990da7e2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f809e9ab-03cc-44b6-aa0c-5537990da7e2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:53.6290165+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9097045e-fbcb-498f-a4fd-93bc6b231db8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9097045e-fbcb-498f-a4fd-93bc6b231db8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:54.1281331+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_bb6de938-8a06-4d85-8c64-35ed0f52b38b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_bb6de938-8a06-4d85-8c64-35ed0f52b38b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:54.6251421+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"46c1d5b2-f789-45ce-adc1-f1fc6d405476\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"46c1d5b2-f789-45ce-adc1-f1fc6d405476\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:54.6252425+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:54.6252689+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:54.6873359+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 62.0366ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":62.0366,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:54.6877728+12:00","LogLevel":"Information","Message":"End processing HTTP request after 62.541ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":62.541,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:54.6880313+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"9a72951f8ab5402787e138a93ceaf1a3\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:48:54.125Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:48:54.125Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"9a72951f8ab5402787e138a93ceaf1a3\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:48:54.125Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:48:54.125Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:54.6910016+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","MessageTemplate":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the outgoing request to Porch contains the correct transferRef for type LegacyToLegacy
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchContainsTheCorrectTransferRefForType("LegacyToLegacy") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c7b00b53-d22c-4431-81ca-216468616cd5" testId="7960eede-2276-2dd4-a89b-e1527158ca2e" testName="ErrorResponseCodesFromUAS (403,,)" computerName="ip-10-130-163-65" duration="00:00:01.5171725" startTime="2025-09-12T15:49:10.6656658+12:00" endTime="2025-09-12T15:49:12.1829956+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c7b00b53-d22c-4431-81ca-216468616cd5">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:10.6664766+12:00","LogLevel":"Information","Message":"Starting Test Execution: Error response codes from UAS:[\"[ErrorCode, 403]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Error response codes from UAS","scenarioInfo.Arguments":["[ErrorCode, 403]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:10.6699141+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d06cd53b-6a52-467f-b84f-295d521b9894 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d06cd53b-6a52-467f-b84f-295d521b9894","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:11.1706253+12:00","LogLevel":"Information","Message":"Successfully created map UASError_403_eb95a067-a525-45c4-9785-d2da919cfbce for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_403_eb95a067-a525-45c4-9785-d2da919cfbce","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:11.6653774+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"12728069-7b22-4fc8-b09b-8f947de96bcb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"12728069-7b22-4fc8-b09b-8f947de96bcb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:11.6654814+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:11.6655090+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:11.6792598+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.7239ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7239,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:11.6793934+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9231ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9231,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:11.6798405+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"e97f44c5152747c0b2dbb1019ef73925\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:11.678Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"e97f44c5152747c0b2dbb1019ef73925\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:11.678Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be 403
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("403") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2e518ed7-d0d7-409f-a7fd-a53ddd2e0738" testId="88934b0e-c038-0921-ddb1-7be23d7a052c" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S1,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.4256777" startTime="2025-09-12T15:42:15.1407235+12:00" endTime="2025-09-12T15:42:37.5668240+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2e518ed7-d0d7-409f-a7fd-a53ddd2e0738">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:15.1422206+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S1]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S1]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:15.1514936+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e45ed5fd-00f8-45f3-8e8e-1cdab7deca9d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e45ed5fd-00f8-45f3-8e8e-1cdab7deca9d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:15.6519793+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ad5478db-f97c-412b-8a4a-eb05a9f5006a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ad5478db-f97c-412b-8a4a-eb05a9f5006a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:16.1518364+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a94bf7c2-784d-428f-8e53-03d763eb69fc for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a94bf7c2-784d-428f-8e53-03d763eb69fc","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:16.6526963+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a1919f2a-be9b-4920-80ea-c42114ebc56f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a1919f2a-be9b-4920-80ea-c42114ebc56f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:16.6528334+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:16.6528622+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:16.7081243+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.2287ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.2287,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:16.7082216+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.4072ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.4072,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:16.7134608+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ba2a13a6-8793-4815-a3eb-1b281c8e424d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ba2a13a6-8793-4815-a3eb-1b281c8e424d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:17.2145449+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a7131365-745e-4f8e-ae75-f4ebadbc43d7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a7131365-745e-4f8e-ae75-f4ebadbc43d7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:17.7117620+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e56fd5ea-4fef-4136-b39f-9f9771fabc12 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e56fd5ea-4fef-4136-b39f-9f9771fabc12","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:18.2145108+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0b4ea717-6fcd-47bc-bb30-a0bed765f879\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0b4ea717-6fcd-47bc-bb30-a0bed765f879\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:18.2146602+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:18.2146936+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:18.2689336+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2038ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2038,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:18.2690493+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.4138ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4138,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:18.2748434+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9cad42b1-bfc7-4afa-9936-0c234d0bace0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9cad42b1-bfc7-4afa-9936-0c234d0bace0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:18.7739936+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d9a3045a-21a3-48ea-affc-c327cec754fe for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d9a3045a-21a3-48ea-affc-c327cec754fe","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:19.2754956+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f2f60867-c13f-4897-bfa5-6c51e0222dd1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f2f60867-c13f-4897-bfa5-6c51e0222dd1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:19.7744638+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"76d2f4b2-479a-4858-b90a-ad33a22ed31a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"76d2f4b2-479a-4858-b90a-ad33a22ed31a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:19.7745944+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:19.7746235+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:19.8358741+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 61.2194ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.2194,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:19.8359782+12:00","LogLevel":"Information","Message":"End processing HTTP request after 61.4061ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.4061,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:19.8426488+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_de7efd0a-2ded-4d65-92c6-aa8d6303fed8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_de7efd0a-2ded-4d65-92c6-aa8d6303fed8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:20.3422574+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_40890aa2-f268-4bd0-bf43-57d51f6c6b05 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_40890aa2-f268-4bd0-bf43-57d51f6c6b05","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:20.8416110+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_472e058e-cb41-4ffd-aff2-6cff3a543c49 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_472e058e-cb41-4ffd-aff2-6cff3a543c49","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:21.3425347+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"94b43001-5ce9-4fbc-a19b-2c1f06313d24\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"94b43001-5ce9-4fbc-a19b-2c1f06313d24\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:21.3426860+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:21.3427280+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:21.4219560+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 79.1956ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":79.1956,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:21.4220768+12:00","LogLevel":"Information","Message":"End processing HTTP request after 79.416ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":79.416,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:21.4303353+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8afa9a4d-e0b9-453b-bfb7-5fdba63a1f6e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8afa9a4d-e0b9-453b-bfb7-5fdba63a1f6e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:21.9302538+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1fd5f5da-e9c5-4420-92ad-7dc2ede6cbc9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1fd5f5da-e9c5-4420-92ad-7dc2ede6cbc9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:22.4312192+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0b6bc768-3300-4309-8afa-7e85ec9cb06a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0b6bc768-3300-4309-8afa-7e85ec9cb06a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:22.9280984+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d0ef484e-d903-43b4-a2af-f4d1cf048ba8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d0ef484e-d903-43b4-a2af-f4d1cf048ba8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:22.9282282+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:22.9282563+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:22.9926104+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 64.3258ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":64.3258,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:22.9927192+12:00","LogLevel":"Information","Message":"End processing HTTP request after 64.5149ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":64.5149,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:22.9975566+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b16b0228-cd75-4157-befa-f45d065b1299 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b16b0228-cd75-4157-befa-f45d065b1299","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:23.4984563+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_07972255-c0c1-43a3-b988-14fca3b913f9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_07972255-c0c1-43a3-b988-14fca3b913f9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:24.0017631+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_62fb0cf6-bda9-44ac-83b9-276bbce82b75 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_62fb0cf6-bda9-44ac-83b9-276bbce82b75","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:24.5004091+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0ff4e939-bce0-452b-8625-9100ee1f3383\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0ff4e939-bce0-452b-8625-9100ee1f3383\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:24.5005216+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:24.5005473+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:24.5594202+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.8448ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.8448,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:24.5595320+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.0242ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.0242,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:24.5710021+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_195eef06-a95f-488c-8a0a-797b1f9ae0eb for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_195eef06-a95f-488c-8a0a-797b1f9ae0eb","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:25.0664443+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8b658b8b-29e7-4407-9780-9f05b43dcb46 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8b658b8b-29e7-4407-9780-9f05b43dcb46","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:25.5696610+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c65255e1-2be5-4e09-a8a4-d6d7a02a2c62 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c65255e1-2be5-4e09-a8a4-d6d7a02a2c62","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:26.0688932+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cd6bca1e-f2ca-4110-ab50-663cb088f634\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cd6bca1e-f2ca-4110-ab50-663cb088f634\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:26.0690146+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:26.0690437+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:26.1299028+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 60.8303ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.8303,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:26.1300036+12:00","LogLevel":"Information","Message":"End processing HTTP request after 61.0062ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.0062,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:26.1361983+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5eac7088-77fe-45f6-8bed-7326c76ac050 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5eac7088-77fe-45f6-8bed-7326c76ac050","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:26.6366079+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_387f83ac-3403-4454-a414-cf7618abcdec for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_387f83ac-3403-4454-a414-cf7618abcdec","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:27.1378793+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3a003d77-1e5f-4beb-aa91-178de8386212 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3a003d77-1e5f-4beb-aa91-178de8386212","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:27.6387434+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"afa08611-2984-4e36-904c-30e76b7805ae\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"afa08611-2984-4e36-904c-30e76b7805ae\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:27.6388557+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:27.6388810+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:27.6983458+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.4394ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.4394,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:27.6984650+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.6258ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.6258,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:27.7033852+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_18e05412-2091-4c03-baf8-d277438b5877 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_18e05412-2091-4c03-baf8-d277438b5877","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:28.2048291+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c4579911-94d0-45bd-aef3-7487ac93c5d7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c4579911-94d0-45bd-aef3-7487ac93c5d7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:28.7024151+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b48e1ba7-ecda-4433-9903-e6a5c2d77419 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b48e1ba7-ecda-4433-9903-e6a5c2d77419","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:29.2014712+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"345a110d-7479-4a17-a80d-60a91241a390\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"345a110d-7479-4a17-a80d-60a91241a390\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:29.2015829+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:29.2016083+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:29.2584217+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 56.7852ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.7852,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:29.2585396+12:00","LogLevel":"Information","Message":"End processing HTTP request after 56.9722ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.9722,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:29.2638871+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_303c9717-beb1-472f-9410-0b6e70583a01 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_303c9717-beb1-472f-9410-0b6e70583a01","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:29.7627023+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5b432e6b-baae-4f16-bd65-1ea21631b48f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5b432e6b-baae-4f16-bd65-1ea21631b48f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:30.2640427+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_43250ab8-7a38-4ada-a809-e6584a6e6b3b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_43250ab8-7a38-4ada-a809-e6584a6e6b3b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:30.7606335+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6863f805-b81f-4f87-a7ba-10d3b3572d42\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6863f805-b81f-4f87-a7ba-10d3b3572d42\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:30.7607556+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:30.7607813+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:30.8227186+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 61.9062ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.9062,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:30.8228149+12:00","LogLevel":"Information","Message":"End processing HTTP request after 62.078ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":62.078,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:30.8281940+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5aeb0436-1ef2-47c4-aaed-caf935e02ab9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5aeb0436-1ef2-47c4-aaed-caf935e02ab9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:31.3301205+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e8e2413c-1154-41b8-b8a9-042a5ddaa14b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e8e2413c-1154-41b8-b8a9-042a5ddaa14b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:31.8298435+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_03a2babd-7941-4ecc-9a11-c19a83ef104d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_03a2babd-7941-4ecc-9a11-c19a83ef104d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:32.3284875+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"07479fe3-9c58-4667-b33b-03b7e6a7f69a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"07479fe3-9c58-4667-b33b-03b7e6a7f69a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:32.3286280+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:32.3286747+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:32.3831377+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.4306ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4306,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:32.3832576+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.6463ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.6463,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:32.3889782+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d189c465-15db-472d-ad43-242e5926f318 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d189c465-15db-472d-ad43-242e5926f318","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:32.8931480+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b9543ca2-1abc-427c-ae66-2c9ae72488da for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b9543ca2-1abc-427c-ae66-2c9ae72488da","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:33.3910626+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fcbc73b3-e9c7-4fa9-bfc5-b2ff53046fc8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fcbc73b3-e9c7-4fa9-bfc5-b2ff53046fc8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:33.8880138+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e9519991-b311-4200-8ca3-fd1e0b1a5625\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e9519991-b311-4200-8ca3-fd1e0b1a5625\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:33.8881363+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:33.8881667+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:33.9420741+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.8677ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.8677,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:33.9421926+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.0726ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0726,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:33.9491131+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_cfa9754f-5be7-4829-a365-1bcb021ac549 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_cfa9754f-5be7-4829-a365-1bcb021ac549","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:34.4517632+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1ca46666-5e45-4068-9b4e-71aef0a920fc for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1ca46666-5e45-4068-9b4e-71aef0a920fc","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:34.9505986+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d1cf9cc5-bf1a-4abd-a04c-eef0cf94eec6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d1cf9cc5-bf1a-4abd-a04c-eef0cf94eec6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:35.4495632+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5c574f5e-634e-4d86-a4a1-d8a6beab0542\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5c574f5e-634e-4d86-a4a1-d8a6beab0542\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:35.4496723+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:35.4496984+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:35.5030139+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.2892ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2892,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:35.5031322+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.4736ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4736,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:35.5083526+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a10066b9-12e5-4320-a23e-d485a85fe4d4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a10066b9-12e5-4320-a23e-d485a85fe4d4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:36.0108006+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d7fd3e90-780f-43cf-864b-caca66e2a951 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d7fd3e90-780f-43cf-864b-caca66e2a951","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:36.5102407+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2ae9a58d-619d-492c-bba1-ef2c14b071ee for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2ae9a58d-619d-492c-bba1-ef2c14b071ee","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:37.0090960+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a82dc7fe-57b0-4a36-b9c2-f28d951fd37c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a82dc7fe-57b0-4a36-b9c2-f28d951fd37c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:37.0092197+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:37.0092468+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:37.0627286+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.4549ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4549,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:37.0628272+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6261ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6261,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S1 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S1", "S4, S9, S8, S1, S...") (21.9s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c06df0df-98ec-4ef4-8cd9-7082d058dfe6" testId="f1dbcb2b-6bae-3808-31f8-e7af5321c5d7" testName="OPARetriesForAllowedResponses (503,,)" computerName="ip-10-130-163-65" duration="00:00:02.6381558" startTime="2025-09-12T15:39:41.7580893+12:00" endTime="2025-09-12T15:39:44.3965790+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c06df0df-98ec-4ef4-8cd9-7082d058dfe6">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:41.7590258+12:00","LogLevel":"Information","Message":"Starting Test Execution: OPA retries for allowed responses:[\"[ErrorCode, 503]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"OPA retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 503]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:41.7642508+12:00","LogLevel":"Information","Message":"Successfully created map OPA_1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA_1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:41.7643390+12:00","LogLevel":"Information","Message":"Successfully created map OPA for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:42.2686354+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_2f54423e-61e5-4474-bb72-d8f87d57e2bf for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_2f54423e-61e5-4474-bb72-d8f87d57e2bf","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:42.7684148+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_06e6e944-b754-4103-a440-737b3d5fd1a5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_06e6e944-b754-4103-a440-737b3d5fd1a5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:43.2684210+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4e6331a8-aeb0-4644-b359-6baf594c7c05\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4e6331a8-aeb0-4644-b359-6baf594c7c05\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:43.2686053+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:43.2686658+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:43.8940379+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 625.3019ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":625.3019,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:43.8941972+12:00","LogLevel":"Information","Message":"End processing HTTP request after 625.6243ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":625.6243,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:43.8948468+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"b218ea306e824e3c934319fedf6a9982\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:42.765Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:42.765Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"b218ea306e824e3c934319fedf6a9982\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:42.765Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:42.765Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will return 503 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBeThenSuccessful("503") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the OPA mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "OPA") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2fe76d23-630a-4eb4-a53e-940a4c7e9863" testId="a0a9eb38-6c92-8037-1d1c-3f8f34e95f2a" testName="AccountIdFieldsAreMandatoryForTransfers" computerName="ip-10-130-163-65" duration="00:00:02.0717110" startTime="2025-09-12T15:49:01.3922913+12:00" endTime="2025-09-12T15:49:03.4647592+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2fe76d23-630a-4eb4-a53e-940a4c7e9863">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:01.3938210+12:00","LogLevel":"Information","Message":"Starting Test Execution: AccountId fields are mandatory for transfers:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"AccountId fields are mandatory for transfers","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:01.3974181+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_dd041440-d8c9-4b38-bfca-592942545263 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_dd041440-d8c9-4b38-bfca-592942545263","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:01.9038439+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_deb73856-9a15-4a88-892e-c667bfe5a257 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_deb73856-9a15-4a88-892e-c667bfe5a257","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:02.3997261+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_076934f9-7b5e-4aa7-9c0e-139ebdaf2889 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_076934f9-7b5e-4aa7-9c0e-139ebdaf2889","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:02.9023945+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"53af98e6-9bad-490b-851f-4a8d529f9414\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"53af98e6-9bad-490b-851f-4a8d529f9414\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:02.9025074+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:02.9025361+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:02.9574085+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.844ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.844,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:02.9575101+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.0168ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0168,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:02.9577409+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3ca960da81744957ab618ceb2cf1ba30\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:02.397Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:02.397Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3ca960da81744957ab618ceb2cf1ba30\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:02.397Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:02.397Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:02.9622252+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","MessageTemplate":"Captured request is:\n{\n  \"debtorAccountSource\": \"Ultracs\",\n  \"creditorAccountSource\": \"Ultracs\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And the outgoing request to Porch contains the fields:
  --- table step argument ---
  | Field               | Value                                   |
  | $.debtorAccountId   | lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c |
  | $.creditorAccountId | lc_a47b5129-4085-46b6-9f65-baf821fa6b94 |
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchHasTheFieldValueOf("Porch", &lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="611a3949-88c0-4d87-ba5b-d8a597461f12" testId="ff3fe98c-7cb9-28c3-23a0-c996805f9c98" testName="UASDoesNotReturnAResponse" computerName="ip-10-130-163-65" startTime="2025-09-12T15:49:24.8803294+12:00" endTime="2025-09-12T15:49:24.8809507+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="611a3949-88c0-4d87-ba5b-d8a597461f12">
      <Output></Output>
    </UnitTestResult>
    <UnitTestResult executionId="ad72de16-3bd7-40b2-9711-f2a5c406d0c4" testId="3583df6b-2018-57da-0ded-16b8e8188edd" testName="AccountStatusRules (Unsuccessful Unknown to Opened,Unknown,Opened,Debtor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0216044" startTime="2025-09-12T15:41:54.6341417+12:00" endTime="2025-09-12T15:41:56.6560672+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ad72de16-3bd7-40b2-9711-f2a5c406d0c4">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:54.6347250+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Unknown to Opened]\",\"[DebtorFieldValue, Unknown]\",\"[CreditorFieldValue, Opened]\",\"[ErrorMessage, Debtor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Unknown to Opened]","[DebtorFieldValue, Unknown]","[CreditorFieldValue, Opened]","[ErrorMessage, Debtor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:54.6387966+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2b3d3c2d-f622-4223-bf95-c763d07824fe for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2b3d3c2d-f622-4223-bf95-c763d07824fe","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:55.1445121+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_450972d6-a2e0-42a8-8542-93634a69ee15 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_450972d6-a2e0-42a8-8542-93634a69ee15","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:55.6423624+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2898c8a2-1556-4681-bab8-09bcbd68e060 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2898c8a2-1556-4681-bab8-09bcbd68e060","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:56.1398608+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebcb313b-6e65-48f4-85b4-530beccaceb0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebcb313b-6e65-48f4-85b4-530beccaceb0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:56.1399710+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:56.1399994+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:56.1542342+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2026ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2026,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:56.1543954+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.439ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.439,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:56.1546805+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"64f32cdb7a0d484fb844a459856aeb20\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:56.153Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"64f32cdb7a0d484fb844a459856aeb20\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:56.153Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Unknown
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Unknown") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Opened") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                               |
  | __typename                         | UnsuccessfulPayment                 |
  | debtorAccountNumber                |                                     |
  | creditorAccountNumber              |                                     |
  | paymentId                          | *                                   |
  | paymentInstructionCreationDateTime | *                                   |
  | initiatingAccessNumber             | *                                   |
  | debtorAccountCode                  | *                                   |
  | debtorAccountParticulars           | *                                   |
  | debtorAccountReference             | *                                   |
  | creditorAccountCode                | *                                   |
  | creditorAccountParticulars         | *                                   |
  | creditorAccountReference           | *                                   |
  | amount                             | *                                   |
  | code                               | INVALID_ACCOUNT_STATE               |
  | message                            | Debtor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="12091f6e-e360-463e-8028-45e5d4c453bc" testId="13ea6fd3-b0de-6ed9-10ba-8c91e2efc2ce" testName="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Legacy to Kiwisaver,LegacyCore,Kiwisaver,Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" computerName="ip-10-130-163-65" duration="00:00:02.0229381" startTime="2025-09-12T15:41:22.1048228+12:00" endTime="2025-09-12T15:41:24.1281844+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="12091f6e-e360-463e-8028-45e5d4c453bc">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:22.1059520+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - invalid paths:[\"[Description, Unsuccessful Legacy to Kiwisaver]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, Kiwisaver]\",\"[ErrorMessage, Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - invalid paths","scenarioInfo.Arguments":["[Description, Unsuccessful Legacy to Kiwisaver]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, Kiwisaver]","[ErrorMessage, Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:22.1111593+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_852798ed-6ce5-4aac-83a9-c63b66e91b71 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_852798ed-6ce5-4aac-83a9-c63b66e91b71","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:22.6152994+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9b7fb6b9-25dc-443c-823f-7e111a9fc3d3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9b7fb6b9-25dc-443c-823f-7e111a9fc3d3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:23.1149989+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_be63a77d-6779-4470-9155-bb3ed1726c18 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_be63a77d-6779-4470-9155-bb3ed1726c18","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:23.6097065+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"81ee958a-f219-4c35-9563-318a6c833dd0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"81ee958a-f219-4c35-9563-318a6c833dd0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:23.6098301+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:23.6098598+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:23.6248434+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.942ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.942,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:23.6249272+12:00","LogLevel":"Information","Message":"End processing HTTP request after 15.1177ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.1177,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:23.6251229+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"df66361aebc946f28746a4a1d79bea36\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:23.623Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"df66361aebc946f28746a4a1d79bea36\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:23.623Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Kiwisaver
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Kiwisaver") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                                                                                  |
  | __typename                         | UnsuccessfulPayment                                                                                    |
  | debtorAccountNumber                |                                                                                                        |
  | creditorAccountNumber              |                                                                                                        |
  | paymentId                          | *                                                                                                      |
  | paymentInstructionCreationDateTime | *                                                                                                      |
  | initiatingAccessNumber             | *                                                                                                      |
  | debtorAccountCode                  | *                                                                                                      |
  | debtorAccountParticulars           | *                                                                                                      |
  | debtorAccountReference             | *                                                                                                      |
  | creditorAccountCode                | *                                                                                                      |
  | creditorAccountParticulars         | *                                                                                                      |
  | creditorAccountReference           | *                                                                                                      |
  | amount                             | *                                                                                                      |
  | code                               | OPERATION_INVALID_FOR_ACCOUNT                                                                          |
  | message                            | Creditor account has invalid origination system. Transaction is not allowed for the selected accounts. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="abc34311-c1f5-4c62-abb9-0f4ac9b311f5" testId="e9471ba7-4335-f853-8d6f-f5c3435b0581" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S22,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3355155" startTime="2025-09-12T15:45:36.3403029+12:00" endTime="2025-09-12T15:45:58.6761107+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="abc34311-c1f5-4c62-abb9-0f4ac9b311f5">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:45:36.3406671+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S22]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S22]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:36.3483190+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7b626cbc-ef9f-441f-9c0d-bc82d14387e6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7b626cbc-ef9f-441f-9c0d-bc82d14387e6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:36.8511236+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_98bbfa40-8ce8-4779-99ae-851862c07ede for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_98bbfa40-8ce8-4779-99ae-851862c07ede","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:37.3502319+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_797ca29f-c19b-44bf-a2b1-1f04f69339fc for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_797ca29f-c19b-44bf-a2b1-1f04f69339fc","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:37.8491204+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"164ad3c1-5ad1-42b3-a86b-1638f7b5808d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"164ad3c1-5ad1-42b3-a86b-1638f7b5808d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:37.8492340+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:37.8492586+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:37.9018783+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.5907ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5907,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:37.9019790+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.7587ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.7587,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:37.9068823+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4fd99e66-ba5c-4da2-8291-57862bad336b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4fd99e66-ba5c-4da2-8291-57862bad336b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:38.4095686+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_414f4496-f9cb-4fee-8efc-a8b21a5d11e0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_414f4496-f9cb-4fee-8efc-a8b21a5d11e0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:38.9111046+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c83ae5a9-ade4-4255-bf57-b9fa862a6cd4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c83ae5a9-ade4-4255-bf57-b9fa862a6cd4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:39.4081659+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"53587864-c19e-427f-b63a-85902b02d6b5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"53587864-c19e-427f-b63a-85902b02d6b5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:39.4082840+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:39.4083132+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:39.4625760+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2342ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2342,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:39.4626930+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.426ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.426,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:39.4678436+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_dd366af9-d912-4ba9-9b6f-c8ca79d1ec90 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_dd366af9-d912-4ba9-9b6f-c8ca79d1ec90","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:39.9680894+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3fe1075a-327e-4943-aeb1-d43985e516d2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3fe1075a-327e-4943-aeb1-d43985e516d2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:40.4675269+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_dce0cbf0-daec-4811-83ba-57442f7161cc for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_dce0cbf0-daec-4811-83ba-57442f7161cc","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:40.9646848+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d1755251-b54b-4038-976b-ada5a43f2e01\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d1755251-b54b-4038-976b-ada5a43f2e01\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:40.9648062+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:40.9648373+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:41.0236042+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.7378ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.7378,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:41.0237052+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.9173ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.9173,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:41.0286344+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0edd98c8-2fe4-4efa-a077-796feb0ccb67 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0edd98c8-2fe4-4efa-a077-796feb0ccb67","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:41.5304813+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_651506d9-3d99-46bb-a7cb-cc2d6accba3f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_651506d9-3d99-46bb-a7cb-cc2d6accba3f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:42.0316608+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_76e3cbab-18e4-4f1d-94b4-83be90955bc4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_76e3cbab-18e4-4f1d-94b4-83be90955bc4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:42.5292541+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9b488a8f-c107-4d0c-8f2f-10001f40cb68\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9b488a8f-c107-4d0c-8f2f-10001f40cb68\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:42.5293827+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:42.5294105+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:42.5822501+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.8123ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.8123,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:42.5823527+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.9857ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.9857,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:42.5875844+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_bd202232-ea16-4cdb-9fa0-df94d9bfec60 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_bd202232-ea16-4cdb-9fa0-df94d9bfec60","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:43.0872944+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7b56ca00-1586-4b35-a2e0-9ffbd2c36c81 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7b56ca00-1586-4b35-a2e0-9ffbd2c36c81","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:43.5865271+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6a2efd20-56a6-40e9-9f7a-2ada70f38dc8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6a2efd20-56a6-40e9-9f7a-2ada70f38dc8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:44.0838218+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c8068cfb-9a40-4eda-aefc-900ff41dab09\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c8068cfb-9a40-4eda-aefc-900ff41dab09\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:44.0839463+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:44.0839749+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:44.1378638+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.857ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.857,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:44.1379918+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.0628ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0628,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:44.1432096+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fb657ffa-3716-4ef3-8123-4209f3b25e46 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fb657ffa-3716-4ef3-8123-4209f3b25e46","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:44.6442084+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cae5764a-5171-4958-8868-05c5aafe2f1b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cae5764a-5171-4958-8868-05c5aafe2f1b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:45.1424810+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d3939d91-67fa-4f28-beea-130e3bcaa998 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d3939d91-67fa-4f28-beea-130e3bcaa998","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:45.6414307+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ba9f3af3-15f4-4e22-8ba7-bb8c9ee05230\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ba9f3af3-15f4-4e22-8ba7-bb8c9ee05230\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:45.6415571+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:45.6415868+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:45.6942709+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.6561ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.6561,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:45.6943667+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.8275ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.8275,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:45.7000757+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_44aca5e6-60f4-4550-a0ff-6725c6436d64 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_44aca5e6-60f4-4550-a0ff-6725c6436d64","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:46.1990382+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a4be689e-0b7e-4c76-b8b5-2fdd7ec17069 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a4be689e-0b7e-4c76-b8b5-2fdd7ec17069","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:46.6984287+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8dc1449f-46a6-407c-a029-fd4217b56550 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8dc1449f-46a6-407c-a029-fd4217b56550","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:47.1973680+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f8172655-4dbe-4673-a24a-49861627c430\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f8172655-4dbe-4673-a24a-49861627c430\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:47.1974828+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:47.1975097+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:47.2529868+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.4483ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.4483,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:47.2530834+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.6149ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.6149,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:47.2583209+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_3096a814-3d64-465e-8f2b-a0d9f444098c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_3096a814-3d64-465e-8f2b-a0d9f444098c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:47.7591408+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_56fa4933-876f-40e6-80cf-aa37c7149ca3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_56fa4933-876f-40e6-80cf-aa37c7149ca3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:48.2601295+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1ccaae8c-2b5a-4098-9ba8-de91c1c0a8cb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1ccaae8c-2b5a-4098-9ba8-de91c1c0a8cb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:48.7569645+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9322d26d-8727-4ffd-bd44-60ef6c245752\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9322d26d-8727-4ffd-bd44-60ef6c245752\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:48.7570841+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:48.7571123+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:48.8173047+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 60.1625ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.1625,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:48.8174369+12:00","LogLevel":"Information","Message":"End processing HTTP request after 60.3671ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.3671,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:48.8228270+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_518c5b28-c90c-4666-8acc-0ba1de1bc973 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_518c5b28-c90c-4666-8acc-0ba1de1bc973","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:49.3239303+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1473fbfb-0a2c-4ba6-b456-bef3edee1a82 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1473fbfb-0a2c-4ba6-b456-bef3edee1a82","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:49.8230412+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f7a7184d-a74a-4560-841b-d9a7e4f2e3d2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f7a7184d-a74a-4560-841b-d9a7e4f2e3d2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:50.3199351+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebe95d78-9e35-48be-bac4-17f9046effc1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ebe95d78-9e35-48be-bac4-17f9046effc1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:50.3200490+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:50.3200740+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:50.3725249+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.4234ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4234,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:50.3726291+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.597ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.597,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:50.3780684+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d42b65de-b9dd-443c-9c94-67f905c5b143 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d42b65de-b9dd-443c-9c94-67f905c5b143","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:50.8787037+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_dea877a1-8c2f-4933-bfc5-128aafa35cdd for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_dea877a1-8c2f-4933-bfc5-128aafa35cdd","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:51.3800754+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_dedae726-6b45-4f74-8f4f-613092f2e1a7 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_dedae726-6b45-4f74-8f4f-613092f2e1a7","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:51.8772185+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a0498d27-7658-4cca-998d-0f35079b2cd8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a0498d27-7658-4cca-998d-0f35079b2cd8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:51.8773482+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:51.8773777+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:51.9314364+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.0288ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0288,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:51.9315422+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.2103ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2103,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:51.9375950+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_01497fae-5909-4aa6-a824-052a465de166 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_01497fae-5909-4aa6-a824-052a465de166","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:52.4386218+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_bbf755a6-c45e-4d68-876e-7500ed335475 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_bbf755a6-c45e-4d68-876e-7500ed335475","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:52.9406012+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_393e8327-5f78-49a4-aa38-db9f80a44471 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_393e8327-5f78-49a4-aa38-db9f80a44471","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:53.4366856+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6dd79191-a2dd-4478-be35-7747ddc230c7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6dd79191-a2dd-4478-be35-7747ddc230c7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:53.4368086+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:53.4368368+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:53.4917556+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.8882ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.8882,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:53.4918786+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.0848ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0848,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:53.4968368+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_12d8301b-caaf-436d-9c5f-5b3dd0bfe332 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_12d8301b-caaf-436d-9c5f-5b3dd0bfe332","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:53.9984356+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_497b3541-f919-45cc-b47b-dec36b4ff212 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_497b3541-f919-45cc-b47b-dec36b4ff212","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:54.4998576+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b6867fd6-850c-43d4-a5b3-1bab7a847a6b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b6867fd6-850c-43d4-a5b3-1bab7a847a6b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:54.9967974+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b750e026-b129-4337-997a-f69ba3586e1a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b750e026-b129-4337-997a-f69ba3586e1a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:54.9969274+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:54.9969571+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:55.0512241+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2383ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2383,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:55.0513726+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.4603ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4603,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:55.0569193+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_716ccebd-806d-4900-b31c-21090e271156 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_716ccebd-806d-4900-b31c-21090e271156","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:55.5585563+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_0178e9b4-6a88-41c1-ba9f-ef571f2238af for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_0178e9b4-6a88-41c1-ba9f-ef571f2238af","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:56.0598471+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_54d7d5a9-f62b-4e0d-b8ee-becaa7a9563c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_54d7d5a9-f62b-4e0d-b8ee-becaa7a9563c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:56.5564416+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1074f375-959b-4b40-84b1-b1cfc08c4e0e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1074f375-959b-4b40-84b1-b1cfc08c4e0e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:56.5565720+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:56.5566008+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:56.6189876+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 62.359ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":62.359,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:56.6191050+12:00","LogLevel":"Information","Message":"End processing HTTP request after 62.5524ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":62.5524,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:56.6239276+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7ae81cec-0418-42fe-af81-041572cc20fa for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7ae81cec-0418-42fe-af81-041572cc20fa","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:57.1226758+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b8c45511-652d-4d58-9fbc-d2d09e67234a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b8c45511-652d-4d58-9fbc-d2d09e67234a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:57.6242292+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_508ee6f0-c014-46b9-b98d-2756e1ad066c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_508ee6f0-c014-46b9-b98d-2756e1ad066c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:58.1205176+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e2d692d3-0eb4-46f5-9f62-4f50b2f449fa\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e2d692d3-0eb4-46f5-9f62-4f50b2f449fa\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:58.1206403+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:58.1206685+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:58.1746863+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.988ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.988,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:58.1747786+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.1574ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.1574,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S22 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S22", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="05a3fbaa-c5cc-486d-86a6-f41d39633289" testId="b04c68e9-f073-7537-afed-b59e8710cb47" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S30,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3672044" startTime="2025-09-12T15:45:58.6767921+12:00" endTime="2025-09-12T15:46:21.0443503+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="05a3fbaa-c5cc-486d-86a6-f41d39633289">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:45:58.6774096+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S30]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S30]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:58.6841230+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_193121e2-3641-4920-95d4-9dd43f6085a0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_193121e2-3641-4920-95d4-9dd43f6085a0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:59.1874767+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d9d3c75f-59f1-47a4-83a2-7f0574d474e5 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d9d3c75f-59f1-47a4-83a2-7f0574d474e5","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:59.6883081+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c1939982-3ec2-4e17-82a0-8d10a28df717 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c1939982-3ec2-4e17-82a0-8d10a28df717","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:00.1850821+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8d290252-0f0f-4571-90e2-cce81506a8c1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8d290252-0f0f-4571-90e2-cce81506a8c1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:00.1851992+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:00.1852250+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:00.2396481+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.3931ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3931,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:00.2397879+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.6004ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.6004,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:00.2452438+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e5722fb6-d74e-43dc-9d34-d42c42d81606 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e5722fb6-d74e-43dc-9d34-d42c42d81606","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:00.7467113+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d7bb04cc-f0ed-40a3-a5ec-a4fc45a39ea9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d7bb04cc-f0ed-40a3-a5ec-a4fc45a39ea9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:01.2480477+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6efee54e-dcd5-409e-a85d-f670709af443 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6efee54e-dcd5-409e-a85d-f670709af443","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:01.7448635+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa05c2ed-bf55-41bc-bae6-e173d49878d5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa05c2ed-bf55-41bc-bae6-e173d49878d5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:01.7449853+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:01.7450172+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:01.7985007+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.4551ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4551,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:01.7986281+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6587ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6587,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:01.8040419+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_18c0a84c-1713-47ef-a884-b375cc1a656b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_18c0a84c-1713-47ef-a884-b375cc1a656b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:02.3081987+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a249606d-b196-41f6-ae7b-c3d02ac61d30 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a249606d-b196-41f6-ae7b-c3d02ac61d30","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:02.8073230+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a01ae491-dc29-41cb-bc9d-7be5b460436a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a01ae491-dc29-41cb-bc9d-7be5b460436a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:03.3041231+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"24fae246-f0e3-4da7-9d45-a81eeb0642ab\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"24fae246-f0e3-4da7-9d45-a81eeb0642ab\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:03.3042562+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:03.3042861+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:03.3588289+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.5155ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.5155,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:03.3589578+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.7177ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.7177,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:03.3678956+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f010cd8a-b82f-4952-a5f5-450ec962c3cf for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f010cd8a-b82f-4952-a5f5-450ec962c3cf","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:03.8677967+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_609dc6d1-d451-466e-a086-a71a63a3fee8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_609dc6d1-d451-466e-a086-a71a63a3fee8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:04.3672787+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_5c081685-b6d7-47b8-8834-0a5b416e924f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_5c081685-b6d7-47b8-8834-0a5b416e924f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:04.8644811+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"90d45df3-38e4-4e4b-b556-245f196bdca9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"90d45df3-38e4-4e4b-b556-245f196bdca9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:04.8646128+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:04.8646430+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:04.9233250+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.6556ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.6556,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:04.9234360+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.8424ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.8424,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:04.9287146+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fdfb17e8-0870-417a-8d25-0c00b3c68606 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fdfb17e8-0870-417a-8d25-0c00b3c68606","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:05.4315311+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3518670d-6129-4ebb-9ac6-8e120cab3320 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3518670d-6129-4ebb-9ac6-8e120cab3320","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:05.9306068+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d85b8f0b-bdd4-4b3d-b21c-9093e570c279 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d85b8f0b-bdd4-4b3d-b21c-9093e570c279","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:06.4292891+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c5021e19-81dc-4781-911e-77267d95818a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c5021e19-81dc-4781-911e-77267d95818a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:06.4294059+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:06.4294314+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:06.4831545+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.6948ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6948,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:06.4832769+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.8858ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.8858,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:06.4889674+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_28cca47c-4df9-4a98-adba-abd9c49d7346 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_28cca47c-4df9-4a98-adba-abd9c49d7346","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:06.9915529+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d07b9c73-5fb9-44a0-aaf7-1edcce6ecc37 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d07b9c73-5fb9-44a0-aaf7-1edcce6ecc37","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:07.4907470+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3eb6eaed-8f44-432d-8818-65624d360542 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3eb6eaed-8f44-432d-8818-65624d360542","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:07.9876882+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"954fad49-9b21-4c18-a135-24b2b12dc37d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"954fad49-9b21-4c18-a135-24b2b12dc37d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:07.9878187+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:07.9878482+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:08.0437911+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.9132ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.9132,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:08.0438998+12:00","LogLevel":"Information","Message":"End processing HTTP request after 56.0987ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.0987,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:08.0492543+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_55f6b7b4-5d4b-4e2b-b7cc-dccdbad745b6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_55f6b7b4-5d4b-4e2b-b7cc-dccdbad745b6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:08.5510056+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c28be134-1cfd-42df-9183-f6d3e19a69f7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c28be134-1cfd-42df-9183-f6d3e19a69f7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:09.0504706+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6d97e375-6eb7-40f9-980e-fe3d0aa27c41 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6d97e375-6eb7-40f9-980e-fe3d0aa27c41","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:09.5494520+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"35961d56-47de-4189-8f36-775d67af53be\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"35961d56-47de-4189-8f36-775d67af53be\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:09.5495710+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:09.5495970+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:09.6044532+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.8314ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.8314,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:09.6045537+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.997ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.997,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:09.6102698+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fa4273f8-d034-4be6-b1f5-08dfefb94c62 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fa4273f8-d034-4be6-b1f5-08dfefb94c62","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:10.1109905+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a05b4735-20b2-4e1e-84fd-ad3366bc0da2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a05b4735-20b2-4e1e-84fd-ad3366bc0da2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:10.6120456+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1c10132f-1f47-41bd-9645-3fe24343c4ea for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1c10132f-1f47-41bd-9645-3fe24343c4ea","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:11.1085694+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"25a0fd4e-8f02-4691-b9a0-9a7225e7fcca\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"25a0fd4e-8f02-4691-b9a0-9a7225e7fcca\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:11.1086813+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:11.1087066+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:11.1631751+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.4414ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4414,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:11.1633060+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.64ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.64,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:11.1686197+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_3f0bafd5-ca23-4b58-9a20-43bdc4a24dff for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_3f0bafd5-ca23-4b58-9a20-43bdc4a24dff","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:11.6709946+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_18508810-7464-49cf-b7d7-90ad240b626b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_18508810-7464-49cf-b7d7-90ad240b626b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:12.1720426+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_65210a28-1598-4428-b6a3-ce4b306922c5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_65210a28-1598-4428-b6a3-ce4b306922c5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:12.6687555+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"16cb1f1d-e5f8-4c97-a13a-e85549d20f29\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"16cb1f1d-e5f8-4c97-a13a-e85549d20f29\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:12.6688863+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:12.6689170+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:12.7287925+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.8494ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.8494,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:12.7288799+12:00","LogLevel":"Information","Message":"End processing HTTP request after 60.0123ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.0123,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:12.7338167+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5cb2cfd7-1b93-4dac-bd40-0fb9795323ba for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5cb2cfd7-1b93-4dac-bd40-0fb9795323ba","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:13.2347707+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8060cea5-a160-4629-8ba9-f424a9a61e65 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8060cea5-a160-4629-8ba9-f424a9a61e65","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:13.7358024+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b854d489-3787-416e-8db2-b5e30bb6ce19 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b854d489-3787-416e-8db2-b5e30bb6ce19","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:14.2325330+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8e5a8ee8-5f3e-4d6f-8f5d-e6b811a38176\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8e5a8ee8-5f3e-4d6f-8f5d-e6b811a38176\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:14.2326419+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:14.2326663+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:14.2854554+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.7632ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.7632,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:14.2855533+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.9277ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.9277,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:14.2908917+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8eed9237-8662-4643-977b-1dac494d6dd1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8eed9237-8662-4643-977b-1dac494d6dd1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:14.7916616+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e228ddc8-4c15-4130-ab2b-f6ac33c95682 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e228ddc8-4c15-4130-ab2b-f6ac33c95682","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:15.2911184+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3fff89cc-51c4-43ac-88b4-c75c6baaad9c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3fff89cc-51c4-43ac-88b4-c75c6baaad9c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:15.7898240+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0ddebff5-2b98-4b2a-bbdd-71cba36b44c8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0ddebff5-2b98-4b2a-bbdd-71cba36b44c8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:15.7899528+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:15.7899832+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:15.8449488+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.936ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.936,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:15.8450556+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.1202ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.1202,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:15.8505811+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b71b9f6f-b654-4344-9642-a81ff72d5f59 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b71b9f6f-b654-4344-9642-a81ff72d5f59","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:16.3532001+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cef60e2e-7ff4-4861-b233-cacef39e135b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cef60e2e-7ff4-4861-b233-cacef39e135b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:16.8504645+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fb6baf92-64dd-46c5-a392-429a1e0e669e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fb6baf92-64dd-46c5-a392-429a1e0e669e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:17.3491809+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"651cd873-2d68-4afe-bf4d-6316de8f6e0b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"651cd873-2d68-4afe-bf4d-6316de8f6e0b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:17.3493109+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:17.3493416+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:17.4016041+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.2311ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.2311,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:17.4017060+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.4127ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4127,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:17.4071200+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9eef391d-c695-41ff-8389-6f21cd68d780 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9eef391d-c695-41ff-8389-6f21cd68d780","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:17.9067695+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f28e9fa3-a5f4-4d67-96aa-6e6c52385bab for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f28e9fa3-a5f4-4d67-96aa-6e6c52385bab","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:18.4063266+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_146d994f-2164-4c55-bb6f-48a10a3bbc70 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_146d994f-2164-4c55-bb6f-48a10a3bbc70","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:18.9048013+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e41fd30f-5706-491f-9feb-99c13f5c0a56\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e41fd30f-5706-491f-9feb-99c13f5c0a56\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:18.9049174+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:18.9049433+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:18.9573182+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.346ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.346,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:18.9574338+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.5307ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5307,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:18.9625838+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0403b7a0-71f3-4bb5-a304-b46cac73c514 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0403b7a0-71f3-4bb5-a304-b46cac73c514","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:19.4632671+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e348f355-6508-47e0-b247-c0131cd0a894 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e348f355-6508-47e0-b247-c0131cd0a894","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:19.9626855+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fff32eb3-3805-443b-a9d5-fc6ec0624148 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fff32eb3-3805-443b-a9d5-fc6ec0624148","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:20.4610230+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fe6c1bfd-8c60-4930-bbba-f19ff00b5b67\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fe6c1bfd-8c60-4930-bbba-f19ff00b5b67\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:20.4611487+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:20.4611802+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:20.5441900+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 82.9784ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":82.9784,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:20.5443143+12:00","LogLevel":"Information","Message":"End processing HTTP request after 83.1811ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":83.1811,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S30 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S30", "S4, S9, S8, S1, S...") (21.9s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="549e3db1-3927-4f6c-8410-d4caa2cdcb4a" testId="4e53899d-5e4e-e65e-8624-c67dca0f2d5f" testName="DebtorAccountSignatoriesMustBe1" computerName="ip-10-130-163-65" duration="00:00:02.0263062" startTime="2025-09-12T15:41:34.3189786+12:00" endTime="2025-09-12T15:41:36.3455241+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="549e3db1-3927-4f6c-8410-d4caa2cdcb4a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:34.3208168+12:00","LogLevel":"Information","Message":"Starting Test Execution: Debtor account signatories must be 1:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Debtor account signatories must be 1","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:34.3242641+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1a71fe27-494f-4fae-b5f9-09dae3d6dd1d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1a71fe27-494f-4fae-b5f9-09dae3d6dd1d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:34.8268104+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_211ee30d-821a-4e06-8cdf-73256459d377 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_211ee30d-821a-4e06-8cdf-73256459d377","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:35.3290056+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0d70478f-d345-46d4-938d-0f2fa84b90a9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0d70478f-d345-46d4-938d-0f2fa84b90a9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:35.8281748+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c514853d-4d51-4a4f-82e9-90e660163226\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c514853d-4d51-4a4f-82e9-90e660163226\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:35.8282878+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:35.8283190+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:35.8428042+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.4502ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4502,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:35.8429170+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.6408ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.6408,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:35.8434563+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2cbef94259cc4190a4047e56daf2b5fc\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:35.842Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"NUMBER_OF_SIGNATURES\",\"message\":\"Debtor account must have exactly 1 signatory.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2cbef94259cc4190a4047e56daf2b5fc\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:35.842Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"NUMBER_OF_SIGNATURES\",\"message\":\"Debtor account must have exactly 1 signatory.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field MinimumNumberOfSignatories set to 2
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "MinimumNumberOfSi...", "2") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                         |
  | __typename                         | UnsuccessfulPayment                           |
  | debtorAccountNumber                |                                               |
  | creditorAccountNumber              |                                               |
  | paymentId                          | *                                             |
  | paymentInstructionCreationDateTime | *                                             |
  | initiatingAccessNumber             | *                                             |
  | debtorAccountCode                  | *                                             |
  | debtorAccountParticulars           | *                                             |
  | debtorAccountReference             | *                                             |
  | creditorAccountCode                | *                                             |
  | creditorAccountParticulars         | *                                             |
  | creditorAccountReference           | *                                             |
  | amount                             | *                                             |
  | code                               | NUMBER_OF_SIGNATURES                          |
  | message                            | Debtor account must have exactly 1 signatory. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fc9db0f2-028d-47f9-affa-a3b86120168c" testId="43bfdbf4-a99a-58ba-7fe7-372746927f5b" testName="ErrorResponseCodesFromUAS (503,,)" computerName="ip-10-130-163-65" duration="00:00:02.0329233" startTime="2025-09-12T15:49:18.2762331+12:00" endTime="2025-09-12T15:49:20.3093491+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fc9db0f2-028d-47f9-affa-a3b86120168c">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:18.2766376+12:00","LogLevel":"Information","Message":"Starting Test Execution: Error response codes from UAS:[\"[ErrorCode, 503]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Error response codes from UAS","scenarioInfo.Arguments":["[ErrorCode, 503]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:18.2812914+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7b8a1562-166d-47ba-aa7b-63ec17630445 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7b8a1562-166d-47ba-aa7b-63ec17630445","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:18.7833732+12:00","LogLevel":"Information","Message":"Successfully created map UASError_503_da07a65a-e235-4cb5-9860-3f35b5360a8a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_503_da07a65a-e235-4cb5-9860-3f35b5360a8a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:19.2806488+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"944ccff4-f51b-4986-91d5-6cc9c8fded78\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"944ccff4-f51b-4986-91d5-6cc9c8fded78\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:19.2807647+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:19.2807998+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:19.8083436+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 527.5102ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":527.5102,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:19.8084594+12:00","LogLevel":"Information","Message":"End processing HTTP request after 527.7118ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":527.7118,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:19.8086942+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"022fbfd65edf4003a680ac21f0aaf86d\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:19.807Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"022fbfd65edf4003a680ac21f0aaf86d\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:19.807Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be 503
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("503") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f5a10fa7-3ac2-468f-9055-0fefef8a812a" testId="2b62d568-3184-46ad-1379-c343b5f2425d" testName="OPARetriesToConfiguredMax" computerName="ip-10-130-163-65" duration="00:00:02.5581745" startTime="2025-09-12T15:41:09.2245717+12:00" endTime="2025-09-12T15:41:11.7835771+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f5a10fa7-3ac2-468f-9055-0fefef8a812a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:09.2262509+12:00","LogLevel":"Information","Message":"Starting Test Execution: OPA retries to configured max:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"OPA retries to configured max","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:09.2299737+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7719a821-4e25-4045-b6a2-2d0daee8795c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7719a821-4e25-4045-b6a2-2d0daee8795c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:09.7358118+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_abb206fb-7ca8-43a6-bf10-93e7693ea21d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_abb206fb-7ca8-43a6-bf10-93e7693ea21d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:10.2373697+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d5935eef-8e5c-4d13-a157-217d9aec00a9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d5935eef-8e5c-4d13-a157-217d9aec00a9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:10.7322696+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"24692d8b-53bc-43c0-a800-088f518e0a7f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"24692d8b-53bc-43c0-a800-088f518e0a7f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:10.7324073+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:10.7324380+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:11.2806599+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 548.1792ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":548.1792,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:11.2807687+12:00","LogLevel":"Information","Message":"End processing HTTP request after 548.3812ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":548.3812,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:11.2812161+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be 503
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "503") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "POrchTransfer") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="14644c1a-343e-458e-b756-4221f789dfa6" testId="af8fad5b-8eb7-1cfa-84d6-4f799b72e0ad" testName="FreezeStatus_Unsuccessful (Unsuccessful type 1 to none,FreezeAgainstAllTellerAction,none,debtor,Debtor account has been frozen.,)" computerName="ip-10-130-163-65" duration="00:00:02.0286335" startTime="2025-09-12T15:42:00.7189171+12:00" endTime="2025-09-12T15:42:02.7478242+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="14644c1a-343e-458e-b756-4221f789dfa6">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:00.7197064+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Unsuccessful:[\"[Description, Unsuccessful type 1 to none]\",\"[DebtorFieldValue, FreezeAgainstAllTellerAction]\",\"[CreditorFieldValue, none]\",\"[WhichAccountFrozen, debtor]\",\"[ErrorMessage, Debtor account has been frozen.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Unsuccessful","scenarioInfo.Arguments":["[Description, Unsuccessful type 1 to none]","[DebtorFieldValue, FreezeAgainstAllTellerAction]","[CreditorFieldValue, none]","[WhichAccountFrozen, debtor]","[ErrorMessage, Debtor account has been frozen.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:00.7234606+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_66a2f553-b6d1-44dd-b0ef-3c1b585b461d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_66a2f553-b6d1-44dd-b0ef-3c1b585b461d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:01.2264982+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_da178e97-c9be-44ed-8a84-0ad117ec392d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_da178e97-c9be-44ed-8a84-0ad117ec392d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:01.7296648+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c93de3ff-a1bc-472b-8296-0744f78e677f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c93de3ff-a1bc-472b-8296-0744f78e677f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:02.2286161+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d4bbb990-3635-4248-9fb6-f87a5fbfabef\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d4bbb990-3635-4248-9fb6-f87a5fbfabef\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:02.2287443+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:02.2287751+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:02.2486794+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 19.8737ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.8737,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:02.2487917+12:00","LogLevel":"Information","Message":"End processing HTTP request after 20.0613ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":20.0613,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:02.2492427+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f2f5b4f8a5f3411d98c1a6622615988e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:02.247Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"FROZEN_ACCOUNT\",\"message\":\"Debtor account has been frozen.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f2f5b4f8a5f3411d98c1a6622615988e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:02.247Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"FROZEN_ACCOUNT\",\"message\":\"Debtor account has been frozen.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to FreezeAgainstAllTellerAction
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "FreezeAgainstAllT...") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "none") (0.0s)
And the UAS mock debtor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                           |
  | __typename                         | UnsuccessfulPayment             |
  | debtorAccountNumber                |                                 |
  | creditorAccountNumber              |                                 |
  | paymentId                          | *                               |
  | paymentInstructionCreationDateTime | *                               |
  | initiatingAccessNumber             | *                               |
  | debtorAccountCode                  | *                               |
  | debtorAccountParticulars           | *                               |
  | debtorAccountReference             | *                               |
  | creditorAccountCode                | *                               |
  | creditorAccountParticulars         | *                               |
  | creditorAccountReference           | *                               |
  | amount                             | *                               |
  | code                               | FROZEN_ACCOUNT                  |
  | message                            | Debtor account has been frozen. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f62f8e47-232e-43f4-a3e2-094c36de3c74" testId="8d6ab228-e602-11a3-70a6-5899f1d866b2" testName="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Kiwisaver to Core,Kiwisaver,Core,Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" computerName="ip-10-130-163-65" duration="00:00:02.0280432" startTime="2025-09-12T15:41:28.1766070+12:00" endTime="2025-09-12T15:41:30.2049940+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f62f8e47-232e-43f4-a3e2-094c36de3c74">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:28.1772173+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - invalid paths:[\"[Description, Unsuccessful Kiwisaver to Core]\",\"[DebtorFieldValue, Kiwisaver]\",\"[CreditorFieldValue, Core]\",\"[ErrorMessage, Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - invalid paths","scenarioInfo.Arguments":["[Description, Unsuccessful Kiwisaver to Core]","[DebtorFieldValue, Kiwisaver]","[CreditorFieldValue, Core]","[ErrorMessage, Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:28.1808835+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_679b1201-12f3-44c7-85f5-558b5937d529 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_679b1201-12f3-44c7-85f5-558b5937d529","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:28.6877145+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c6e3cb20-8659-453c-a1a1-762c987ed941 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c6e3cb20-8659-453c-a1a1-762c987ed941","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:29.1841979+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_27082d13-f840-40fe-88c9-f27d784ee5d0 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_27082d13-f840-40fe-88c9-f27d784ee5d0","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:29.6874500+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b147642b-b26e-4e18-b042-2d4b0c824e7b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b147642b-b26e-4e18-b042-2d4b0c824e7b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:29.6875518+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:29.6875776+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:29.7041097+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 16.4985ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":16.4985,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:29.7042162+12:00","LogLevel":"Information","Message":"End processing HTTP request after 16.6779ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":16.6779,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:29.7044780+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"58b6594e143f4ccdb0058ca4c2c4f5c5\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:29.703Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"58b6594e143f4ccdb0058ca4c2c4f5c5\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:29.703Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to Kiwisaver
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Kiwisaver") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                                                                                |
  | __typename                         | UnsuccessfulPayment                                                                                  |
  | debtorAccountNumber                |                                                                                                      |
  | creditorAccountNumber              |                                                                                                      |
  | paymentId                          | *                                                                                                    |
  | paymentInstructionCreationDateTime | *                                                                                                    |
  | initiatingAccessNumber             | *                                                                                                    |
  | debtorAccountCode                  | *                                                                                                    |
  | debtorAccountParticulars           | *                                                                                                    |
  | debtorAccountReference             | *                                                                                                    |
  | creditorAccountCode                | *                                                                                                    |
  | creditorAccountParticulars         | *                                                                                                    |
  | creditorAccountReference           | *                                                                                                    |
  | amount                             | *                                                                                                    |
  | code                               | OPERATION_INVALID_FOR_ACCOUNT                                                                        |
  | message                            | Debtor account has invalid origination system. Transaction is not allowed for the selected accounts. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="98b3b6f3-cce1-4159-ae6a-93240ba8fb14" testId="7beb5a18-69f6-951f-e4a1-e1bc823a0118" testName="AccountStatusRules (Unsuccessful Closed to Opened,Closed,Opened,Debtor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0245204" startTime="2025-09-12T15:41:48.5566512+12:00" endTime="2025-09-12T15:41:50.5813889+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98b3b6f3-cce1-4159-ae6a-93240ba8fb14">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:48.5570591+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Closed to Opened]\",\"[DebtorFieldValue, Closed]\",\"[CreditorFieldValue, Opened]\",\"[ErrorMessage, Debtor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Closed to Opened]","[DebtorFieldValue, Closed]","[CreditorFieldValue, Opened]","[ErrorMessage, Debtor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:48.5604690+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_547d1773-8ceb-4a31-af46-cddf8599720a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_547d1773-8ceb-4a31-af46-cddf8599720a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:49.0631347+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a64b69ee-311c-4235-94e2-86afdea0aaff for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a64b69ee-311c-4235-94e2-86afdea0aaff","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:49.5650379+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_38624e70-014d-4ed8-9ca5-bf8653d09985 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_38624e70-014d-4ed8-9ca5-bf8653d09985","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:50.0642000+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"05e9e796-06c4-4274-ab92-6bad491c72d0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"05e9e796-06c4-4274-ab92-6bad491c72d0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:50.0643147+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:50.0643438+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:50.0787070+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.3326ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3326,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:50.0788049+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.5065ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5065,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:50.0790333+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f18cca03e9244aea88027b3b5f88f908\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:50.077Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f18cca03e9244aea88027b3b5f88f908\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:50.077Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Closed
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Closed") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Opened") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                               |
  | __typename                         | UnsuccessfulPayment                 |
  | debtorAccountNumber                |                                     |
  | creditorAccountNumber              |                                     |
  | paymentId                          | *                                   |
  | paymentInstructionCreationDateTime | *                                   |
  | initiatingAccessNumber             | *                                   |
  | debtorAccountCode                  | *                                   |
  | debtorAccountParticulars           | *                                   |
  | debtorAccountReference             | *                                   |
  | creditorAccountCode                | *                                   |
  | creditorAccountParticulars         | *                                   |
  | creditorAccountReference           | *                                   |
  | amount                             | *                                   |
  | code                               | INVALID_ACCOUNT_STATE               |
  | message                            | Debtor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b9d207e3-9b60-47be-8134-778a5f7677d3" testId="0f425572-5768-29e4-4c66-55e75a1e1a59" testName="FreezeStatus_Successful (Successful type 3 to none,ToHoldSpecificCreditBalance,debtor,none,)" computerName="ip-10-130-163-65" duration="00:00:02.0700877" startTime="2025-09-12T15:42:10.9865234+12:00" endTime="2025-09-12T15:42:13.0568205+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b9d207e3-9b60-47be-8134-778a5f7677d3">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:10.9869369+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Successful:[\"[Description, Successful type 3 to none]\",\"[DebtorFieldValue, ToHoldSpecificCreditBalance]\",\"[WhichAccountFrozen, debtor]\",\"[CreditorFieldValue, none]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Successful","scenarioInfo.Arguments":["[Description, Successful type 3 to none]","[DebtorFieldValue, ToHoldSpecificCreditBalance]","[WhichAccountFrozen, debtor]","[CreditorFieldValue, none]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:10.9902499+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e9bcc7bc-2145-4ea5-b778-c8568d68c199 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e9bcc7bc-2145-4ea5-b778-c8568d68c199","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:11.4985193+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a80e9875-d971-48f3-a97b-d23ef0dc6e67 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a80e9875-d971-48f3-a97b-d23ef0dc6e67","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:12.0001468+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_97e1524b-380f-4503-9a80-b9857abcd710 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_97e1524b-380f-4503-9a80-b9857abcd710","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:12.5030305+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"92d2b6a1-de59-41e6-8444-4c9f1e268bef\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"92d2b6a1-de59-41e6-8444-4c9f1e268bef\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:12.5031417+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:12.5031706+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:12.5554657+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.2577ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.2577,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:12.5555671+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.4397ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4397,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:12.5559689+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"dc5ca2f04ac2417cb9697cc3ad9fd868\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:11.997Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:11.997Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"dc5ca2f04ac2417cb9697cc3ad9fd868\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:11.997Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:11.997Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to ToHoldSpecificCreditBalance
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "ToHoldSpecificCre...") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "none") (0.0s)
And the UAS mock debtor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                |         |
  | creditorAccountNumber              |         |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e1e90696-0198-4da3-858b-1e58e0d4e852" testId="9b41717e-395f-0ddb-2d53-af1f6bebe018" testName="AccountStatusRules (Unsuccessful Opened to BlockedUnvalidated,Opened,BlockedUnvalidated,Creditor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0250495" startTime="2025-09-12T15:41:46.5309254+12:00" endTime="2025-09-12T15:41:48.5562276+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e1e90696-0198-4da3-858b-1e58e0d4e852">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:46.5314551+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Opened to BlockedUnvalidated]\",\"[DebtorFieldValue, Opened]\",\"[CreditorFieldValue, BlockedUnvalidated]\",\"[ErrorMessage, Creditor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Opened to BlockedUnvalidated]","[DebtorFieldValue, Opened]","[CreditorFieldValue, BlockedUnvalidated]","[ErrorMessage, Creditor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:46.5344209+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1879df70-1b4b-49a5-ab56-58cf52ba5a9d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1879df70-1b4b-49a5-ab56-58cf52ba5a9d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:47.0395679+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_144c96e4-ccc2-48aa-9590-6715402bf476 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_144c96e4-ccc2-48aa-9590-6715402bf476","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:47.5412166+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_35be3ab2-61c3-46c0-a0af-2893a1130ded for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_35be3ab2-61c3-46c0-a0af-2893a1130ded","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:48.0417253+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"62e04369-3a74-4e4a-a431-d2ca6451ad6f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"62e04369-3a74-4e4a-a431-d2ca6451ad6f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:48.0418432+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:48.0418732+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:48.0562422+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.3373ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3373,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:48.0563575+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.5309ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5309,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:48.0565834+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"82a5fe6520a146bea8f180fd32fb3d3b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:48.055Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"82a5fe6520a146bea8f180fd32fb3d3b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:48.055Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Opened") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedUnvalidated
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedUnvalidated") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                 |
  | __typename                         | UnsuccessfulPayment                   |
  | debtorAccountNumber                |                                       |
  | creditorAccountNumber              |                                       |
  | paymentId                          | *                                     |
  | paymentInstructionCreationDateTime | *                                     |
  | initiatingAccessNumber             | *                                     |
  | debtorAccountCode                  | *                                     |
  | debtorAccountParticulars           | *                                     |
  | debtorAccountReference             | *                                     |
  | creditorAccountCode                | *                                     |
  | creditorAccountParticulars         | *                                     |
  | creditorAccountReference           | *                                     |
  | amount                             | *                                     |
  | code                               | INVALID_ACCOUNT_STATE                 |
  | message                            | Creditor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="69377f00-06c0-4996-b7e3-c5b1616fa141" testId="c681f884-4718-96bc-adc4-d3d6d9ed4b5a" testName="UASUnrechableSocketError" computerName="ip-10-130-163-65" duration="00:00:01.5272446" startTime="2025-09-12T15:49:24.8809809+12:00" endTime="2025-09-12T15:49:26.4140586+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="69377f00-06c0-4996-b7e3-c5b1616fa141">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:24.8820639+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS unrechable/socket error:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS unrechable/socket error","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:24.8881685+12:00","LogLevel":"Information","Message":"Successfully created map UASSocketErrorResponse_c46e49d0-485f-4168-ad14-a95499914dd6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSocketErrorResponse_c46e49d0-485f-4168-ad14-a95499914dd6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:25.3872903+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2b4ab864-a27d-4560-a535-56b0e5253676\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2b4ab864-a27d-4560-a535-56b0e5253676\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:25.3874184+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:25.3874474+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:25.9062729+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 518.7968ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":518.7968,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:25.9063866+12:00","LogLevel":"Information","Message":"End processing HTTP request after 518.9795ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":518.9795,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:25.9071547+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the UAS mock response will be socketError
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("socketError") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field                       | Value                   |
  | $.errors[0].message         | Unknown error occurred. |
  | $.errors[0].path[0]         | initiateTransfer        |
  | $.errors[0].extensions.code | INTERNAL_SERVER_ERROR   |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c9ff99a4-8409-4282-9302-960a04d946d7" testId="d544a4fa-b3c6-1104-d108-0e0d54c610eb" testName="FreezeStatus_Successful (Successful None to type 6,none,creditor,FreezeAllDishandUnauthorisedOdFees,)" computerName="ip-10-130-163-65" duration="00:00:02.0680167" startTime="2025-09-12T15:42:08.9179301+12:00" endTime="2025-09-12T15:42:10.9861934+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c9ff99a4-8409-4282-9302-960a04d946d7">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:08.9184369+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Successful:[\"[Description, Successful None to type 6]\",\"[DebtorFieldValue, none]\",\"[WhichAccountFrozen, creditor]\",\"[CreditorFieldValue, FreezeAllDishandUnauthorisedOdFees]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Successful","scenarioInfo.Arguments":["[Description, Successful None to type 6]","[DebtorFieldValue, none]","[WhichAccountFrozen, creditor]","[CreditorFieldValue, FreezeAllDishandUnauthorisedOdFees]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:08.9229221+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1693a3e8-f4ed-4637-ba48-42c87f938ded for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1693a3e8-f4ed-4637-ba48-42c87f938ded","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:09.4277756+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_35ea8216-9bc4-4da9-8751-c4f01f1bf0c6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_35ea8216-9bc4-4da9-8751-c4f01f1bf0c6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:09.9265595+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_27ee7e15-7e5b-4da7-919f-87d6a66c2a65 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_27ee7e15-7e5b-4da7-919f-87d6a66c2a65","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:10.4250955+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ecce07f1-8497-440e-952a-baff25c77451\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ecce07f1-8497-440e-952a-baff25c77451\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:10.4252080+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:10.4252365+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:10.4819950+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 56.7253ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.7253,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:10.4821109+12:00","LogLevel":"Information","Message":"End processing HTTP request after 56.917ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.917,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:10.4824130+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"6de3f1c6e43c4d2f8b8894c981727de9\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:09.924Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:09.924Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"6de3f1c6e43c4d2f8b8894c981727de9\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:09.924Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:09.924Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "none") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to FreezeAllDishandUnauthorisedOdFees
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "FreezeAllDishandU...") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                |         |
  | creditorAccountNumber              |         |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e94e1a10-b2cc-4456-8d61-a14085ccd929" testId="e489a39e-36aa-5011-ee67-cc97728ac749" testName="OPARetriesForAllowedResponses (502,,)" computerName="ip-10-130-163-65" duration="00:00:02.6061790" startTime="2025-09-12T15:39:39.1510150+12:00" endTime="2025-09-12T15:39:41.7576192+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e94e1a10-b2cc-4456-8d61-a14085ccd929">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:39.1524855+12:00","LogLevel":"Information","Message":"Starting Test Execution: OPA retries for allowed responses:[\"[ErrorCode, 502]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"OPA retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 502]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:39.1588419+12:00","LogLevel":"Information","Message":"Successfully created map OPA_1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA_1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:39.1591513+12:00","LogLevel":"Information","Message":"Successfully created map OPA for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:39.6616538+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_0f722a0c-65fc-4159-a89b-edbbb29bbba8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_0f722a0c-65fc-4159-a89b-edbbb29bbba8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:40.1601254+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d529ca15-2ff4-4bb5-98ae-985f0877c893 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d529ca15-2ff4-4bb5-98ae-985f0877c893","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:40.6531118+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"85b311dd-ac37-4882-8fd8-dd98e295004b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"85b311dd-ac37-4882-8fd8-dd98e295004b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:40.6532952+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:40.6533472+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:41.2510065+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 597.5881ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":597.5881,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:41.2511696+12:00","LogLevel":"Information","Message":"End processing HTTP request after 597.9056ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":597.9056,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:41.2523662+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"fb082e2d3516457b8ce3c30e07f3318f\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:40.156Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:40.156Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"fb082e2d3516457b8ce3c30e07f3318f\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:40.156Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:40.156Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will return 502 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBeThenSuccessful("502") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the OPA mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "OPA") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3418920a-d47b-4f84-9e32-a52a4057ba33" testId="e58b79f8-933e-4375-36df-e454ae3fdc0d" testName="ProductFacilityTypes_TransferToIneligibleImmediateCombos (S1,I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99,)" computerName="ip-10-130-163-65" duration="00:00:53.7108084" startTime="2025-09-12T15:47:05.6904463+12:00" endTime="2025-09-12T15:47:59.4018329+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3418920a-d47b-4f84-9e32-a52a4057ba33">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:47:05.6918400+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to ineligible immediate combos:[\"[DebtorProductType, S1]\",\"[CreditorProductTypes, I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to ineligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S1]","[CreditorProductTypes, I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:05.6983038+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b2fad0f2-beea-4e24-b3e0-0ead377fbbca for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b2fad0f2-beea-4e24-b3e0-0ead377fbbca","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:06.1991896+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_07cf68bd-b113-441e-a5c5-554494f38dfe for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_07cf68bd-b113-441e-a5c5-554494f38dfe","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:06.7002559+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cbc446ed-1fe0-447a-920d-5ec262f376ea for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cbc446ed-1fe0-447a-920d-5ec262f376ea","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:07.1969446+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"86944698-1ffd-4c21-9bd3-a0a1275f3df5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"86944698-1ffd-4c21-9bd3-a0a1275f3df5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:07.1970763+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:07.1971057+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:07.2126296+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 15.4927ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.4927,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:07.2127382+12:00","LogLevel":"Information","Message":"End processing HTTP request after 15.679ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.679,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:07.2179805+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fd06bd87-fcc1-4aec-9a6e-e4a2c38a6cd5 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fd06bd87-fcc1-4aec-9a6e-e4a2c38a6cd5","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:07.7181381+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5c6983a2-3f12-4596-94ba-1d15cd1fd379 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5c6983a2-3f12-4596-94ba-1d15cd1fd379","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:08.2196311+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_772bcf49-0c14-4c29-af32-90c19e70edce for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_772bcf49-0c14-4c29-af32-90c19e70edce","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:08.7165722+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f293e641-b1d8-4338-917c-8923ebcd943b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f293e641-b1d8-4338-917c-8923ebcd943b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:08.7166939+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:08.7167212+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:08.7305510+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.7992ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7992,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:08.7306758+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9997ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9997,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:08.7359909+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fba91802-28a5-46df-9628-8175a9355b4b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fba91802-28a5-46df-9628-8175a9355b4b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:09.2379034+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e4c925be-e041-4f0b-8e51-1700858f8d78 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e4c925be-e041-4f0b-8e51-1700858f8d78","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:09.7389009+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e52132b6-bb36-42f9-9c20-0f09ae6fb25b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e52132b6-bb36-42f9-9c20-0f09ae6fb25b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:10.2376096+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c9ae8208-cfae-4117-a652-183a5448f1fd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c9ae8208-cfae-4117-a652-183a5448f1fd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:10.2377356+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:10.2377644+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:10.2512692+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4778ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4778,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:10.2514093+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6897ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6897,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:10.2567314+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c9abdf36-baee-4f46-bdb3-56e6c8db4977 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c9abdf36-baee-4f46-bdb3-56e6c8db4977","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:10.7588191+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c6c64aea-fb3c-4ec8-9dc3-1bbc0ff9c3f9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c6c64aea-fb3c-4ec8-9dc3-1bbc0ff9c3f9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:11.2597628+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_632c7d0f-8113-4b08-8cda-d9a670aaad0f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_632c7d0f-8113-4b08-8cda-d9a670aaad0f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:11.7561758+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3c6b18b7-44d8-4ea1-be6e-c9cc3d07f454\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3c6b18b7-44d8-4ea1-be6e-c9cc3d07f454\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:11.7562832+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:11.7563085+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:11.7753226+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 18.9868ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.9868,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:11.7754555+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.1852ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.1852,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:11.7804069+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8d1359da-e342-462e-8df3-987680a108b7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8d1359da-e342-462e-8df3-987680a108b7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:12.2842538+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6d3de379-0959-4b4b-9dff-ef5e70770cb5 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6d3de379-0959-4b4b-9dff-ef5e70770cb5","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:12.7833713+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2f278493-41b3-4ae7-b695-2e483be4c042 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2f278493-41b3-4ae7-b695-2e483be4c042","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:13.2851951+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8676b212-0a7e-4232-8b8a-5cc7c88a1767\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8676b212-0a7e-4232-8b8a-5cc7c88a1767\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:13.2853141+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:13.2853437+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:13.2991099+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.742ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.742,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:13.2991841+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.8875ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8875,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:13.3040422+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_21eeabd0-4a36-443b-8f00-77c8bbd4f048 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_21eeabd0-4a36-443b-8f00-77c8bbd4f048","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:13.8065519+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_bfed8edb-2e75-4a60-a64a-c7e23b4decb4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_bfed8edb-2e75-4a60-a64a-c7e23b4decb4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:14.3029402+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_25fc16c6-7088-444f-b1b7-ab468b061cfb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_25fc16c6-7088-444f-b1b7-ab468b061cfb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:14.8047796+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"80d5d07b-6dd6-474f-aee1-37d93b48ce73\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"80d5d07b-6dd6-474f-aee1-37d93b48ce73\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:14.8049043+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:14.8049304+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:14.8184232+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4665ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4665,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:14.8185314+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6444ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6444,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:14.8238920+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b3bffb12-a2de-4955-8de3-bbfb8c555d18 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b3bffb12-a2de-4955-8de3-bbfb8c555d18","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:15.3193192+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5d33f043-e3e3-470c-970b-59150d5ab86f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5d33f043-e3e3-470c-970b-59150d5ab86f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:15.8224615+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_843a04d4-902e-4948-89d8-1e761c799ddc for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_843a04d4-902e-4948-89d8-1e761c799ddc","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:16.3166437+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6ded4dfb-066f-4ead-83f1-55a57d4d69b9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6ded4dfb-066f-4ead-83f1-55a57d4d69b9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:16.3167727+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:16.3168010+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:16.3308449+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.0157ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0157,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:16.3309584+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.2042ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2042,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:16.3362144+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e6298e93-6731-455f-8adf-b465b174c6c1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e6298e93-6731-455f-8adf-b465b174c6c1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:16.8388632+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3f31b612-3a93-41b6-9fc7-6f9241daa89b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3f31b612-3a93-41b6-9fc7-6f9241daa89b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:17.3405020+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_42a9018e-ac8d-420c-8f24-ddf07da35437 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_42a9018e-ac8d-420c-8f24-ddf07da35437","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:17.8403167+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"dcb34d68-4f94-4b89-88c3-84a1ad486702\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"dcb34d68-4f94-4b89-88c3-84a1ad486702\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:17.8404292+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:17.8404545+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:17.8542926+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.811ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.811,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:17.8544079+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9943ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9943,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:17.8599157+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_28678a7c-0b7a-4e9f-9f54-5bf9f939bdd9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_28678a7c-0b7a-4e9f-9f54-5bf9f939bdd9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:18.3589778+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a5f7c96a-d508-49fc-9821-0fe924953a04 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a5f7c96a-d508-49fc-9821-0fe924953a04","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:18.8623635+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_08b4e9e4-7a53-4e27-bf1d-d49cb9d6f44f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_08b4e9e4-7a53-4e27-bf1d-d49cb9d6f44f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:19.3651129+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ea16c6ce-ed12-4726-9787-2c58f82eefdb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ea16c6ce-ed12-4726-9787-2c58f82eefdb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:19.3652380+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:19.3652681+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:19.3792905+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9948ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9948,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:19.3794146+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1944ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1944,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:19.3846184+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_620ab955-3b19-4060-9716-7d878cfbaf9f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_620ab955-3b19-4060-9716-7d878cfbaf9f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:19.8877164+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_de57c6e5-d380-414d-babd-c6fe758a219d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_de57c6e5-d380-414d-babd-c6fe758a219d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:20.3871247+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ddf59b50-fac3-4ce4-84c5-fcf2d8c64759 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ddf59b50-fac3-4ce4-84c5-fcf2d8c64759","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:20.8888721+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"117955db-1b55-4d2e-b179-ec792c9af371\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"117955db-1b55-4d2e-b179-ec792c9af371\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:20.8889999+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:20.8890300+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:20.9036151+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.5552ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5552,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:20.9037125+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.7299ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.7299,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:20.9085692+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1707f510-210c-431c-857d-4bbe0df1624d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1707f510-210c-431c-857d-4bbe0df1624d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:21.4119995+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_04b17edc-b750-4728-96ba-bda7152a8e4d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_04b17edc-b750-4728-96ba-bda7152a8e4d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:21.9152329+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fafe1302-8f91-402f-8e75-31092010bac2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fafe1302-8f91-402f-8e75-31092010bac2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:22.4129894+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"19823128-f589-44f2-b4d7-2aa1eb49098e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"19823128-f589-44f2-b4d7-2aa1eb49098e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:22.4131094+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:22.4131462+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:22.4272010+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.0275ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0275,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:22.4272952+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.2051ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2051,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:22.4326796+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9a1ef4dc-37e8-4c0f-b045-27b7f302cf2d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9a1ef4dc-37e8-4c0f-b045-27b7f302cf2d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:22.9314942+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_4b695ca0-851a-4e28-a131-ae7eaf181282 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_4b695ca0-851a-4e28-a131-ae7eaf181282","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:23.4308051+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b0ee4786-bb1d-4bc9-b251-905e8b90bb80 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b0ee4786-bb1d-4bc9-b251-905e8b90bb80","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:23.9285495+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ddce69da-c267-4839-8a4e-913a08542c72\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ddce69da-c267-4839-8a4e-913a08542c72\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:23.9286766+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:23.9287079+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:23.9429419+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2033ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2033,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:23.9430594+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.4014ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4014,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:23.9482888+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_13389420-6293-4236-9f45-59ee2d133cbf for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_13389420-6293-4236-9f45-59ee2d133cbf","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:24.4472046+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d2b953f9-f42d-4c2f-8476-0a6d841aa28d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d2b953f9-f42d-4c2f-8476-0a6d841aa28d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:24.9465479+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b32ccaf3-f54f-4543-b2b0-174a28549925 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b32ccaf3-f54f-4543-b2b0-174a28549925","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:25.4443862+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"59d8d3c0-dcba-4d8b-8dc3-2bee143f80fd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"59d8d3c0-dcba-4d8b-8dc3-2bee143f80fd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:25.4445021+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:25.4445276+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:25.4583799+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.8275ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8275,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:25.4584641+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.979ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.979,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:25.4635972+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1b1fcb15-5708-4edc-a2f1-295f78551165 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1b1fcb15-5708-4edc-a2f1-295f78551165","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:25.9582874+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a0d1b79f-d2a7-46d7-9b16-8fa0786ed5ce for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a0d1b79f-d2a7-46d7-9b16-8fa0786ed5ce","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:26.4595388+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d00ba47e-f8bb-4b67-8f1b-efdb7a9aca92 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d00ba47e-f8bb-4b67-8f1b-efdb7a9aca92","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:26.9606609+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"454ea947-f4f7-451e-9e0c-678dde79a4bb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"454ea947-f4f7-451e-9e0c-678dde79a4bb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:26.9607903+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:26.9608218+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:26.9752145+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.3619ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3619,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:26.9753188+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.5465ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5465,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:26.9810937+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a3f94d7b-c8bf-4bca-a261-8cc75dcb8333 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a3f94d7b-c8bf-4bca-a261-8cc75dcb8333","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:27.4798570+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8ebd307e-52e6-4ba7-8a7b-479be08e6f2a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8ebd307e-52e6-4ba7-8a7b-479be08e6f2a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:27.9832003+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b9d465b2-7402-4367-9d9b-cfae1addc20d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b9d465b2-7402-4367-9d9b-cfae1addc20d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:28.4853565+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b44a1163-321d-43f2-8532-64dd43bbc402\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b44a1163-321d-43f2-8532-64dd43bbc402\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:28.4854914+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:28.4855223+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:28.4996488+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.0956ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0956,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:28.4997509+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.279ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.279,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:28.5091038+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ab533b50-83cf-4533-9214-81c372ee109b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ab533b50-83cf-4533-9214-81c372ee109b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:29.0102557+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ed04675a-8450-4469-a7ac-76e8d4bc21e4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ed04675a-8450-4469-a7ac-76e8d4bc21e4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:29.5116190+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2de04b36-3c34-49bc-abf1-bcb7ecb17c5e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2de04b36-3c34-49bc-abf1-bcb7ecb17c5e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:30.0090508+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"abe889f5-e328-4620-99e3-1279be89675e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"abe889f5-e328-4620-99e3-1279be89675e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:30.0091877+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:30.0092172+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:30.0231954+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.949ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.949,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:30.0233168+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1522ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1522,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:30.0294520+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_01faa305-5f1d-4f9e-aebd-a9bfd8152364 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_01faa305-5f1d-4f9e-aebd-a9bfd8152364","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:30.5261671+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_eb0dc80e-9fb8-40f3-9ec3-d125b093fba2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_eb0dc80e-9fb8-40f3-9ec3-d125b093fba2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:31.0274461+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0eee3791-0987-434e-a64e-30515edfa99f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0eee3791-0987-434e-a64e-30515edfa99f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:31.5291587+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c7ed8302-e1aa-4a5d-b478-352dcd11dce8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c7ed8302-e1aa-4a5d-b478-352dcd11dce8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:31.5292845+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:31.5293126+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:31.5436668+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.3241ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3241,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:31.5437823+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.5177ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5177,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:31.5493217+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4dae5ea2-5482-42d4-85de-c21fa8805eb0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4dae5ea2-5482-42d4-85de-c21fa8805eb0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:32.0465692+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_86f54435-36d5-448b-a1dd-2c547a6e125d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_86f54435-36d5-448b-a1dd-2c547a6e125d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:32.5481341+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b0fe7e00-9787-4c5a-a551-ad4a4e835088 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b0fe7e00-9787-4c5a-a551-ad4a4e835088","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:33.0441636+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e547d49a-2ffc-480f-9f9d-47d4116fcbae\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e547d49a-2ffc-480f-9f9d-47d4116fcbae\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:33.0442799+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:33.0443050+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:33.0585892+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2568ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2568,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:33.0587079+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.444ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.444,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:33.0642979+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_09eedf80-7cc4-463f-bc81-657fd65ca03a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_09eedf80-7cc4-463f-bc81-657fd65ca03a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:33.5669975+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_17ecdfc1-9ddb-4aaf-b92a-a1ef6ff44fdd for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_17ecdfc1-9ddb-4aaf-b92a-a1ef6ff44fdd","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:34.0660376+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_68de5063-b689-4357-81a6-60d696fe3ec0 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_68de5063-b689-4357-81a6-60d696fe3ec0","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:34.5690233+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a1b3ed66-cce4-4f39-a628-f84663e93d4f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a1b3ed66-cce4-4f39-a628-f84663e93d4f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:34.5691347+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:34.5691615+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:34.5883131+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 19.1267ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.1267,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:34.5884028+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.2836ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.2836,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:34.5933376+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1a039c0d-3428-4e4c-9757-ce56caa3d454 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1a039c0d-3428-4e4c-9757-ce56caa3d454","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:35.0967630+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_26a3a18e-c5b8-4d3e-8682-29d81517ad27 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_26a3a18e-c5b8-4d3e-8682-29d81517ad27","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:35.6000055+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a82ff34e-541c-493a-9591-a4518c35c06b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a82ff34e-541c-493a-9591-a4518c35c06b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:36.0960972+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9000d59a-f3a4-4986-8ece-5cfa752ece92\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9000d59a-f3a4-4986-8ece-5cfa752ece92\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:36.0962304+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:36.0962610+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:36.1128968+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 16.6099ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":16.6099,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:36.1130075+12:00","LogLevel":"Information","Message":"End processing HTTP request after 16.7924ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":16.7924,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:36.1180758+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_98ab456b-5bb4-448a-9a31-a904a9351498 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_98ab456b-5bb4-448a-9a31-a904a9351498","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:36.6210016+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_94fda058-0b3b-42fb-a8a1-cfd893e5a797 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_94fda058-0b3b-42fb-a8a1-cfd893e5a797","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:37.1181263+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_7eafd72d-a893-4c74-9f49-b7b0b6dba730 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_7eafd72d-a893-4c74-9f49-b7b0b6dba730","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:37.6209745+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c5e69577-8fc0-4b81-bd98-4b15a5792f09\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c5e69577-8fc0-4b81-bd98-4b15a5792f09\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:37.6211046+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:37.6211321+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:37.6350611+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.8993ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8993,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:37.6351655+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.0769ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0769,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:37.6403538+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_17532324-ad40-4a9b-8aa4-dbed68059b89 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_17532324-ad40-4a9b-8aa4-dbed68059b89","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:38.1420550+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_82a64142-6f3d-4f2a-b5d0-55518041bb29 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_82a64142-6f3d-4f2a-b5d0-55518041bb29","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:38.6489313+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_218e9b07-8c49-432d-ba28-d2f27e3fb003 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_218e9b07-8c49-432d-ba28-d2f27e3fb003","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:39.1408475+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1dc91ddd-a5a8-41dc-9e42-f3cdee068ff8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1dc91ddd-a5a8-41dc-9e42-f3cdee068ff8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:39.1409707+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:39.1409996+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:39.1544753+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4493ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4493,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:39.1545812+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6263ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6263,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:39.1598569+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8812427b-22cb-4565-b117-3f2c55b7f3d4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8812427b-22cb-4565-b117-3f2c55b7f3d4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:39.6577378+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e65f2eb3-97fb-4b03-87e4-cbe75830960f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e65f2eb3-97fb-4b03-87e4-cbe75830960f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:40.1548810+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4ee98bf8-5746-4e20-8e82-cd466d653ab6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4ee98bf8-5746-4e20-8e82-cd466d653ab6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:40.6569811+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"db69b934-95de-48ce-b667-a862a8a4afff\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"db69b934-95de-48ce-b667-a862a8a4afff\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:40.6570935+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:40.6571223+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:40.6707037+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5531ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5531,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:40.6707987+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.722ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.722,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:40.6760247+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_27f9c8c1-0cb9-406b-be9a-ee8e40d62f84 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_27f9c8c1-0cb9-406b-be9a-ee8e40d62f84","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:41.1759995+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3740ac85-619d-4c96-a44a-65da1a2ea711 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3740ac85-619d-4c96-a44a-65da1a2ea711","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:41.6790447+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f19e7743-1f7b-4a8c-9f11-94fc373c6b8d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f19e7743-1f7b-4a8c-9f11-94fc373c6b8d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:42.1746580+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e51cfeec-6e6d-4b9f-a8d4-be9f8870f2a3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e51cfeec-6e6d-4b9f-a8d4-be9f8870f2a3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:42.1747669+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:42.1747935+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:42.1885071+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.6917ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6917,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:42.1885960+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.8425ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8425,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:42.1938070+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_98032ccc-261f-401f-8ad0-f207926a40b7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_98032ccc-261f-401f-8ad0-f207926a40b7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:42.6941537+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9cd46b67-8a9d-45c5-9ea4-9a83401a907f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9cd46b67-8a9d-45c5-9ea4-9a83401a907f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:43.1901948+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0dfaa247-0469-4625-9793-3ba48f3a7d09 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0dfaa247-0469-4625-9793-3ba48f3a7d09","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:43.6928302+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c128a4d6-909c-4415-b6df-fe1edb78e33c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c128a4d6-909c-4415-b6df-fe1edb78e33c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:43.6929362+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:43.6929611+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:43.7064309+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4446ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4446,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:43.7065042+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.5823ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5823,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:43.7113265+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f402b7b7-c04b-4aa9-815d-b202f55cbd45 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f402b7b7-c04b-4aa9-815d-b202f55cbd45","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:44.2095858+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5074bd12-ed9b-41cb-8633-14f1b4925ca8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5074bd12-ed9b-41cb-8633-14f1b4925ca8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:44.7120957+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3cf302b2-562d-43bc-859e-b1cffb752d18 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3cf302b2-562d-43bc-859e-b1cffb752d18","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:45.2127250+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5ac295bf-ec70-44e3-a596-0abe1eff32a4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5ac295bf-ec70-44e3-a596-0abe1eff32a4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:45.2128377+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:45.2128634+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:45.2268842+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9966ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9966,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:45.2269779+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1532ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1532,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:45.2324891+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f5762c07-9fdf-4cc9-8282-f6e6aa067428 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f5762c07-9fdf-4cc9-8282-f6e6aa067428","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:45.7348509+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b77e81c5-2379-4fab-a409-c2e53648e226 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b77e81c5-2379-4fab-a409-c2e53648e226","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:46.2321615+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_004def46-4598-4d16-8539-b0b4ee3de671 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_004def46-4598-4d16-8539-b0b4ee3de671","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:46.7284656+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4b325982-31c0-47d8-802e-4652a294e1a9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4b325982-31c0-47d8-802e-4652a294e1a9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:46.7285798+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:46.7286030+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:46.7421585+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5328ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5328,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:46.7422330+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.67ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.67,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:46.7469976+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7a23f6b3-fa87-48d7-8ee8-694b91cbf7b7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7a23f6b3-fa87-48d7-8ee8-694b91cbf7b7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:47.2433434+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_642fc39b-2b42-412b-a489-b57deab568d0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_642fc39b-2b42-412b-a489-b57deab568d0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:47.7488628+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_802e1b5a-8469-499e-a67b-d757c739c27f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_802e1b5a-8469-499e-a67b-d757c739c27f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:48.2496537+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a12471c3-4d74-460f-b069-33e589b79ca3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a12471c3-4d74-460f-b069-33e589b79ca3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:48.2497829+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:48.2498109+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:48.2639566+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.1166ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1166,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:48.2640548+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.2886ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2886,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:48.2692648+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0420f603-51ac-4d79-a70a-be4c88d94bd1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0420f603-51ac-4d79-a70a-be4c88d94bd1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:48.7709556+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2c46841a-51e7-4d1a-b262-b4c968cd867f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2c46841a-51e7-4d1a-b262-b4c968cd867f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:49.2685394+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ecdf1308-1f93-4bfe-9606-3da9c2834d30 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ecdf1308-1f93-4bfe-9606-3da9c2834d30","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:49.7650585+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"163430ff-b7a9-4fb0-8db1-f8b20ab9db17\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"163430ff-b7a9-4fb0-8db1-f8b20ab9db17\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:49.7651699+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:49.7651945+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:49.7789481+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.726ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.726,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:49.7790385+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.8838ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8838,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:49.7840155+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c7791059-a77e-4cfc-b0c0-df568ed99a13 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c7791059-a77e-4cfc-b0c0-df568ed99a13","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:50.2784627+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_63b81e4d-f606-4815-b008-6c65578366a2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_63b81e4d-f606-4815-b008-6c65578366a2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:50.7792222+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c60d7f7f-5f42-45dd-a71f-ba973348a4a6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c60d7f7f-5f42-45dd-a71f-ba973348a4a6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:51.2803848+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f8a6629a-88dc-484a-a939-a7547e450d88\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f8a6629a-88dc-484a-a939-a7547e450d88\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:51.2804942+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:51.2805196+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:51.2944535+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9056ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9056,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:51.2945543+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.0743ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0743,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:51.2999758+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_560364a7-fa52-4962-acb8-7938ad4bfdd6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_560364a7-fa52-4962-acb8-7938ad4bfdd6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:51.8027006+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_59584aab-cfae-48bb-b946-03b05a6525a4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_59584aab-cfae-48bb-b946-03b05a6525a4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:52.3060488+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b0ca7aa3-af66-47dd-851a-3119f069e30e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b0ca7aa3-af66-47dd-851a-3119f069e30e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:52.8006328+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"77f65e39-1f45-4684-ae7c-4365ce13a544\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"77f65e39-1f45-4684-ae7c-4365ce13a544\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:52.8007613+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:52.8007911+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:52.8145439+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.7293ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7293,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:52.8146257+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.8834ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8834,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:52.8194816+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_02c75481-2828-4584-a6cc-1564d077ae9a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_02c75481-2828-4584-a6cc-1564d077ae9a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:53.3179353+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_4afbd839-c1ad-4c51-aeb2-7cffba90911e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_4afbd839-c1ad-4c51-aeb2-7cffba90911e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:53.8171514+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_50b1e233-8b7b-4a18-a010-266ac3fc4a09 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_50b1e233-8b7b-4a18-a010-266ac3fc4a09","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:54.3177619+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e247d3c1-6cd4-477b-b4c6-182aba4cd6a7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e247d3c1-6cd4-477b-b4c6-182aba4cd6a7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:54.3178811+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:54.3179042+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:54.3314084+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4787ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4787,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:54.3315008+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6357ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6357,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:54.3361271+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a5d4d82f-4a40-4858-bf43-adae7e74ce6f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a5d4d82f-4a40-4858-bf43-adae7e74ce6f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:54.8387460+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6db9c656-7a26-45f1-bf70-a074496a5a76 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6db9c656-7a26-45f1-bf70-a074496a5a76","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:55.3429012+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3dd06e79-e5b0-4f1d-adb0-81528e38cd91 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3dd06e79-e5b0-4f1d-adb0-81528e38cd91","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:55.8457025+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1638dfde-e414-400c-9277-95216d48b7f4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1638dfde-e414-400c-9277-95216d48b7f4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:55.8458123+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:55.8458366+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:55.8651666+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 19.2986ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.2986,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:55.8652538+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.4568ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.4568,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:55.8705151+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f3aae955-f67e-4cc8-a692-275e2df8fa87 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f3aae955-f67e-4cc8-a692-275e2df8fa87","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:56.3729735+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_106037b5-09cc-4cb9-8964-96c8fac33be2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_106037b5-09cc-4cb9-8964-96c8fac33be2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:56.8711568+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0bbd9def-46b5-49ce-a2c5-0cc8f600354c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0bbd9def-46b5-49ce-a2c5-0cc8f600354c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:57.3679377+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"92dca839-0a6f-44f6-b0cb-39593b3e51e6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"92dca839-0a6f-44f6-b0cb-39593b3e51e6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:57.3680611+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:57.3680916+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:57.3815209+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4036ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4036,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:57.3816052+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.561ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.561,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:57.3864475+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_6219da39-bbf0-4a85-9cec-8b8cb338a192 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_6219da39-bbf0-4a85-9cec-8b8cb338a192","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:57.8868299+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6a4599be-cc5f-4d13-b087-a24c5bd44e79 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6a4599be-cc5f-4d13-b087-a24c5bd44e79","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:58.3910632+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d0e489b0-b8e1-43ec-a344-971794b4b34f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d0e489b0-b8e1-43ec-a344-971794b4b34f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:58.8889029+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b5cd0ad2-9e34-4519-8a9b-9b37cdc835cf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b5cd0ad2-9e34-4519-8a9b-9b37cdc835cf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:58.8890207+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:58.8890480+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:58.9026260+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5579ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5579,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:58.9027070+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6991ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6991,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S1 account attempts a transfer to I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S1", "I1, I9, I30, L5, ...") (53.2s)
Then all product facility transfer combos are NOT successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreNotSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="17e5fe86-6737-431c-95ec-9b0781506468" testId="c7de8bf5-db98-9244-9374-df85f1283db0" testName="MockedOPAResponseIsUnsuccessful" computerName="ip-10-130-163-65" duration="00:00:01.5404474" startTime="2025-09-12T15:49:03.4650774+12:00" endTime="2025-09-12T15:49:05.0060672+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17e5fe86-6737-431c-95ec-9b0781506468">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:03.4677062+12:00","LogLevel":"Information","Message":"Starting Test Execution: Mocked OPA response is unsuccessful:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Mocked OPA response is unsuccessful","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:03.4746045+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_a36aafe9-bd1d-4dab-b396-6df6d36aa81f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_a36aafe9-bd1d-4dab-b396-6df6d36aa81f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:03.9758020+12:00","LogLevel":"Information","Message":"Successfully created map OPAunsuccessful_3d03c367-dee7-473e-a7ba-266c4415c3bf for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAunsuccessful_3d03c367-dee7-473e-a7ba-266c4415c3bf","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:04.4726395+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"41cfe456-5185-4e6e-a89d-5c5ca2cb1bb2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"41cfe456-5185-4e6e-a89d-5c5ca2cb1bb2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:04.4727306+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:04.4727554+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:04.5030811+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 30.3028ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":30.3028,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:04.5034652+12:00","LogLevel":"Information","Message":"End processing HTTP request after 30.7441ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":30.7441,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:04.5036885+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"7d1a307f72954795bf784c622cb74b36\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:04.502Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"UNAUTHORISED\",\"message\":\"Authorisation Failed\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"7d1a307f72954795bf784c622cb74b36\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:04.502Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"UNAUTHORISED\",\"message\":\"Authorisation Failed\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the OPA mock response will be unsuccessful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("unsuccessful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field      | Value                |
  | __typename | UnsuccessfulPayment  |
  | code       | UNAUTHORISED         |
  | message    | Authorisation Failed |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="74b5eb79-5981-4524-a0ac-dba93c7eabfe" testId="db54655c-59dd-9bba-d5b4-06de3482b6be" testName="RetryOPARequestTimesOut" computerName="ip-10-130-163-65" duration="00:00:17.5517002" startTime="2025-09-12T15:39:49.6389630+12:00" endTime="2025-09-12T15:40:07.1909864+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="74b5eb79-5981-4524-a0ac-dba93c7eabfe">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:49.6408928+12:00","LogLevel":"Information","Message":"Starting Test Execution: Retry OPA request times out:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Retry OPA request times out","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:49.6476089+12:00","LogLevel":"Information","Message":"Successfully created map OPASuccess_7269d9ae-0564-493f-926c-e6ba7700b02b Delayed for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPASuccess_7269d9ae-0564-493f-926c-e6ba7700b02b Delayed","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:49.6476811+12:00","LogLevel":"Information","Message":"Successfully created map OPASuccess_7269d9ae-0564-493f-926c-e6ba7700b02bNot Delayed for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPASuccess_7269d9ae-0564-493f-926c-e6ba7700b02bNot Delayed","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:50.1538008+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_780e1407-81ea-4e2e-af3a-dd99411b1e29 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_780e1407-81ea-4e2e-af3a-dd99411b1e29","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:50.6507303+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"57c51140-682f-4931-9d58-3a520e6a5348\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"57c51140-682f-4931-9d58-3a520e6a5348\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:50.6508921+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:50.6509300+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:00.6805390+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 10029.5406ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10029.5406,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:00.6808679+12:00","LogLevel":"Information","Message":"End processing HTTP request after 10029.8098ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10029.8098,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:00.6812511+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"OPERATION_CANCEL_TOKEN\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"OPERATION_CANCEL_TOKEN\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will time out
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillTimeOut() (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (10.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 2 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(2) (6.0s)
And there are 1 calls to the OPA mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "OPA") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                                                                                     |
  | $.errors[0].message | The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing. |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7bee6ced-302f-42da-b3ff-9aede832faff" testId="0ac02988-e474-a920-cad8-9f98fd9fe70a" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S20,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3170345" startTime="2025-09-12T15:44:51.6636703+12:00" endTime="2025-09-12T15:45:13.9810625+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bee6ced-302f-42da-b3ff-9aede832faff">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:44:51.6666823+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S20]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S20]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:51.6752540+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5b4b457d-2eb9-468e-b2d0-98a36e697f71 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5b4b457d-2eb9-468e-b2d0-98a36e697f71","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:52.1749525+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_70a6264d-40b0-423c-98c6-a2726b5ef6cc for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_70a6264d-40b0-423c-98c6-a2726b5ef6cc","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:52.6742470+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f412cd3d-92ba-40cc-9a3b-f6e2330f858c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f412cd3d-92ba-40cc-9a3b-f6e2330f858c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:53.1727456+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8dd646d8-fd78-4a03-83d9-8a2a036bcf31\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8dd646d8-fd78-4a03-83d9-8a2a036bcf31\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:53.1728641+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:53.1728906+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:53.2314128+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.497ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.497,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:53.2315174+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.6661ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.6661,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:53.2393893+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_3db0c0b3-8ce0-43b7-aa43-8eef7d2d85ae for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_3db0c0b3-8ce0-43b7-aa43-8eef7d2d85ae","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:53.7385506+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ed974f2d-440f-4f81-91db-cff9f2a5c602 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ed974f2d-440f-4f81-91db-cff9f2a5c602","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:54.2396366+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_5d154c5b-b8e5-4909-9d6e-0269fc402a79 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_5d154c5b-b8e5-4909-9d6e-0269fc402a79","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:54.7361139+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"61993a5c-266f-4d98-bbf3-8edf918a2ba6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"61993a5c-266f-4d98-bbf3-8edf918a2ba6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:54.7362215+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:54.7362472+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:54.7876963+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.4233ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.4233,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:54.7878109+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.6027ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.6027,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:54.7927495+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f6e1f290-e2c3-4e03-a0d7-2897f4e1338a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f6e1f290-e2c3-4e03-a0d7-2897f4e1338a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:55.2954707+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b0b3c92e-1a9a-4359-9966-45c986914a30 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b0b3c92e-1a9a-4359-9966-45c986914a30","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:55.7943291+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6e3f6129-63dd-41ec-9aa0-1da964885b0b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6e3f6129-63dd-41ec-9aa0-1da964885b0b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:56.2952035+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9be90921-5680-4af1-b7b8-55621824a4a6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9be90921-5680-4af1-b7b8-55621824a4a6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:56.2953291+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:56.2953832+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:56.3467172+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.299ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.299,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:56.3468365+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.5231ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.5231,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:56.3521372+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_acb763ec-1146-400c-8ba7-5073b5f52637 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_acb763ec-1146-400c-8ba7-5073b5f52637","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:56.8547559+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_dfa235c6-e240-444f-8538-36e8c9ac9715 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_dfa235c6-e240-444f-8538-36e8c9ac9715","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:57.3554874+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_da298018-343c-41d1-950b-ee9dbd8201a4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_da298018-343c-41d1-950b-ee9dbd8201a4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:57.8521210+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b4b1120f-dd79-4973-b214-5e509ab05dfd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b4b1120f-dd79-4973-b214-5e509ab05dfd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:57.8522437+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:57.8522719+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:57.9045099+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.2098ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.2098,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:57.9046166+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3883ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3883,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:57.9096233+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_06a12a22-a519-4ce3-88db-eb870d84ad4d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_06a12a22-a519-4ce3-88db-eb870d84ad4d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:58.4102106+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5a70f8b4-bbb0-4757-8272-f4bd1bb4c11e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5a70f8b4-bbb0-4757-8272-f4bd1bb4c11e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:58.9113970+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_7b882476-4636-4791-a9f3-9fca6254d7f1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_7b882476-4636-4791-a9f3-9fca6254d7f1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:59.4080656+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8a08539b-a986-4198-a3a0-cec0a20b847a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8a08539b-a986-4198-a3a0-cec0a20b847a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:59.4081715+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:59.4081967+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:59.4590230+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 50.7979ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.7979,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:59.4591290+12:00","LogLevel":"Information","Message":"End processing HTTP request after 50.9713ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.9713,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:59.4641255+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4c49505f-13a4-4ff9-8bbc-58eb2db621bb for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4c49505f-13a4-4ff9-8bbc-58eb2db621bb","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:59.9675730+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_0915d7f3-8014-48c5-a9c1-a65969e05f66 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_0915d7f3-8014-48c5-a9c1-a65969e05f66","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:00.4667606+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1b319532-7846-4f38-946c-7fb1c0275015 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1b319532-7846-4f38-946c-7fb1c0275015","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:00.9635774+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9856d391-5d27-47e7-8a5f-d11cd56ef881\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9856d391-5d27-47e7-8a5f-d11cd56ef881\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:00.9636989+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:00.9637281+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:01.0220927+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.3348ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.3348,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:01.0222183+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.5351ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.5351,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:01.0276729+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_997ae296-f775-4c51-b073-b6da96d6c760 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_997ae296-f775-4c51-b073-b6da96d6c760","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:01.5272116+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d54c71be-e8fc-4d90-8b30-1f3d610143a9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d54c71be-e8fc-4d90-8b30-1f3d610143a9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:02.0265055+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e1d70955-5c8c-4b51-94d5-bc8ebfeba302 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e1d70955-5c8c-4b51-94d5-bc8ebfeba302","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:02.5236816+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"acd9d217-5971-45c3-8fbc-a54b3bef508f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"acd9d217-5971-45c3-8fbc-a54b3bef508f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:02.5238074+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:02.5238364+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:02.5762510+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.3864ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3864,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:02.5763615+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.5705ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5705,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:02.5816416+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_90be189e-6882-4ab4-94d6-8b8c34f9b9e8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_90be189e-6882-4ab4-94d6-8b8c34f9b9e8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:03.0826762+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_39b6d100-1f81-4caf-ab76-46d9527e95a9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_39b6d100-1f81-4caf-ab76-46d9527e95a9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:03.5838102+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_197ba8aa-bbe6-4e3a-ae00-8d3ca336ed0f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_197ba8aa-bbe6-4e3a-ae00-8d3ca336ed0f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:04.0804013+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ac6dd7d1-b367-42b5-8a8e-8dbead593e35\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ac6dd7d1-b367-42b5-8a8e-8dbead593e35\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:04.0805159+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:04.0805454+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:04.1319712+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.3886ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.3886,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:04.1320694+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.5701ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.5701,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:04.1368597+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_afc92ff6-dd20-41f3-b311-ec08272bb748 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_afc92ff6-dd20-41f3-b311-ec08272bb748","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:04.6378819+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b4028db6-ba4a-4ff4-ab7f-fb0079cf49b0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b4028db6-ba4a-4ff4-ab7f-fb0079cf49b0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:05.1387158+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_87e1995b-205f-4912-af41-ee9efee89f13 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_87e1995b-205f-4912-af41-ee9efee89f13","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:05.6355777+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8ed09b24-5515-4e24-a6d6-04f010150bd2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8ed09b24-5515-4e24-a6d6-04f010150bd2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:05.6356926+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:05.6357203+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:05.6865245+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 50.7747ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.7747,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:05.6866277+12:00","LogLevel":"Information","Message":"End processing HTTP request after 50.9511ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.9511,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:05.6917075+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_65fc2626-e442-4d7e-96c5-f02ae6b8e69d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_65fc2626-e442-4d7e-96c5-f02ae6b8e69d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:06.1926378+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_217085f0-c988-4314-9586-b83df6693d68 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_217085f0-c988-4314-9586-b83df6693d68","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:06.6906823+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_27ab6b71-511b-4183-b481-8629df718263 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_27ab6b71-511b-4183-b481-8629df718263","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:07.1876774+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"56e677af-ca82-47c8-9f6e-84eb5b90aab8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"56e677af-ca82-47c8-9f6e-84eb5b90aab8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:07.1878071+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:07.1878355+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:07.2401959+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.3162ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3162,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:07.2403248+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.5352ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5352,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:07.2452155+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f56d4974-0135-417c-bce6-af819997afc6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f56d4974-0135-417c-bce6-af819997afc6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:07.7462246+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_05eaa97c-5ae7-4e69-a17c-d260e7a795ae for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_05eaa97c-5ae7-4e69-a17c-d260e7a795ae","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:08.2462602+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_442f0fb6-b85b-47d9-9b3e-07002c01c815 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_442f0fb6-b85b-47d9-9b3e-07002c01c815","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:08.7470562+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2df55818-dc88-41cd-9c82-9dfd6f858c2f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2df55818-dc88-41cd-9c82-9dfd6f858c2f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:08.7471721+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:08.7471986+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:08.8046202+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.3945ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.3945,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:08.8047216+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.5648ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.5648,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:08.8095290+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_331e3218-bc87-4cef-9826-295f3934d727 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_331e3218-bc87-4cef-9826-295f3934d727","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:09.3122277+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_0975b685-e6c4-4d40-ad17-7c50a248876a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_0975b685-e6c4-4d40-ad17-7c50a248876a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:09.8103325+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c36635d1-8108-4051-ae90-6357ddffde88 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c36635d1-8108-4051-ae90-6357ddffde88","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:10.3088806+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2c8e2c67-53e7-4a21-a2bd-a23bf6cffb9d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2c8e2c67-53e7-4a21-a2bd-a23bf6cffb9d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:10.3090021+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:10.3090307+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:10.3605655+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.5051ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.5051,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:10.3606629+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.6785ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.6785,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:10.3655225+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_3be6c0d6-9a0b-4753-bfad-467662802eec for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_3be6c0d6-9a0b-4753-bfad-467662802eec","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:10.8660407+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_86452794-8719-4d5a-9028-96f4a4eaa9e2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_86452794-8719-4d5a-9028-96f4a4eaa9e2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:11.3662036+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_21559d79-05e1-40e4-952a-2b4a8600d289 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_21559d79-05e1-40e4-952a-2b4a8600d289","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:11.8652545+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0ff634d9-5a35-433f-b0aa-e32c5de16c79\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0ff634d9-5a35-433f-b0aa-e32c5de16c79\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:11.8653798+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:11.8654097+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:11.9204050+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.9656ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.9656,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:11.9205211+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.1604ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.1604,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:11.9253724+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c77e97a1-dc8d-4cfa-83ae-14254e76c929 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c77e97a1-dc8d-4cfa-83ae-14254e76c929","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:12.4261594+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_59183250-e597-4e5d-b0c1-6430b61d8e21 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_59183250-e597-4e5d-b0c1-6430b61d8e21","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:12.9294846+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4a8ae03a-0878-4087-95be-c26d3bfb9276 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4a8ae03a-0878-4087-95be-c26d3bfb9276","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:13.4240045+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"56b54c4e-74b0-43ea-a0d0-eeecda71a762\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"56b54c4e-74b0-43ea-a0d0-eeecda71a762\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:13.4241173+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:13.4241428+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:13.4801292+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.9569ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.9569,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:13.4802477+12:00","LogLevel":"Information","Message":"End processing HTTP request after 56.145ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.145,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S20 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S20", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1c3f53de-5251-4ed4-a1a4-a49a2196f449" testId="15b1b80d-7461-a6cc-d8f5-812ff4b45a4d" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S4,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3659113" startTime="2025-09-12T15:42:59.9180859+12:00" endTime="2025-09-12T15:43:22.2843602+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1c3f53de-5251-4ed4-a1a4-a49a2196f449">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:59.9186994+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S4]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S4]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:59.9254877+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_aa4c24db-4f12-46b5-b1ab-fb646cfd76a4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_aa4c24db-4f12-46b5-b1ab-fb646cfd76a4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:00.4267663+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6497e4e1-4f0f-4fcd-94f3-eae146ed2ae9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6497e4e1-4f0f-4fcd-94f3-eae146ed2ae9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:00.9260007+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4e4f70eb-2f98-4329-a54e-f8707b8a73ac for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4e4f70eb-2f98-4329-a54e-f8707b8a73ac","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:01.4253975+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6d426e0e-cbdc-4772-8976-d71feb580184\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6d426e0e-cbdc-4772-8976-d71feb580184\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:01.4255154+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:01.4255416+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:01.4839852+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.4137ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.4137,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:01.4840806+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.58ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.58,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:01.4894307+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_47c187a3-f8d4-44af-a332-546c2e1c6196 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_47c187a3-f8d4-44af-a332-546c2e1c6196","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:01.9933862+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1ad6efe3-fc9a-46a8-b4a6-1344bbb7e57f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1ad6efe3-fc9a-46a8-b4a6-1344bbb7e57f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:02.4900782+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_076c9483-c078-40d5-a160-5317d8eaafd3 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_076c9483-c078-40d5-a160-5317d8eaafd3","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:02.9911137+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4eade1d0-2690-4ff2-8974-781359cdf151\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4eade1d0-2690-4ff2-8974-781359cdf151\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:02.9912419+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:02.9912726+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:03.0557602+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 64.4566ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":64.4566,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:03.0558835+12:00","LogLevel":"Information","Message":"End processing HTTP request after 64.661ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":64.661,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:03.0620393+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_061cb442-a3cb-4146-8226-9d4c71c45724 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_061cb442-a3cb-4146-8226-9d4c71c45724","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:03.5623731+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7a07edc5-12f5-4c55-bf43-d4603cf33764 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7a07edc5-12f5-4c55-bf43-d4603cf33764","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:04.0637483+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_97368022-7237-43b0-8e05-9adc91f6c371 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_97368022-7237-43b0-8e05-9adc91f6c371","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:04.5616981+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ef61a5e2-765f-40a2-a3eb-b83789950fd2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ef61a5e2-765f-40a2-a3eb-b83789950fd2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:04.5618149+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:04.5618403+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:04.6149864+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.1185ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.1185,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:04.6151177+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.3188ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3188,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:04.6202491+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_129e73ee-3091-44d5-a6a8-73124afb4ba4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_129e73ee-3091-44d5-a6a8-73124afb4ba4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:05.1211355+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d590baab-81ab-4eae-b2cd-9dc7d6190641 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d590baab-81ab-4eae-b2cd-9dc7d6190641","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:05.6221448+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_19990efd-bab2-4d1f-8038-f59ffd186b4d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_19990efd-bab2-4d1f-8038-f59ffd186b4d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:06.1190259+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b741919e-e0b8-4c09-a492-2f27dbe689ba\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b741919e-e0b8-4c09-a492-2f27dbe689ba\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:06.1191366+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:06.1191631+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:06.1726628+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.4718ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4718,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:06.1727941+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6713ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6713,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:06.1782268+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4e910dc5-c07d-416b-bd1e-3234c9a43338 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4e910dc5-c07d-416b-bd1e-3234c9a43338","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:06.6812943+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b141e2fb-6055-4290-acca-66be2c552445 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b141e2fb-6055-4290-acca-66be2c552445","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:07.1824033+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d2431f25-5b15-448e-a107-ada102d3e9a1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d2431f25-5b15-448e-a107-ada102d3e9a1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:07.6782636+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa0768b1-1025-4828-ab4f-138817c124e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa0768b1-1025-4828-ab4f-138817c124e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:07.6783735+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:07.6784000+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:07.7321771+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.753ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.753,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:07.7322661+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.9086ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.9086,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:07.7376875+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0ca203ed-bd76-4ee1-8c6b-0345632c127e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0ca203ed-bd76-4ee1-8c6b-0345632c127e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:08.2361848+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_69fbcfc4-f8e3-44e1-88d2-1395f1e5dfaa for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_69fbcfc4-f8e3-44e1-88d2-1395f1e5dfaa","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:08.7398597+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_630786a6-743b-412f-8708-0d541223809e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_630786a6-743b-412f-8708-0d541223809e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:09.2365808+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f2738f52-20f4-4120-8b49-ddcab87cc1be\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f2738f52-20f4-4120-8b49-ddcab87cc1be\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:09.2367152+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:09.2367429+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:09.2913825+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.6087ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.6087,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:09.2914836+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.7833ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.7833,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:09.2973332+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c6dc9d07-da87-47d3-946e-787be89d37ee for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c6dc9d07-da87-47d3-946e-787be89d37ee","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:09.8000315+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_78f4f5ee-10a9-4a35-97f5-48eb05fc1e15 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_78f4f5ee-10a9-4a35-97f5-48eb05fc1e15","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:10.3034691+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4b2774c8-c805-4f46-bcc1-4cf28e33f541 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4b2774c8-c805-4f46-bcc1-4cf28e33f541","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:10.8034074+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d7c07346-d8f3-42b2-a25c-34aca0594e0d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d7c07346-d8f3-42b2-a25c-34aca0594e0d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:10.8035294+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:10.8035597+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:10.8623340+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.7465ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.7465,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:10.8624462+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.935ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.935,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:10.8672713+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f94c422f-9292-4b36-85ab-def1e28c32f9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f94c422f-9292-4b36-85ab-def1e28c32f9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:11.3662462+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_51ce7c87-7f3b-4e6e-9932-0eb1a9205259 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_51ce7c87-7f3b-4e6e-9932-0eb1a9205259","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:11.8694259+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a5ed31fd-2323-490e-a7c7-6b1db3751c85 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a5ed31fd-2323-490e-a7c7-6b1db3751c85","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:12.3673043+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6d056428-e7d1-47d5-a820-7baf62b9a550\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6d056428-e7d1-47d5-a820-7baf62b9a550\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:12.3674395+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:12.3674647+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:12.4219181+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.4282ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4282,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:12.4220350+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.6109ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.6109,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:12.4268337+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5cbc66e3-4f07-40f0-ba06-c7308d6a82be for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5cbc66e3-4f07-40f0-ba06-c7308d6a82be","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:12.9291441+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_10144fe4-407d-47d9-9f67-d465a35acea4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_10144fe4-407d-47d9-9f67-d465a35acea4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:13.4283638+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1b8af8d7-9d2e-4786-aaa5-dc2ce786cab2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1b8af8d7-9d2e-4786-aaa5-dc2ce786cab2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:13.9241670+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4de99c67-eec7-40ab-83a3-46f199dc529d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4de99c67-eec7-40ab-83a3-46f199dc529d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:13.9242891+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:13.9243180+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:13.9781995+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.8528ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.8528,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:13.9783288+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.0555ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0555,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:13.9839189+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0eef1d51-8292-405e-9d0a-8c955d13a0f8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0eef1d51-8292-405e-9d0a-8c955d13a0f8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:14.4839062+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a864c2f9-3888-4972-94eb-2aae34386b04 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a864c2f9-3888-4972-94eb-2aae34386b04","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:14.9832702+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b960ec7a-b0f6-4576-9283-230bfd77919c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b960ec7a-b0f6-4576-9283-230bfd77919c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:15.4800939+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8a589370-b05d-4e45-bf1d-e3c61332fa7b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8a589370-b05d-4e45-bf1d-e3c61332fa7b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:15.4802393+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:15.4802705+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:15.5335872+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.2851ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2851,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:15.5336944+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.4692ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4692,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:15.5443372+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a71b9c7d-de37-4251-affe-5e3b59497963 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a71b9c7d-de37-4251-affe-5e3b59497963","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:16.0492739+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_fa1a2c6a-7edb-4b85-b87f-9684e8301d35 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_fa1a2c6a-7edb-4b85-b87f-9684e8301d35","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:16.5475555+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2f4035c7-8a9f-4406-a50a-9b475744240e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2f4035c7-8a9f-4406-a50a-9b475744240e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:17.0465007+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ed4c62e1-552e-42ab-8398-2367e5bf50b3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ed4c62e1-552e-42ab-8398-2367e5bf50b3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:17.0466218+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:17.0466524+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:17.1023691+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.6875ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.6875,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:17.1024926+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.8873ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.8873,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:17.1078850+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f0fc35a0-16f4-432b-a03c-c5885a9b7ddf for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f0fc35a0-16f4-432b-a03c-c5885a9b7ddf","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:17.6061531+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_94568a34-4290-4f4c-9057-ff332f224c2d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_94568a34-4290-4f4c-9057-ff332f224c2d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:18.1066124+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_30f6d845-bc38-40c3-88f3-864a84fb0090 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_30f6d845-bc38-40c3-88f3-864a84fb0090","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:18.6037617+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4dd03686-328e-4a81-a643-4f9472052508\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4dd03686-328e-4a81-a643-4f9472052508\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:18.6038887+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:18.6039199+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:18.6638451+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.8958ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.8958,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:18.6639735+12:00","LogLevel":"Information","Message":"End processing HTTP request after 60.099ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.099,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:18.6693068+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_21c5bc72-1529-452e-ab6c-58ae3dca59f3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_21c5bc72-1529-452e-ab6c-58ae3dca59f3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:19.1700680+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9bd6a73f-a453-4d26-b154-c3e22496f0f0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9bd6a73f-a453-4d26-b154-c3e22496f0f0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:19.6688672+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8e536066-8d74-4196-a6d4-c40f476ef1c8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8e536066-8d74-4196-a6d4-c40f476ef1c8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:20.1694862+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"050aa7b2-84c4-4fdb-af6e-67c639b22fbe\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"050aa7b2-84c4-4fdb-af6e-67c639b22fbe\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:20.1696067+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:20.1696315+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:20.2220289+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.3724ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3724,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:20.2221520+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.562ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.562,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:20.2271626+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_3819940b-03eb-4ab5-9fe1-5008c7c35174 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_3819940b-03eb-4ab5-9fe1-5008c7c35174","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:20.7271953+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_11b2bcc5-b7b6-4037-9574-47dc49307045 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_11b2bcc5-b7b6-4037-9574-47dc49307045","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:21.2277870+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1b4cb474-b824-4e8a-9ec5-fada2db47e2b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1b4cb474-b824-4e8a-9ec5-fada2db47e2b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:21.7267347+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9989fc70-6205-40ee-9d0f-6003dda735d1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9989fc70-6205-40ee-9d0f-6003dda735d1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:21.7268580+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:21.7268871+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:21.7819556+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.0416ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0416,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:21.7820516+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.2105ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.2105,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S4 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S4", "S4, S9, S8, S1, S...") (21.9s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e0f629bb-6f54-44aa-b82b-335c43a80569" testId="21af1e32-5405-ea8b-b9ba-56ec74685687" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S21,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3576376" startTime="2025-09-12T15:45:13.9817301+12:00" endTime="2025-09-12T15:45:36.3396149+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e0f629bb-6f54-44aa-b82b-335c43a80569">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:45:13.9822736+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S21]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S21]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:13.9884584+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c91b5aa9-9429-4b89-8c2e-2c4fff54051f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c91b5aa9-9429-4b89-8c2e-2c4fff54051f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:14.4902588+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7f263d7d-93ca-4fc6-856c-120c4b04167d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7f263d7d-93ca-4fc6-856c-120c4b04167d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:14.9919351+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d8c84788-aa63-4cc9-bdeb-d6143b6a64f2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d8c84788-aa63-4cc9-bdeb-d6143b6a64f2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:15.4911375+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c192c1c5-1a99-4eae-86a7-41641922d26c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c192c1c5-1a99-4eae-86a7-41641922d26c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:15.4912616+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:15.4912920+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:15.5438998+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.5783ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5783,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:15.5439940+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.7496ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.7496,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:15.5495628+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5dcde855-6e68-45ae-bce6-282d805f7b71 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5dcde855-6e68-45ae-bce6-282d805f7b71","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:16.0504459+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c294fa6d-a94f-4b76-8460-4679c739354e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c294fa6d-a94f-4b76-8460-4679c739354e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:16.5521588+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_febace3a-597d-4ea7-8617-acaefa1a389a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_febace3a-597d-4ea7-8617-acaefa1a389a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:17.0487230+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"30861ada-51fa-4f82-bed9-e7b81aedf0a2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"30861ada-51fa-4f82-bed9-e7b81aedf0a2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:17.0488574+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:17.0488940+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:17.1077485+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.8232ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.8232,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:17.1078977+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.069ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.069,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:17.1145424+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_faaafaa8-6f9f-4b64-8c72-f7871b97240b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_faaafaa8-6f9f-4b64-8c72-f7871b97240b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:17.6144800+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_152a9598-245b-433d-b8e2-234cc8e1f7e0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_152a9598-245b-433d-b8e2-234cc8e1f7e0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:18.1155218+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_bcf9b907-297e-4a25-9309-383228c1c8d9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_bcf9b907-297e-4a25-9309-383228c1c8d9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:18.6124121+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c157be5f-c758-4550-b969-aa549214f805\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c157be5f-c758-4550-b969-aa549214f805\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:18.6125464+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:18.6125770+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:18.6659251+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.3162ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3162,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:18.6660524+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.5249ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5249,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:18.6715594+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_91c5e533-567b-44b7-b0c8-e172170d1e15 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_91c5e533-567b-44b7-b0c8-e172170d1e15","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:19.1704531+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cbc3e58e-3742-4473-9adb-90c93083d085 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cbc3e58e-3742-4473-9adb-90c93083d085","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:19.6701256+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8a47b0c1-6aca-4f39-b2c9-203b8840ed31 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8a47b0c1-6aca-4f39-b2c9-203b8840ed31","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:20.1709974+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7a99b8d1-d0bc-4918-8683-d0d23a95ba04\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7a99b8d1-d0bc-4918-8683-d0d23a95ba04\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:20.1711076+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:20.1711316+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:20.2261093+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.9529ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.9529,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:20.2262049+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.1141ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.1141,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:20.2320226+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ef1beec8-853b-4b50-9b1c-d9e2683816b7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ef1beec8-853b-4b50-9b1c-d9e2683816b7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:20.7305267+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e740bbe5-3ec3-4fcd-8835-e2a020373f08 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e740bbe5-3ec3-4fcd-8835-e2a020373f08","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:21.2337689+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b1d21b34-6d76-41b2-b9a5-1009059ff6c6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b1d21b34-6d76-41b2-b9a5-1009059ff6c6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:21.7325805+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bf96450b-b6b5-4677-b626-c561344dccf2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bf96450b-b6b5-4677-b626-c561344dccf2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:21.7327107+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:21.7327404+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:21.7854774+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.7084ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.7084,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:21.7855986+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.9049ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.9049,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:21.7937064+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_26c0b448-a812-4728-8289-268907a09966 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_26c0b448-a812-4728-8289-268907a09966","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:22.2945556+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_157f67dd-22fc-419e-88c3-957dea86389b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_157f67dd-22fc-419e-88c3-957dea86389b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:22.7956366+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e79ce5c4-60ec-4ab6-895d-fa3cb867a18f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e79ce5c4-60ec-4ab6-895d-fa3cb867a18f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:23.2924364+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a7b6cbdb-a8d2-438f-85fd-9a8b6097b61e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a7b6cbdb-a8d2-438f-85fd-9a8b6097b61e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:23.2925670+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:23.2926027+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:23.3475045+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.8698ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.8698,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:23.3475988+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.0496ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0496,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:23.3524691+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d9981ad0-8494-4bb2-aceb-f9926f68deb7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d9981ad0-8494-4bb2-aceb-f9926f68deb7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:23.8542561+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8de0736d-c19f-4ea8-971d-5e44c8a0b6ff for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8de0736d-c19f-4ea8-971d-5e44c8a0b6ff","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:24.3553811+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fd0d4e64-d2ab-411e-bc79-e54dadfb6bb5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fd0d4e64-d2ab-411e-bc79-e54dadfb6bb5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:24.8520788+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b850ee24-42c5-4d6e-ac55-2123c31b2468\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b850ee24-42c5-4d6e-ac55-2123c31b2468\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:24.8521964+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:24.8522215+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:24.9112453+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.9969ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.9969,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:24.9113883+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.2041ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.2041,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:24.9167930+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a7b1511d-2bb7-41af-a153-3f4bf101d9a7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a7b1511d-2bb7-41af-a153-3f4bf101d9a7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:25.4195972+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_010a462b-c371-44f6-8666-79e52556bec2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_010a462b-c371-44f6-8666-79e52556bec2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:25.9188796+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1323e460-9a1c-4074-9574-f07cef1f79ac for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1323e460-9a1c-4074-9574-f07cef1f79ac","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:26.4157262+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"45d32631-b391-4525-920a-3b4b399ed7bd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"45d32631-b391-4525-920a-3b4b399ed7bd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:26.4158449+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:26.4158704+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:26.4693621+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.4639ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4639,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:26.4694652+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6348ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6348,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:26.4743666+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a467784b-a2d2-4644-8e02-b5fb9ca9d68b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a467784b-a2d2-4644-8e02-b5fb9ca9d68b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:26.9753393+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_05409603-e362-4776-b8a4-c95904005c60 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_05409603-e362-4776-b8a4-c95904005c60","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:27.4746918+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8f0fef31-7075-4876-84ee-022ea45d1ee0 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8f0fef31-7075-4876-84ee-022ea45d1ee0","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:27.9733805+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b2cb5a3f-0ec5-4311-a872-a61dd497e163\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b2cb5a3f-0ec5-4311-a872-a61dd497e163\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:27.9735031+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:27.9735314+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:28.0286934+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.1346ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.1346,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:28.0287909+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.3066ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.3066,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:28.0341818+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1733a384-63dc-4aea-84f8-44d170639873 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1733a384-63dc-4aea-84f8-44d170639873","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:28.5351754+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a47d1aa0-8ca5-48ff-bfb0-735b17293643 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a47d1aa0-8ca5-48ff-bfb0-735b17293643","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:29.0346980+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_827dada6-78cd-4e11-aece-01d290a2adbb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_827dada6-78cd-4e11-aece-01d290a2adbb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:29.5337653+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d4bf87ab-7388-4943-8875-a03960ce7936\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d4bf87ab-7388-4943-8875-a03960ce7936\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:29.5338891+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:29.5339180+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:29.5867490+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.8003ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.8003,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:29.5868484+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.9776ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.9776,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:29.5923084+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_12fc79fa-ac35-4e2c-bb10-80fddd100178 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_12fc79fa-ac35-4e2c-bb10-80fddd100178","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:30.0952907+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_fcae9553-3244-463a-ab75-99e108f080b4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_fcae9553-3244-463a-ab75-99e108f080b4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:30.5945682+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6add08f4-d31a-4da6-b19f-571cb6bca82e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6add08f4-d31a-4da6-b19f-571cb6bca82e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:31.0915995+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b83bf5dc-6ea2-40ee-b312-52e1e9264bfb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b83bf5dc-6ea2-40ee-b312-52e1e9264bfb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:31.0917235+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:31.0917611+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:31.1439272+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.1312ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.1312,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:31.1440293+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3233ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3233,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:31.1487332+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5e3125a5-49bb-4e2f-9791-e0c2cc541983 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5e3125a5-49bb-4e2f-9791-e0c2cc541983","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:31.6514829+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b93a0911-1cc0-4f3a-b7d5-afb2bf3e2845 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b93a0911-1cc0-4f3a-b7d5-afb2bf3e2845","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:32.1508793+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ec4217fc-9f90-41f3-a7a5-198febc943e0 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ec4217fc-9f90-41f3-a7a5-198febc943e0","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:32.6481991+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"edcaa46a-aa3e-4436-a24f-0784ac3ffcea\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"edcaa46a-aa3e-4436-a24f-0784ac3ffcea\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:32.6483105+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:32.6483381+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:32.7071703+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.8059ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.8059,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:32.7072730+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.9767ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.9767,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:32.7127679+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_dbcc8e6c-eff9-4241-904a-741b63c1d8df for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_dbcc8e6c-eff9-4241-904a-741b63c1d8df","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:33.2154850+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cadca37a-9267-4893-b27b-1888f7039e75 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cadca37a-9267-4893-b27b-1888f7039e75","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:33.7150514+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1c5b2b0c-b1a6-4440-a196-5ee24404c465 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1c5b2b0c-b1a6-4440-a196-5ee24404c465","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:34.2137229+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"167b240d-4abf-4e29-a427-519a2dd2b7a1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"167b240d-4abf-4e29-a427-519a2dd2b7a1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:34.2138381+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:34.2138609+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:34.2752800+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 61.3919ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.3919,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:34.2754090+12:00","LogLevel":"Information","Message":"End processing HTTP request after 61.5869ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":61.5869,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:34.2809846+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_00aed435-57e5-446e-aafc-2931ee7323c9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_00aed435-57e5-446e-aafc-2931ee7323c9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:34.7837581+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_025e3b9b-dfe8-4989-b744-91515cf85e60 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_025e3b9b-dfe8-4989-b744-91515cf85e60","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:35.2830408+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cb86f087-9e30-42f1-b5ef-ed998ed75b9b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cb86f087-9e30-42f1-b5ef-ed998ed75b9b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:45:35.7800412+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"93a4e1b6-ef6b-4881-b7f6-29df44fc7e30\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"93a4e1b6-ef6b-4881-b7f6-29df44fc7e30\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:45:35.7801658+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:35.7801950+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:35.8358399+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.6129ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.6129,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:45:35.8359562+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.81ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.81,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S21 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S21", "S4, S9, S8, S1, S...") (21.9s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e3b06e7e-54d3-4b60-a19f-5efcc8348a63" testId="6b6315ae-2ca6-c782-81b2-d45a8dab0f02" testName="UASReturnsUnusableResponses (debtor only,Creditor account not found.,)" computerName="ip-10-130-163-65" duration="00:00:01.5251751" startTime="2025-09-12T15:49:21.8296157+12:00" endTime="2025-09-12T15:49:23.3549690+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e3b06e7e-54d3-4b60-a19f-5efcc8348a63">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:21.8302943+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS returns unusable responses:[\"[ResponseType, debtor only]\",\"[ErrorMessage, Creditor account not found.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS returns unusable responses","scenarioInfo.Arguments":["[ResponseType, debtor only]","[ErrorMessage, Creditor account not found.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:21.8359605+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6755eb9d-3866-4d5a-8283-e6e5357f4ee7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6755eb9d-3866-4d5a-8283-e6e5357f4ee7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:22.3381386+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_6d4128e1-f41a-4766-bd95-458e6c4af4ad for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_6d4128e1-f41a-4766-bd95-458e6c4af4ad","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:22.8373476+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa459041-c46c-4d57-bf08-459f0c794529\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa459041-c46c-4d57-bf08-459f0c794529\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:22.8374534+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:22.8374803+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:22.8512579+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.7529ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7529,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:22.8514006+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9597ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9597,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:22.8516226+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"\",\"paymentId\":\"a2017b9015844c308f004565b096045e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:22.850Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Creditor account not found.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"\",\"paymentId\":\"a2017b9015844c308f004565b096045e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:22.850Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Creditor account not found.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be debtor only
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("debtor only") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                       |
  | __typename                         | UnsuccessfulPayment         |
  | debtorAccountNumber                |                             |
  | creditorAccountNumber              |                             |
  | paymentId                          | *                           |
  | paymentInstructionCreationDateTime | *                           |
  | initiatingAccessNumber             | *                           |
  | debtorAccountCode                  | *                           |
  | debtorAccountParticulars           | *                           |
  | debtorAccountReference             | *                           |
  | creditorAccountCode                | *                           |
  | creditorAccountParticulars         | *                           |
  | creditorAccountReference           | *                           |
  | amount                             | *                           |
  | code                               | ACCOUNT_DETECTION_FAILED    |
  | message                            | Creditor account not found. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3ba4edf5-81bc-4a3b-abbd-a662cbddf1b9" testId="3e5c6042-6bb3-b9f5-a736-a4e752c117e2" testName="SuccessfulOPAAccountNumberTransformations (Core to Core,Core,Core,2ff00be3-5081-4171-8ba6-6f32f66ed70c,a47b5129-4085-46b6-9f65-baf821fa6b94,)" computerName="ip-10-130-163-65" duration="00:00:02.0657555" startTime="2025-09-12T15:49:07.0723361+12:00" endTime="2025-09-12T15:49:09.1387062+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ba4edf5-81bc-4a3b-abbd-a662cbddf1b9">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:07.0730842+12:00","LogLevel":"Information","Message":"Starting Test Execution: Successful OPA account number transformations:[\"[Description, Core to Core]\",\"[DebtorFieldValue, Core]\",\"[CreditorFieldValue, Core]\",\"[ExpectedDebtor, 2ff00be3-5081-4171-8ba6-6f32f66ed70c]\",\"[ExpectedCreditor, a47b5129-4085-46b6-9f65-baf821fa6b94]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Successful OPA account number transformations","scenarioInfo.Arguments":["[Description, Core to Core]","[DebtorFieldValue, Core]","[CreditorFieldValue, Core]","[ExpectedDebtor, 2ff00be3-5081-4171-8ba6-6f32f66ed70c]","[ExpectedCreditor, a47b5129-4085-46b6-9f65-baf821fa6b94]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:07.0792012+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_de2b6ebe-bf5a-4b33-9263-2961e24d409d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_de2b6ebe-bf5a-4b33-9263-2961e24d409d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:07.5784148+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_46408bf5-19a7-423e-8446-797e6edf9298 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_46408bf5-19a7-423e-8446-797e6edf9298","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:08.0797437+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8aa95772-1694-463b-818b-f8cba5e2c831 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8aa95772-1694-463b-818b-f8cba5e2c831","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:08.5787483+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ec2385cc-7cf0-477e-aa28-83e0a935d647\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ec2385cc-7cf0-477e-aa28-83e0a935d647\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:08.5788562+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:08.5788832+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:08.6373456+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.4339ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.4339,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:08.6374690+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.6263ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.6263,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:08.6377555+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"a30a2fc7e73e4ac0a0e02402dacac721\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:08.077Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:08.077Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"a30a2fc7e73e4ac0a0e02402dacac721\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:08.077Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:08.077Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:08.6398882+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"input\": {\n    \"action\": \"transfer:Initiate\",\n    \"fromAccounts\": [\n      \"2ff00be3-5081-4171-8ba6-6f32f66ed70c\"\n    ],\n    \"toAccounts\": [\n      \"a47b5129-4085-46b6-9f65-baf821fa6b94\"\n    ]\n  }\n}","MessageTemplate":"Captured request is:\n{\n  \"input\": {\n    \"action\": \"transfer:Initiate\",\n    \"fromAccounts\": [\n      \"2ff00be3-5081-4171-8ba6-6f32f66ed70c\"\n    ],\n    \"toAccounts\": [\n      \"a47b5129-4085-46b6-9f65-baf821fa6b94\"\n    ]\n  }\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the UAS mock debtor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Core") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And the outgoing request to OPA contains the fields:
  --- table step argument ---
  | Field                   | Value                                |
  | $.input.fromAccounts[0] | 2ff00be3-5081-4171-8ba6-6f32f66ed70c |
  | $.input.toAccounts[0]   | a47b5129-4085-46b6-9f65-baf821fa6b94 |
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchHasTheFieldValueOf("OPA", &lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="084f96fc-a541-435b-9551-79e5d11c16d4" testId="9bd9dcd3-96c6-e5cd-8089-f60285fd7733" testName="UASReturnsUnusableResponses (empty,Failed to retrieve account information,)" computerName="ip-10-130-163-65" duration="00:00:01.5195111" startTime="2025-09-12T15:49:20.3096404+12:00" endTime="2025-09-12T15:49:21.8293202+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="084f96fc-a541-435b-9551-79e5d11c16d4">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:20.3110674+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS returns unusable responses:[\"[ResponseType, empty]\",\"[ErrorMessage, Failed to retrieve account information]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS returns unusable responses","scenarioInfo.Arguments":["[ResponseType, empty]","[ErrorMessage, Failed to retrieve account information]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:20.3147613+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b3ef8675-ac61-4784-ad67-c77f888f5e91 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b3ef8675-ac61-4784-ad67-c77f888f5e91","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:20.8150573+12:00","LogLevel":"Information","Message":"Successfully created map UASEmptyResponse_6e6f539d-5985-421b-a136-4ab8ca6d75e1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASEmptyResponse_6e6f539d-5985-421b-a136-4ab8ca6d75e1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:21.3178772+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"47e9a9f7-cfb9-4987-8f30-be992de2fdd5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"47e9a9f7-cfb9-4987-8f30-be992de2fdd5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:21.3179710+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:21.3179961+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:21.3322815+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2587ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2587,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:21.3323986+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.4382ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4382,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:21.3326335+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"8870ce18cd554c22b89a09ce1879d1a4\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:21.331Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"8870ce18cd554c22b89a09ce1879d1a4\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:21.331Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be empty
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("empty") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bd56a9a6-ad6c-42a0-aa3c-f2d34c2c42ec" testId="3926459d-0609-001c-2b8c-bd4b8dd28836" testName="ErrorResponseCodesFromUAS (408,,)" computerName="ip-10-130-163-65" duration="00:00:02.0305400" startTime="2025-09-12T15:49:12.1832895+12:00" endTime="2025-09-12T15:49:14.2140391+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bd56a9a6-ad6c-42a0-aa3c-f2d34c2c42ec">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:12.1838710+12:00","LogLevel":"Information","Message":"Starting Test Execution: Error response codes from UAS:[\"[ErrorCode, 408]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Error response codes from UAS","scenarioInfo.Arguments":["[ErrorCode, 408]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:12.1871683+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_30e08240-7741-4b33-9d8f-816a9a2f4e4c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_30e08240-7741-4b33-9d8f-816a9a2f4e4c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:12.6842699+12:00","LogLevel":"Information","Message":"Successfully created map UASError_408_8759e8b0-9dd3-48fc-b1c0-2167953de1d8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_408_8759e8b0-9dd3-48fc-b1c0-2167953de1d8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:13.1861388+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"14f5b762-f20d-4688-9176-55b3b5516cf7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"14f5b762-f20d-4688-9176-55b3b5516cf7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:13.1862306+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:13.1862558+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:13.7106877+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 524.4072ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":524.4072,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:13.7108057+12:00","LogLevel":"Information","Message":"End processing HTTP request after 524.584ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":524.584,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:13.7110564+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"75bc09e6a872488f96db18bfa9a3a60b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:13.710Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"75bc09e6a872488f96db18bfa9a3a60b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:13.710Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be 408
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("408") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6abe26b-c0ea-495b-97f8-41cf72da6fee" testId="1423a09c-3715-4b13-aaa8-9ddf35feb7a5" testName="OtherPOrchErrorsDoNotRetry (400,message,Internal Server Error,)" computerName="ip-10-130-163-65" duration="00:00:02.0709094" startTime="2025-09-12T15:40:56.8566489+12:00" endTime="2025-09-12T15:40:58.9280716+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6abe26b-c0ea-495b-97f8-41cf72da6fee">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:56.8588945+12:00","LogLevel":"Information","Message":"Starting Test Execution: Other POrch errors do not retry:[\"[ErrorCode, 400]\",\"[ErrorField, message]\",\"[ErrorValue, Internal Server Error]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Other POrch errors do not retry","scenarioInfo.Arguments":["[ErrorCode, 400]","[ErrorField, message]","[ErrorValue, Internal Server Error]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:56.8629992+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5f88f09f-572c-4353-9c53-a1527f07599a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5f88f09f-572c-4353-9c53-a1527f07599a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:57.3689967+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_2f912337-c0c3-43fa-8a7e-9243afefe91d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_2f912337-c0c3-43fa-8a7e-9243afefe91d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:57.8716105+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_d1613826-c715-410c-8149-c626c0a7779c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_d1613826-c715-410c-8149-c626c0a7779c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:57.8716104+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_d1613826-c715-410c-8149-c626c0a7779c_1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_d1613826-c715-410c-8149-c626c0a7779c_1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:58.3689182+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2f22ea3e-9c8e-455a-94ac-435663594f7b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2f22ea3e-9c8e-455a-94ac-435663594f7b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:58.3690783+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:58.3691136+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:58.4232793+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.1172ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.1172,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:58.4234161+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.3644ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3644,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:58.4238773+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will return 400 then successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchTransferMockResponseWillReturnThenSuccessful("transfer", "400") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And there are 1 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "POrchTransfer") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                 |
  | $.errors[0].message | Internal Server Error |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b00f939b-07ce-4666-a4e8-953df5566c2b" testId="e52107b0-a6c0-d76b-fbdc-50757846dd42" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S33,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3147244" startTime="2025-09-12T15:46:21.0452154+12:00" endTime="2025-09-12T15:46:43.3603309+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b00f939b-07ce-4666-a4e8-953df5566c2b">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:46:21.0458557+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S33]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S33]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:21.0536765+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_eeac0a04-3653-4f36-833b-da65b0a4a46a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_eeac0a04-3653-4f36-833b-da65b0a4a46a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:21.5535467+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a8c06134-31f6-4fda-85be-42732b7a3275 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a8c06134-31f6-4fda-85be-42732b7a3275","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:22.0545140+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_9340b3ca-d784-4bb7-a46a-926aa3cc799c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_9340b3ca-d784-4bb7-a46a-926aa3cc799c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:22.5530249+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8c6729a8-536f-40bc-b156-ccf4da463d37\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8c6729a8-536f-40bc-b156-ccf4da463d37\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:22.5531424+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:22.5531698+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:22.6040896+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 50.8919ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.8919,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:22.6041722+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.0456ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.0456,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:22.6092115+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_50598342-aea7-48cc-99cc-861e41de9373 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_50598342-aea7-48cc-99cc-861e41de9373","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:23.1105106+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7cb285da-c305-446c-8c99-75ec3ece3dc8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7cb285da-c305-446c-8c99-75ec3ece3dc8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:23.6114155+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_14e0f03c-a949-411d-8bed-8af3dae29dc2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_14e0f03c-a949-411d-8bed-8af3dae29dc2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:24.1082289+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5b3275ed-6d54-4ef8-8aca-05e658228cf6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5b3275ed-6d54-4ef8-8aca-05e658228cf6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:24.1083574+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:24.1083928+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:24.1611521+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.7352ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.7352,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:24.1612655+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.9345ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.9345,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:24.1663107+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_82ce20a7-e96a-4f1c-b926-b501cf1f0696 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_82ce20a7-e96a-4f1c-b926-b501cf1f0696","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:24.6683496+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_34efb695-86d9-455f-abb3-4ee7788a4ed0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_34efb695-86d9-455f-abb3-4ee7788a4ed0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:25.1672612+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_47e40b22-b82d-4487-9534-bfdfdabfe282 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_47e40b22-b82d-4487-9534-bfdfdabfe282","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:25.6640337+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e38ec408-ea45-418a-835c-935d2ed232ed\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e38ec408-ea45-418a-835c-935d2ed232ed\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:25.6641396+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:25.6641625+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:25.7173204+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.1315ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.1315,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:25.7174099+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.2853ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2853,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:25.7223049+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_69c8e440-d548-4600-9b91-957067d128da for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_69c8e440-d548-4600-9b91-957067d128da","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:26.2231625+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d54dfac3-184a-484c-9fc0-3c4b6962d14a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d54dfac3-184a-484c-9fc0-3c4b6962d14a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:26.7242218+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e9592ea0-c90f-4add-a1ca-318d6353df15 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e9592ea0-c90f-4add-a1ca-318d6353df15","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:27.2210284+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e7b11183-f822-42a3-909b-0294883c36b7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e7b11183-f822-42a3-909b-0294883c36b7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:27.2211410+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:27.2211645+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:27.2738722+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.6798ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.6798,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:27.2739930+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.868ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.868,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:27.2788751+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_dc19b23c-017a-4e59-8e27-97aaee35df6d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_dc19b23c-017a-4e59-8e27-97aaee35df6d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:27.7797876+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_528e512c-ff2f-4556-b0c9-b32d7635664b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_528e512c-ff2f-4556-b0c9-b32d7635664b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:28.2787727+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0551dced-fe1c-4edd-b790-88535038fac4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0551dced-fe1c-4edd-b790-88535038fac4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:28.7759667+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0d0cafd7-b6be-44ff-9d9a-673796ccb741\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0d0cafd7-b6be-44ff-9d9a-673796ccb741\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:28.7761141+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:28.7761472+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:28.8356406+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.4633ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.4633,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:28.8357332+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.6391ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.6391,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:28.8406250+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_480537c6-30a2-41e9-8213-7d100ed93052 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_480537c6-30a2-41e9-8213-7d100ed93052","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:29.3440540+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_476b0081-de37-4b22-89e7-06a3509607d9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_476b0081-de37-4b22-89e7-06a3509607d9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:29.8431585+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_9abc3ad2-8f2a-4f4a-9cc3-317d7b3356c8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_9abc3ad2-8f2a-4f4a-9cc3-317d7b3356c8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:30.3420013+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"175643d7-d096-4b46-a0eb-2f04b57cc631\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"175643d7-d096-4b46-a0eb-2f04b57cc631\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:30.3421253+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:30.3421557+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:30.3953759+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.1621ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.1621,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:30.3954635+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.3532ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3532,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:30.4003827+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f49244f8-8f50-4c4f-911b-06883b512e92 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f49244f8-8f50-4c4f-911b-06883b512e92","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:30.9034008+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7aeeee3e-27d8-4967-9a2a-eb91b22cf6c1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7aeeee3e-27d8-4967-9a2a-eb91b22cf6c1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:31.4045590+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ea00336b-9d5b-4a01-81fc-aaa4a16d82bd for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ea00336b-9d5b-4a01-81fc-aaa4a16d82bd","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:31.9013965+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e44ecba1-8303-4e3f-add8-f71b9637710d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e44ecba1-8303-4e3f-add8-f71b9637710d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:31.9015267+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:31.9015568+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:31.9565507+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.9625ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.9625,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:31.9566579+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.1483ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.1483,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:31.9624558+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ff6e125b-22e2-4551-bcd7-1a1eb463f6fd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ff6e125b-22e2-4551-bcd7-1a1eb463f6fd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:32.4631136+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3d7ca436-57f4-48da-a27c-87b225f55a4b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3d7ca436-57f4-48da-a27c-87b225f55a4b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:32.9622644+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4c234b8d-0f01-46a0-80ba-0949b96e8469 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4c234b8d-0f01-46a0-80ba-0949b96e8469","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:33.4611227+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"02be574b-f6b7-4b4c-97c4-63dd5737175e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"02be574b-f6b7-4b4c-97c4-63dd5737175e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:33.4612282+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:33.4612542+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:33.5135887+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.3111ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3111,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:33.5136793+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.4651ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4651,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:33.5187313+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_274297e2-f4eb-44c8-9ca0-773efa0af8cd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_274297e2-f4eb-44c8-9ca0-773efa0af8cd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:34.0212861+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_56dcfd76-d564-4862-aa5e-fe6497adb3e2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_56dcfd76-d564-4862-aa5e-fe6497adb3e2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:34.5184098+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_64a54894-d83e-41c0-89ee-3c84f8e2bb4a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_64a54894-d83e-41c0-89ee-3c84f8e2bb4a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:35.0173436+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e64ba93f-66fc-49a5-b1f7-e644463a792d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e64ba93f-66fc-49a5-b1f7-e644463a792d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:35.0174700+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:35.0174977+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:35.0705789+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.053ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.053,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:35.0707000+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.2512ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2512,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:35.0761157+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_067de338-30ed-474f-beb8-232c6c366989 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_067de338-30ed-474f-beb8-232c6c366989","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:35.5787275+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_93ff62ea-858a-472d-8f87-f103d85d51a3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_93ff62ea-858a-472d-8f87-f103d85d51a3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:36.0799061+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_631399c8-2e5d-436b-adca-8dfc62237f04 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_631399c8-2e5d-436b-adca-8dfc62237f04","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:36.5763072+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3f814f25-abb6-45ad-9673-535c625dad7d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3f814f25-abb6-45ad-9673-535c625dad7d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:36.5764296+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:36.5764581+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:36.6341832+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.6941ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.6941,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:36.6342878+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.8766ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.8766,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:36.6397210+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ce79ee6c-1f19-4208-8e8f-e957902b71d4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ce79ee6c-1f19-4208-8e8f-e957902b71d4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:37.1379475+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b1c6e2a6-10d7-4e15-b467-094ab6f594c3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b1c6e2a6-10d7-4e15-b467-094ab6f594c3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:37.6393178+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1443e2e8-ece0-4845-a506-39ddf158f740 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1443e2e8-ece0-4845-a506-39ddf158f740","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:38.1360421+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5ef74b93-1ac5-4d8f-812c-9b947d77725e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5ef74b93-1ac5-4d8f-812c-9b947d77725e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:38.1361705+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:38.1362015+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:38.1875086+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.2756ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.2756,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:38.1876153+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.4617ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.4617,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:38.1927756+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c6e8fa1e-31db-466e-863b-cb430418c8a7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c6e8fa1e-31db-466e-863b-cb430418c8a7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:38.6948165+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9bad985b-4923-4092-8bfe-f29f93047566 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9bad985b-4923-4092-8bfe-f29f93047566","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:39.1940320+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b191296e-02b0-4818-9604-914f8c7d8889 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b191296e-02b0-4818-9604-914f8c7d8889","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:39.6924739+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"35c54d43-f171-46c7-98fa-8d67fc630b0e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"35c54d43-f171-46c7-98fa-8d67fc630b0e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:39.6925944+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:39.6926239+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:39.7444858+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.8328ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.8328,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:39.7445807+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.0028ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.0028,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:39.7497449+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_39244cff-32af-4a87-b41c-40b55a24ce4a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_39244cff-32af-4a87-b41c-40b55a24ce4a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:40.2524555+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_71a18a82-49b7-4e9c-bb60-6789e2fdfe58 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_71a18a82-49b7-4e9c-bb60-6789e2fdfe58","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:40.7516288+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1c35c732-5390-4ba3-b994-d1d7498272c2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1c35c732-5390-4ba3-b994-d1d7498272c2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:41.2483800+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"45821dfc-fb68-4556-ad3f-eec668cceb1b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"45821dfc-fb68-4556-ad3f-eec668cceb1b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:41.2485045+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:41.2485303+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:41.2995934+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.0357ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.0357,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:41.2997091+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.222ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.222,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:41.3051022+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_44eb4dfe-9775-484a-a6ab-cee058133bd3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_44eb4dfe-9775-484a-a6ab-cee058133bd3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:41.8077384+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_60c7b2f1-99ca-42c5-919a-791158a3dd59 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_60c7b2f1-99ca-42c5-919a-791158a3dd59","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:42.3070123+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ec50e62a-09b0-42a3-aaf3-bfcd45b9694a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ec50e62a-09b0-42a3-aaf3-bfcd45b9694a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:42.8055433+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a23823c9-d228-4cad-b147-4237ac36b8cb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a23823c9-d228-4cad-b147-4237ac36b8cb\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:42.8056637+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:42.8056920+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:42.8588360+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.1181ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.1181,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:42.8589501+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.3019ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3019,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S33 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S33", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3807ae70-d5f6-4edb-ad6e-ecd5ede41787" testId="76281e6f-fba3-cf80-4f21-020a0fa2d035" testName="OtherPOrchErrorsDoNotRetry (429,message,Duplicate Payment Request - Already Processing,)" computerName="ip-10-130-163-65" duration="00:00:02.0541586" startTime="2025-09-12T15:41:03.0704594+12:00" endTime="2025-09-12T15:41:05.1249263+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3807ae70-d5f6-4edb-ad6e-ecd5ede41787">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:03.0711046+12:00","LogLevel":"Information","Message":"Starting Test Execution: Other POrch errors do not retry:[\"[ErrorCode, 429]\",\"[ErrorField, message]\",\"[ErrorValue, Duplicate Payment Request - Already Processing]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Other POrch errors do not retry","scenarioInfo.Arguments":["[ErrorCode, 429]","[ErrorField, message]","[ErrorValue, Duplicate Payment Request - Already Processing]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:03.0758781+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1abef8b5-9cbe-4fa5-8f45-a519fd714154 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1abef8b5-9cbe-4fa5-8f45-a519fd714154","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:03.5802306+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_2e5c250a-2110-4eb8-8287-bfb05e203559 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_2e5c250a-2110-4eb8-8287-bfb05e203559","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:04.0799712+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_19c931a4-9294-49c4-b1b0-938cb9b1932f_1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_19c931a4-9294-49c4-b1b0-938cb9b1932f_1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:04.0812165+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_19c931a4-9294-49c4-b1b0-938cb9b1932f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_19c931a4-9294-49c4-b1b0-938cb9b1932f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:04.5755664+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"59795532-e0b7-4967-becf-681875844b39\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"59795532-e0b7-4967-becf-681875844b39\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:04.5757188+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:04.5757530+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:04.6170747+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 41.2661ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":41.2661,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:04.6171938+12:00","LogLevel":"Information","Message":"End processing HTTP request after 41.4966ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":41.4966,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:04.6175188+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Duplicate Payment Request - Already Processing\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"TOO_MANY_REQUESTS\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Duplicate Payment Request - Already Processing\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"TOO_MANY_REQUESTS\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will return 429 then successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchTransferMockResponseWillReturnThenSuccessful("transfer", "429") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And there are 1 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "POrchTransfer") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                                          |
  | $.errors[0].message | Duplicate Payment Request - Already Processing |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9f32f44c-2983-449c-9a5d-fa34fe503bd3" testId="bda05018-b260-913b-7734-8d1bb9f186eb" testName="RetryPorchRequestTimesOut" computerName="ip-10-130-163-65" duration="00:00:18.0667426" startTime="2025-09-12T15:40:38.7892114+12:00" endTime="2025-09-12T15:40:56.8562045+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f32f44c-2983-449c-9a5d-fa34fe503bd3">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:38.7907259+12:00","LogLevel":"Information","Message":"Starting Test Execution: Retry Porch request times out:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Retry Porch request times out","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:38.7955335+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8ee147f2-33bb-4cec-9fe3-b7450ee8bd2d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8ee147f2-33bb-4cec-9fe3-b7450ee8bd2d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:39.2982082+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_558b71b7-061a-430c-a6e6-f36a0cb2f34c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_558b71b7-061a-430c-a6e6-f36a0cb2f34c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:39.8008779+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_162808f0-6025-4a2c-8811-cf37800d8bd2 Delayed for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_162808f0-6025-4a2c-8811-cf37800d8bd2 Delayed","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:39.8009845+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_162808f0-6025-4a2c-8811-cf37800d8bd2Not Delayed for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_162808f0-6025-4a2c-8811-cf37800d8bd2Not Delayed","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:40.2970168+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f809133b-06af-4717-93df-e6e4f844f9e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f809133b-06af-4717-93df-e6e4f844f9e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:40.2971705+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:40.2972060+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:50.3435506+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 10046.2947ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10046.2947,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:50.3436719+12:00","LogLevel":"Information","Message":"End processing HTTP request after 10046.5211ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10046.5211,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:50.3439885+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"OPERATION_CANCEL_TOKEN\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"OPERATION_CANCEL_TOKEN\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will time out
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillTimeOut("transfer") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (10.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (6.0s)
And there are 1 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "POrchTransfer") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                                                                                     |
  | $.errors[0].message | The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing. |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e5fea18b-12ac-4378-b5c1-bd7b02654e91" testId="4a06f0da-e762-c26f-ad87-7e1adc46d72b" testName="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Legacy to CreditCard,LegacyCore,CreditCard,Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" computerName="ip-10-130-163-65" duration="00:00:02.0349625" startTime="2025-09-12T15:41:20.0686932+12:00" endTime="2025-09-12T15:41:22.1040781+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e5fea18b-12ac-4378-b5c1-bd7b02654e91">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:20.0706552+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - invalid paths:[\"[Description, Unsuccessful Legacy to CreditCard]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, CreditCard]\",\"[ErrorMessage, Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - invalid paths","scenarioInfo.Arguments":["[Description, Unsuccessful Legacy to CreditCard]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, CreditCard]","[ErrorMessage, Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:20.0748929+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c5f5b822-a8c3-4b8f-af14-c9842201a981 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c5f5b822-a8c3-4b8f-af14-c9842201a981","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:20.5791155+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_922f5088-744e-4faf-b526-c590dbb326fd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_922f5088-744e-4faf-b526-c590dbb326fd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:21.0789531+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d2156a7b-177e-45a2-a34b-f65b4bc1868c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d2156a7b-177e-45a2-a34b-f65b4bc1868c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:21.5781979+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8220ac3a-2b85-4003-8e8a-e7829b4181c3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8220ac3a-2b85-4003-8e8a-e7829b4181c3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:21.5783557+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:21.5783973+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:21.6018011+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 23.3648ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":23.3648,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:21.6019070+12:00","LogLevel":"Information","Message":"End processing HTTP request after 23.5636ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":23.5636,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:21.6021988+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3acd8190c8cb41e091f31f3574e7007f\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:21.600Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3acd8190c8cb41e091f31f3574e7007f\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:21.600Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to CreditCard
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "CreditCard") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                                                                                  |
  | __typename                         | UnsuccessfulPayment                                                                                    |
  | debtorAccountNumber                |                                                                                                        |
  | creditorAccountNumber              |                                                                                                        |
  | paymentId                          | *                                                                                                      |
  | paymentInstructionCreationDateTime | *                                                                                                      |
  | initiatingAccessNumber             | *                                                                                                      |
  | debtorAccountCode                  | *                                                                                                      |
  | debtorAccountParticulars           | *                                                                                                      |
  | debtorAccountReference             | *                                                                                                      |
  | creditorAccountCode                | *                                                                                                      |
  | creditorAccountParticulars         | *                                                                                                      |
  | creditorAccountReference           | *                                                                                                      |
  | amount                             | *                                                                                                      |
  | code                               | OPERATION_INVALID_FOR_ACCOUNT                                                                          |
  | message                            | Creditor account has invalid origination system. Transaction is not allowed for the selected accounts. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8bc9e3c7-21bb-47e7-950c-4afc813c9fa3" testId="e33e77d5-e3eb-55fe-4e6a-90c7b81a6a1f" testName="InvalidJWTTokenTests (Missing legacy_kb_login_name,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiY3VzdG9tZXJzSW1wbGljaXRGbG93VGVzdGluZ1N1cHBvcnRTZXJ2aWNlIiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.M5LE_VHBVxZjXcLHTXrrOGBm4RLJanfr_TJyDm-EjVNQoZfoqcwqn8kE8fDMpP-Y1o8DFCtNwqcnZfbAACKAmQ,)" computerName="ip-10-130-163-65" duration="00:00:01.9939901" startTime="2025-09-12T15:37:48.3115656+12:00" endTime="2025-09-12T15:39:30.5014151+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8bc9e3c7-21bb-47e7-950c-4afc813c9fa3">
      <Output>
        <StdOut>-&gt; Loading plugin /codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Reqnroll.Microsoft.Extensions.DependencyInjection.ReqnrollPlugin.dll
-&gt; Loading plugin /codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Reqnroll.MSTest.ReqnrollPlugin.dll
-&gt; Loading plugin /codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll
-&gt; Using default config
Test environment accept
{"Timestamp":"2025-09-12T15:39:28.8018567+12:00","LogLevel":"Information","Message":"Starting Test Execution: Invalid JWT token tests:[\"[Description, Missing legacy_kb_login_name]\",\"[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiY3VzdG9tZXJzSW1wbGljaXRGbG93VGVzdGluZ1N1cHBvcnRTZXJ2aWNlIiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.M5LE_VHBVxZjXcLHTXrrOGBm4RLJanfr_TJyDm-EjVNQoZfoqcwqn8kE8fDMpP-Y1o8DFCtNwqcnZfbAACKAmQ]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Invalid JWT token tests","scenarioInfo.Arguments":["[Description, Missing legacy_kb_login_name]","[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiY3VzdG9tZXJzSW1wbGljaXRGbG93VGVzdGluZ1N1cHBvcnRTZXJ2aWNlIiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.M5LE_VHBVxZjXcLHTXrrOGBm4RLJanfr_TJyDm-EjVNQoZfoqcwqn8kE8fDMpP-Y1o8DFCtNwqcnZfbAACKAmQ]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:29.0294716+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ea501a73-7e9f-4091-95a5-37df4674a3f7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ea501a73-7e9f-4091-95a5-37df4674a3f7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:29.0511518+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:29.0544216+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:29.9590948+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 902.0827ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":902.0827,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:29.9599260+12:00","LogLevel":"Information","Message":"End processing HTTP request after 914.5446ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":914.5446,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:29.9699978+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the JWT token will be eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiY3VzdG9tZXJzSW1wbGljaXRGbG93VGVzdGluZ1N1cHBvcnRTZXJ2aWNlIiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.M5LE_VHBVxZjXcLHTXrrOGBm4RLJanfr_TJyDm-EjVNQoZfoqcwqn8kE8fDMpP-Y1o8DFCtNwqcnZfbAACKAmQ
-&gt; done: PainMockedStepDefinitions.GivenTheJwtTokenWillBe("eyJ0eXAiOiJKV1QiL...") (0.0s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.9s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field                       | Value                   |
  | $.errors[0].message         | Unknown error occurred. |
  | $.errors[0].path[0]         | initiateTransfer        |
  | $.errors[0].extensions.code | INTERNAL_SERVER_ERROR   |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0918b2a8-d564-4170-9f46-a32baf260d2f" testId="5104d440-3bd6-f43d-011d-c60d056c8c65" testName="OPARetriesForAllowedResponses (500,,)" computerName="ip-10-130-163-65" duration="00:00:02.6209153" startTime="2025-09-12T15:39:36.5286154+12:00" endTime="2025-09-12T15:39:39.1503400+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0918b2a8-d564-4170-9f46-a32baf260d2f">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:36.5320380+12:00","LogLevel":"Information","Message":"Starting Test Execution: OPA retries for allowed responses:[\"[ErrorCode, 500]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"OPA retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 500]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:36.5408287+12:00","LogLevel":"Information","Message":"Successfully created map OPA for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:36.5408713+12:00","LogLevel":"Information","Message":"Successfully created map OPA_1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA_1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:37.0474980+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_7632dc6f-c0fe-4425-b8b9-06eea93693c2 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_7632dc6f-c0fe-4425-b8b9-06eea93693c2","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:37.5453471+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4cfd2726-5b72-4ef7-803d-6a13e624f7c3 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4cfd2726-5b72-4ef7-803d-6a13e624f7c3","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:38.0407294+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bfefc101-1e4e-40cb-ab97-62a311f48620\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bfefc101-1e4e-40cb-ab97-62a311f48620\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:38.0409410+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:38.0409989+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:38.6377270+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 596.6465ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":596.6465,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:38.6378796+12:00","LogLevel":"Information","Message":"End processing HTTP request after 596.9781ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":596.9781,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:38.6382822+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3aab5213ba5447129cf2571da0a32a89\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:37.541Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:37.541Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3aab5213ba5447129cf2571da0a32a89\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:37.541Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:37.541Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will return 500 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBeThenSuccessful("500") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the OPA mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "OPA") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2a92f97f-592a-4546-9ba1-0b08265eacd5" testId="49616ad6-d2a8-1875-612e-8d6a9518f756" testName="AccountTypeRulesForTransfers_AllowedPaths (Successful Core to Legacy,Core,LegacyCore,)" computerName="ip-10-130-163-65" duration="00:00:02.0657917" startTime="2025-09-12T15:41:13.8580105+12:00" endTime="2025-09-12T15:41:15.9240905+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2a92f97f-592a-4546-9ba1-0b08265eacd5">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:13.8589478+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - allowed paths:[\"[Description, Successful Core to Legacy]\",\"[DebtorFieldValue, Core]\",\"[CreditorFieldValue, LegacyCore]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - allowed paths","scenarioInfo.Arguments":["[Description, Successful Core to Legacy]","[DebtorFieldValue, Core]","[CreditorFieldValue, LegacyCore]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:13.8624243+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_60e789d7-aeb1-4940-b757-64d85e70628c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_60e789d7-aeb1-4940-b757-64d85e70628c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:14.3680303+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a26ad125-14dd-4d99-a829-f0d033865d51 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a26ad125-14dd-4d99-a829-f0d033865d51","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:14.8639813+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_647864f1-1b2e-43ec-a348-86867c9da5f1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_647864f1-1b2e-43ec-a348-86867c9da5f1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:15.3651912+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"97281e84-3bb0-48b8-b211-d427770d558e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"97281e84-3bb0-48b8-b211-d427770d558e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:15.3653433+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:15.3653871+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:15.4231718+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.7376ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.7376,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:15.4232722+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.9515ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.9515,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:15.4239392+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"ad5c929c21f64008b8c7f333e4c08800\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:14.861Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:14.861Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"ad5c929c21f64008b8c7f333e4c08800\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:14.861Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:14.861Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Core") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="92a43ad0-700f-431f-84d5-c63f6b1a2be5" testId="e0761c8d-33b0-96aa-64e0-b3d8684883ec" testName="AccountStatusRules (Unsuccessful Opened to Closed,Opened,Closed,Creditor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0284815" startTime="2025-09-12T15:41:38.4334003+12:00" endTime="2025-09-12T15:41:40.4621239+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="92a43ad0-700f-431f-84d5-c63f6b1a2be5">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:38.4353056+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Opened to Closed]\",\"[DebtorFieldValue, Opened]\",\"[CreditorFieldValue, Closed]\",\"[ErrorMessage, Creditor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Opened to Closed]","[DebtorFieldValue, Opened]","[CreditorFieldValue, Closed]","[ErrorMessage, Creditor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:38.4390232+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_18df6f75-8c53-4823-9699-084c3b195e86 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_18df6f75-8c53-4823-9699-084c3b195e86","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:38.9423630+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b737b37c-0469-4396-9e2d-fcaf5111a9c2 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b737b37c-0469-4396-9e2d-fcaf5111a9c2","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:39.4441314+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_90a6289b-9bcd-4192-ba0e-90ba1c367df4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_90a6289b-9bcd-4192-ba0e-90ba1c367df4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:39.9450166+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a9c55fa0-4744-4d69-9947-b2c038550745\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a9c55fa0-4744-4d69-9947-b2c038550745\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:39.9451150+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:39.9451404+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:39.9607207+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 15.5508ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.5508,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:39.9608212+12:00","LogLevel":"Information","Message":"End processing HTTP request after 15.7189ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.7189,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:39.9613423+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"93fcb5834fae4923a073365193d815f9\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:39.960Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"93fcb5834fae4923a073365193d815f9\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:39.960Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Opened") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Closed
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Closed") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                 |
  | __typename                         | UnsuccessfulPayment                   |
  | debtorAccountNumber                |                                       |
  | creditorAccountNumber              |                                       |
  | paymentId                          | *                                     |
  | paymentInstructionCreationDateTime | *                                     |
  | initiatingAccessNumber             | *                                     |
  | debtorAccountCode                  | *                                     |
  | debtorAccountParticulars           | *                                     |
  | debtorAccountReference             | *                                     |
  | creditorAccountCode                | *                                     |
  | creditorAccountParticulars         | *                                     |
  | creditorAccountReference           | *                                     |
  | amount                             | *                                     |
  | code                               | INVALID_ACCOUNT_STATE                 |
  | message                            | Creditor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1d7da021-d0c0-4234-b7c1-edfc6001ba34" testId="5a767aa9-34b1-4637-6492-dfc9837d6d47" testName="AccountTypeRulesForTransfers_AllowedPaths (Successful Legacy to Core,LegacyCore,Core,)" computerName="ip-10-130-163-65" duration="00:00:02.0647552" startTime="2025-09-12T15:41:15.9244700+12:00" endTime="2025-09-12T15:41:17.9894782+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1d7da021-d0c0-4234-b7c1-edfc6001ba34">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:15.9251679+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - allowed paths:[\"[Description, Successful Legacy to Core]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, Core]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - allowed paths","scenarioInfo.Arguments":["[Description, Successful Legacy to Core]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, Core]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:15.9311039+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ac6e9d28-e280-4a38-9f21-51f3dc1d1315 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ac6e9d28-e280-4a38-9f21-51f3dc1d1315","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:16.4336302+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7893308c-da16-45aa-b83a-d0c906617f39 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7893308c-da16-45aa-b83a-d0c906617f39","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:16.9354300+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_56b321c4-90fe-4fec-854b-121eb1f92cd1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_56b321c4-90fe-4fec-854b-121eb1f92cd1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:17.4306579+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7e267555-dbac-4f76-b6f4-371521815d19\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7e267555-dbac-4f76-b6f4-371521815d19\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:17.4308179+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:17.4308532+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:17.4850165+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.1179ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.1179,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:17.4851378+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.338ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.338,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:17.4854820+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"5ece7a59223646ec877102fb09b76054\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:16.933Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:16.933Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"5ece7a59223646ec877102fb09b76054\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:16.933Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:16.933Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a5362659-474b-46d9-bbff-4ce691bc5489" testId="d4af027d-cada-fd71-a4cc-96e9a887148d" testName="AccountStatusRules (Unsuccessful BlockedUnvalidated to Opened,BlockedUnvalidated,Opened,Debtor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0250843" startTime="2025-09-12T15:41:56.6564428+12:00" endTime="2025-09-12T15:41:58.6818734+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a5362659-474b-46d9-bbff-4ce691bc5489">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:56.6570502+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful BlockedUnvalidated to Opened]\",\"[DebtorFieldValue, BlockedUnvalidated]\",\"[CreditorFieldValue, Opened]\",\"[ErrorMessage, Debtor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful BlockedUnvalidated to Opened]","[DebtorFieldValue, BlockedUnvalidated]","[CreditorFieldValue, Opened]","[ErrorMessage, Debtor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:56.6605657+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_86900c8d-d41d-4af1-87f5-7e1f6ad1abea for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_86900c8d-d41d-4af1-87f5-7e1f6ad1abea","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:57.1668001+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_149db3a2-2cf7-4ca2-94b1-bb2f08aa2d69 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_149db3a2-2cf7-4ca2-94b1-bb2f08aa2d69","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:57.6664595+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_55457d96-6dbe-4d92-a67a-84e81eb41721 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_55457d96-6dbe-4d92-a67a-84e81eb41721","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:58.1653542+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a8ea59f9-60d6-45ac-aff7-8b3ba940d975\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a8ea59f9-60d6-45ac-aff7-8b3ba940d975\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:58.1655037+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:58.1655386+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:58.1798670+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2919ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2919,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:58.1800087+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.521ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.521,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:58.1802439+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"c24745ea4d4e4cdcbb175eeb769a326e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:58.179Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"c24745ea4d4e4cdcbb175eeb769a326e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:58.179Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to BlockedUnvalidated
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedUnvalidated") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Opened") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                               |
  | __typename                         | UnsuccessfulPayment                 |
  | debtorAccountNumber                |                                     |
  | creditorAccountNumber              |                                     |
  | paymentId                          | *                                   |
  | paymentInstructionCreationDateTime | *                                   |
  | initiatingAccessNumber             | *                                   |
  | debtorAccountCode                  | *                                   |
  | debtorAccountParticulars           | *                                   |
  | debtorAccountReference             | *                                   |
  | creditorAccountCode                | *                                   |
  | creditorAccountParticulars         | *                                   |
  | creditorAccountReference           | *                                   |
  | amount                             | *                                   |
  | code                               | INVALID_ACCOUNT_STATE               |
  | message                            | Debtor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49430a11-d4eb-447a-8b90-65fea6a853cc" testId="f0c00b70-e96a-9b79-8f80-40d25e70a906" testName="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful ForeignCurrency to Core,ForeignCurrency,Core,Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" computerName="ip-10-130-163-65" duration="00:00:02.0434976" startTime="2025-09-12T15:41:30.2053728+12:00" endTime="2025-09-12T15:41:32.2491483+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49430a11-d4eb-447a-8b90-65fea6a853cc">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:30.2063069+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - invalid paths:[\"[Description, Unsuccessful ForeignCurrency to Core]\",\"[DebtorFieldValue, ForeignCurrency]\",\"[CreditorFieldValue, Core]\",\"[ErrorMessage, Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - invalid paths","scenarioInfo.Arguments":["[Description, Unsuccessful ForeignCurrency to Core]","[DebtorFieldValue, ForeignCurrency]","[CreditorFieldValue, Core]","[ErrorMessage, Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:30.2228083+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3905ecb9-669a-4714-afaf-f5b05a2b0f29 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3905ecb9-669a-4714-afaf-f5b05a2b0f29","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:30.7261222+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d5f157b5-1446-49b2-ba83-114f09433124 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d5f157b5-1446-49b2-ba83-114f09433124","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:31.2295238+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_7134c7fb-dd22-4dd2-9149-0e2f6721dd98 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_7134c7fb-dd22-4dd2-9149-0e2f6721dd98","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:31.7283530+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"78cbe931-7678-4876-89d5-465c7605d4e0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"78cbe931-7678-4876-89d5-465c7605d4e0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:31.7284675+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:31.7284967+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:31.7468572+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 18.33ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.33,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:31.7469637+12:00","LogLevel":"Information","Message":"End processing HTTP request after 18.5121ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.5121,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:31.7474250+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"de4e9f2307ce4165a01d06b94584d45e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:31.745Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"de4e9f2307ce4165a01d06b94584d45e\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:31.745Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to ForeignCurrency
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "ForeignCurrency") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                                                                                |
  | __typename                         | UnsuccessfulPayment                                                                                  |
  | debtorAccountNumber                |                                                                                                      |
  | creditorAccountNumber              |                                                                                                      |
  | paymentId                          | *                                                                                                    |
  | paymentInstructionCreationDateTime | *                                                                                                    |
  | initiatingAccessNumber             | *                                                                                                    |
  | debtorAccountCode                  | *                                                                                                    |
  | debtorAccountParticulars           | *                                                                                                    |
  | debtorAccountReference             | *                                                                                                    |
  | creditorAccountCode                | *                                                                                                    |
  | creditorAccountParticulars         | *                                                                                                    |
  | creditorAccountReference           | *                                                                                                    |
  | amount                             | *                                                                                                    |
  | code                               | OPERATION_INVALID_FOR_ACCOUNT                                                                        |
  | message                            | Debtor account has invalid origination system. Transaction is not allowed for the selected accounts. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c4aebb58-f896-4335-90e3-54e873a009b4" testId="0f2f36ba-ef89-5783-17f2-cd9bd3a45796" testName="AccountStatusRules (Unsuccessful BlockedUnverified to Opened,BlockedUnverified,Opened,Debtor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0296367" startTime="2025-09-12T15:41:50.5817231+12:00" endTime="2025-09-12T15:41:52.6115744+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c4aebb58-f896-4335-90e3-54e873a009b4">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:50.5821334+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful BlockedUnverified to Opened]\",\"[DebtorFieldValue, BlockedUnverified]\",\"[CreditorFieldValue, Opened]\",\"[ErrorMessage, Debtor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful BlockedUnverified to Opened]","[DebtorFieldValue, BlockedUnverified]","[CreditorFieldValue, Opened]","[ErrorMessage, Debtor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:50.5856433+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_4e9aab9d-e404-4290-94c7-ac3b2b9172ab for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_4e9aab9d-e404-4290-94c7-ac3b2b9172ab","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:51.0905296+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_178b1ecf-4592-4e6a-b605-647f3d1aa387 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_178b1ecf-4592-4e6a-b605-647f3d1aa387","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:51.5922900+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_55def962-1395-46bf-870f-a1c926afa716 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_55def962-1395-46bf-870f-a1c926afa716","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:52.0937261+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0683e656-6ccb-48a6-9e77-c816d35b501e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0683e656-6ccb-48a6-9e77-c816d35b501e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:52.0938388+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:52.0938681+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:52.1082465+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.3492ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3492,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:52.1083465+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.5217ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5217,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:52.1087892+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"71b1628adf96436980b325de4be9a181\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:52.107Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"71b1628adf96436980b325de4be9a181\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:52.107Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Debtor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to BlockedUnverified
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedUnverified") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "Opened") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                               |
  | __typename                         | UnsuccessfulPayment                 |
  | debtorAccountNumber                |                                     |
  | creditorAccountNumber              |                                     |
  | paymentId                          | *                                   |
  | paymentInstructionCreationDateTime | *                                   |
  | initiatingAccessNumber             | *                                   |
  | debtorAccountCode                  | *                                   |
  | debtorAccountParticulars           | *                                   |
  | debtorAccountReference             | *                                   |
  | creditorAccountCode                | *                                   |
  | creditorAccountParticulars         | *                                   |
  | creditorAccountReference           | *                                   |
  | amount                             | *                                   |
  | code                               | INVALID_ACCOUNT_STATE               |
  | message                            | Debtor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ce4ad48a-7567-478d-961d-c3ea586365cf" testId="257bc512-7952-b7df-feed-fdcbd809f3f9" testName="OtherPOrchErrorsDoNotRetry (500,message,Internal Server Error,)" computerName="ip-10-130-163-65" duration="00:00:02.0582386" startTime="2025-09-12T15:41:01.0114586+12:00" endTime="2025-09-12T15:41:03.0699702+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ce4ad48a-7567-478d-961d-c3ea586365cf">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:01.0120052+12:00","LogLevel":"Information","Message":"Starting Test Execution: Other POrch errors do not retry:[\"[ErrorCode, 500]\",\"[ErrorField, message]\",\"[ErrorValue, Internal Server Error]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Other POrch errors do not retry","scenarioInfo.Arguments":["[ErrorCode, 500]","[ErrorField, message]","[ErrorValue, Internal Server Error]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:01.0199332+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e7d58893-1814-411f-bb7f-e360efd9bce8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e7d58893-1814-411f-bb7f-e360efd9bce8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:01.5241098+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_0dc47b3a-6ced-4482-b0ae-086c5bd59262 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_0dc47b3a-6ced-4482-b0ae-086c5bd59262","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:02.0232609+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_321e62f3-5948-4949-aee1-7a112e1bd4d7 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_321e62f3-5948-4949-aee1-7a112e1bd4d7","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:02.0232665+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferFailure_321e62f3-5948-4949-aee1-7a112e1bd4d7_1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferFailure_321e62f3-5948-4949-aee1-7a112e1bd4d7_1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:02.5206381+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"37d915c7-2109-473e-88b1-b95fecb52ab5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"37d915c7-2109-473e-88b1-b95fecb52ab5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:02.5207946+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:02.5208281+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:02.5644916+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 43.6212ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":43.6212,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:02.5646124+12:00","LogLevel":"Information","Message":"End processing HTTP request after 43.8418ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":43.8418,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:02.5652802+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Internal Server Error\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will return 500 then successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchTransferMockResponseWillReturnThenSuccessful("transfer", "500") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And there are 1 calls to the POrchTransfer mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "POrchTransfer") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                 |
  | $.errors[0].message | Internal Server Error |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d5665606-f27d-4527-8a01-cdc3c552d321" testId="1c0027ee-97b9-3d72-8e49-3cf2292147e1" testName="AccountStatusRules (Unsuccessful Opened to BlockedUnverified,Opened,BlockedUnverified,Creditor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0217153" startTime="2025-09-12T15:41:40.4624845+12:00" endTime="2025-09-12T15:41:42.4844884+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d5665606-f27d-4527-8a01-cdc3c552d321">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:40.4633698+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Opened to BlockedUnverified]\",\"[DebtorFieldValue, Opened]\",\"[CreditorFieldValue, BlockedUnverified]\",\"[ErrorMessage, Creditor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Opened to BlockedUnverified]","[DebtorFieldValue, Opened]","[CreditorFieldValue, BlockedUnverified]","[ErrorMessage, Creditor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:40.4671938+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_43a23ce8-d7fb-400a-84c8-01277a56ae48 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_43a23ce8-d7fb-400a-84c8-01277a56ae48","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:40.9730328+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1d0b346c-2e5e-439a-bdd4-36f9bf34fe1c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1d0b346c-2e5e-439a-bdd4-36f9bf34fe1c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:41.4708264+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f032d5b2-ec81-4c34-af2d-b3b692cfa23c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f032d5b2-ec81-4c34-af2d-b3b692cfa23c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:41.9679247+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e41c8438-3fa6-4ab1-809a-3abdd9f72b8a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e41c8438-3fa6-4ab1-809a-3abdd9f72b8a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:41.9680355+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:41.9680650+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:41.9827722+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.6802ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.6802,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:41.9828720+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.8523ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.8523,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:41.9832888+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2d104c0d530a47d5a7ac7264f05a1c36\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:41.982Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"2d104c0d530a47d5a7ac7264f05a1c36\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:41.982Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Opened") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedUnverified
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedUnverified") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                 |
  | __typename                         | UnsuccessfulPayment                   |
  | debtorAccountNumber                |                                       |
  | creditorAccountNumber              |                                       |
  | paymentId                          | *                                     |
  | paymentInstructionCreationDateTime | *                                     |
  | initiatingAccessNumber             | *                                     |
  | debtorAccountCode                  | *                                     |
  | debtorAccountParticulars           | *                                     |
  | debtorAccountReference             | *                                     |
  | creditorAccountCode                | *                                     |
  | creditorAccountParticulars         | *                                     |
  | creditorAccountReference           | *                                     |
  | amount                             | *                                     |
  | code                               | INVALID_ACCOUNT_STATE                 |
  | message                            | Creditor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a2251905-cc14-4ddb-87cf-82c579df21e3" testId="07d2c399-e88c-6c9c-27db-2be144ec2bf8" testName="ProductFacilityTypes_TransferFromIneligibleImmediateCombos (S1,I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99,)" computerName="ip-10-130-163-65" duration="00:00:53.7073445" startTime="2025-09-12T15:47:59.4032989+12:00" endTime="2025-09-12T15:48:53.1115975+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a2251905-cc14-4ddb-87cf-82c579df21e3">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:47:59.4045732+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer from ineligible immediate combos:[\"[CreditorProductType, S1]\",\"[DebtorProductTypes, I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer from ineligible immediate combos","scenarioInfo.Arguments":["[CreditorProductType, S1]","[DebtorProductTypes, I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:59.4123328+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a2735844-25fc-4002-9df5-e9dc732a84a0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a2735844-25fc-4002-9df5-e9dc732a84a0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:59.9153128+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d9df0d66-70c8-4170-b059-a9b8a139edf9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d9df0d66-70c8-4170-b059-a9b8a139edf9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:00.4182172+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4562a843-aa4f-4b6d-95b3-d21c9359fdb2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4562a843-aa4f-4b6d-95b3-d21c9359fdb2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:00.9213501+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0b82bfcf-514f-4b31-a164-6b26e14eb4c1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"0b82bfcf-514f-4b31-a164-6b26e14eb4c1\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:00.9214788+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:00.9215083+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:00.9360995+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.5665ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5665,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:00.9361752+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.712ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.712,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:00.9426053+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_20ab23ee-9854-41a0-91b0-5a94d7dbb89d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_20ab23ee-9854-41a0-91b0-5a94d7dbb89d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:01.4435449+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d5766add-7550-43ec-a6e8-2794fec0d2de for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d5766add-7550-43ec-a6e8-2794fec0d2de","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:01.9455855+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_57e5538f-32a1-4d22-87d4-72b3c5e0ab9a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_57e5538f-32a1-4d22-87d4-72b3c5e0ab9a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:02.4454222+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6e95b559-663c-406a-9775-39e2675b9264\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6e95b559-663c-406a-9775-39e2675b9264\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:02.4455595+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:02.4455901+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:02.4596400+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.0184ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0184,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:02.4597498+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.2108ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2108,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:02.4653812+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_12bd7a92-8d3e-4734-9a9e-3bdea84fd567 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_12bd7a92-8d3e-4734-9a9e-3bdea84fd567","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:02.9662546+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cb7ee4c7-a8b1-4061-84e3-f3f2ff3eb0b9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cb7ee4c7-a8b1-4061-84e3-f3f2ff3eb0b9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:03.4631699+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e57e49aa-0d2d-4ddc-98d8-b07d6b01a3af for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e57e49aa-0d2d-4ddc-98d8-b07d6b01a3af","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:03.9643786+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d1bfc8b5-be27-41fb-a8f3-cb27f5b1e3d9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d1bfc8b5-be27-41fb-a8f3-cb27f5b1e3d9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:03.9644980+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:03.9645258+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:03.9780581+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5067ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5067,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:03.9781497+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6685ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6685,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:03.9830927+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_2547573a-330c-4ba0-bf33-e771f60875b0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_2547573a-330c-4ba0-bf33-e771f60875b0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:04.4797408+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_939c2ad1-d2d9-45df-8d41-4437df7ea0c6 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_939c2ad1-d2d9-45df-8d41-4437df7ea0c6","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:04.9849293+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1d270310-4868-442e-b473-98adb937282b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1d270310-4868-442e-b473-98adb937282b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:05.4795925+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cf507689-7610-4018-8df6-329bb2717ba9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cf507689-7610-4018-8df6-329bb2717ba9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:05.4797042+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:05.4797443+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:05.4935655+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.7921ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7921,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:05.4936481+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9606ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9606,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:05.4987614+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_cdc5a57e-d58c-4375-96c5-df9707c1067c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_cdc5a57e-d58c-4375-96c5-df9707c1067c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:05.9947178+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_eabeef23-3a9f-4ee7-bba6-451755f841fa for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_eabeef23-3a9f-4ee7-bba6-451755f841fa","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:06.4998330+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_da848460-1a3a-4158-b1a8-8350f815ab33 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_da848460-1a3a-4158-b1a8-8350f815ab33","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:07.0011281+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fd2d5208-e48c-440a-a4bf-cd3c1f93db91\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fd2d5208-e48c-440a-a4bf-cd3c1f93db91\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:07.0012489+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:07.0012780+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:07.0148662+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5634ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5634,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:07.0149457+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.7148ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7148,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:07.0198773+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f904f24a-3df0-4b1a-bfbd-54f27e70c243 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f904f24a-3df0-4b1a-bfbd-54f27e70c243","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:07.5145427+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f73e5e28-45a7-4240-ab21-0bbc544b695a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f73e5e28-45a7-4240-ab21-0bbc544b695a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:08.0179225+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_921dcbc2-8002-421b-85ad-9baf538ef6f2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_921dcbc2-8002-421b-85ad-9baf538ef6f2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:08.5166082+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7080e661-12c4-409f-961d-fc60216704f9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7080e661-12c4-409f-961d-fc60216704f9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:08.5167258+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:08.5167527+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:08.5307819+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.0039ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0039,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:08.5308741+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1658ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1658,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:08.5407502+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_756ec23a-c28f-4e8e-86cb-8ab662cb2314 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_756ec23a-c28f-4e8e-86cb-8ab662cb2314","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:09.0424580+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e56a679b-4d12-44ff-94d1-9baabdc0aa7e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e56a679b-4d12-44ff-94d1-9baabdc0aa7e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:09.5474542+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8b246600-8c78-46ea-8c66-96c61a10c966 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8b246600-8c78-46ea-8c66-96c61a10c966","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:10.0443091+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4ba8d26f-1032-4ed9-8216-92b012419a38\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4ba8d26f-1032-4ed9-8216-92b012419a38\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:10.0444256+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:10.0444503+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:10.0579117+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4371ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4371,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:10.0580117+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.5986ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5986,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:10.0637032+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a6bca967-1af2-4567-bada-633973638a8c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a6bca967-1af2-4567-bada-633973638a8c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:10.5580752+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_290c2227-5d00-44cf-9173-35a247177fc7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_290c2227-5d00-44cf-9173-35a247177fc7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:11.0630883+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_38553ee3-9760-4294-9d45-7cc4397ec1d3 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_38553ee3-9760-4294-9d45-7cc4397ec1d3","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:11.5657925+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"92d8969c-3577-4bc8-a591-8704fe1edb4b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"92d8969c-3577-4bc8-a591-8704fe1edb4b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:11.5659035+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:11.5659284+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:11.5798702+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9107ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9107,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:11.5799644+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.0736ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0736,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:11.5848085+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a56e7313-77cf-41c9-b9be-9c795554890e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a56e7313-77cf-41c9-b9be-9c795554890e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:12.0868594+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c5699192-a108-4101-9b32-6fbb320f1510 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c5699192-a108-4101-9b32-6fbb320f1510","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:12.5883541+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ab7c4209-e1ea-48f6-9f0f-5a818f24de2f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ab7c4209-e1ea-48f6-9f0f-5a818f24de2f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:13.0846597+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2a778e2c-07f7-4b2f-8edd-4005402d7538\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2a778e2c-07f7-4b2f-8edd-4005402d7538\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:13.0847747+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:13.0848023+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:13.0983343+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5049ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5049,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:13.0984268+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6685ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6685,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:13.1035929+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c302a887-74c2-45b2-97cc-6e0693bccff9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c302a887-74c2-45b2-97cc-6e0693bccff9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:13.6018774+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1d01a256-3793-47c1-a33c-cdde06fba6fe for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1d01a256-3793-47c1-a33c-cdde06fba6fe","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:14.1031252+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d348226c-eb9f-43db-9f70-21a46aa34d3e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d348226c-eb9f-43db-9f70-21a46aa34d3e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:14.6002766+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8858b277-c2f0-48b4-acc0-4ea531ab68dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8858b277-c2f0-48b4-acc0-4ea531ab68dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:14.6003954+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:14.6004238+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:14.6137853+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.318ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.318,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:14.6138718+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.4918ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4918,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:14.6192333+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5da00144-adbf-4dbb-9f7d-45578f4489dd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5da00144-adbf-4dbb-9f7d-45578f4489dd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:15.1157825+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9ac3d687-628f-49a6-880e-3848e2cc5d48 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9ac3d687-628f-49a6-880e-3848e2cc5d48","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:15.6150367+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_82c0137e-d8ed-4e2c-83b1-a6cf44f23144 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_82c0137e-d8ed-4e2c-83b1-a6cf44f23144","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:16.1159425+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"02920527-7ebc-444d-b74c-ee456d03f74c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"02920527-7ebc-444d-b74c-ee456d03f74c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:16.1160620+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:16.1160888+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:16.1299216+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.8074ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8074,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:16.1300134+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9702ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9702,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:16.1352707+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1e2d8925-2d99-430f-9f0d-9c85c397d074 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1e2d8925-2d99-430f-9f0d-9c85c397d074","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:16.6352457+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1358b80c-41da-4a10-b606-467a66a39d5a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1358b80c-41da-4a10-b606-467a66a39d5a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:17.1383250+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d72d6fc8-c7fb-4670-b26c-6f0ac228aa7a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d72d6fc8-c7fb-4670-b26c-6f0ac228aa7a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:17.6391395+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6db36f3e-d50b-477b-8471-a08dc42480bf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6db36f3e-d50b-477b-8471-a08dc42480bf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:17.6392536+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:17.6392768+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:17.6531919+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.8869ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8869,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:17.6533123+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.0759ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0759,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:17.6582264+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_031a7222-34c3-4e59-8537-cead10ed728a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_031a7222-34c3-4e59-8537-cead10ed728a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:18.1584618+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c6dbdaac-1910-49af-854c-237625249272 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c6dbdaac-1910-49af-854c-237625249272","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:18.6551725+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fc027a3a-273e-49ab-bcc3-33cdd867b73f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fc027a3a-273e-49ab-bcc3-33cdd867b73f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:19.1540996+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a2bf47ca-03f2-4337-922d-dfe39995614f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a2bf47ca-03f2-4337-922d-dfe39995614f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:19.1542023+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:19.1542257+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:19.1727126+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 18.4621ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.4621,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:19.1728144+12:00","LogLevel":"Information","Message":"End processing HTTP request after 18.6267ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.6267,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:19.1779062+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9d590600-add4-4729-8b46-387bfc6a94a4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9d590600-add4-4729-8b46-387bfc6a94a4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:19.6780835+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c81fc427-224c-4782-b01d-c4de301aeb81 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c81fc427-224c-4782-b01d-c4de301aeb81","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:20.1833645+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_056b0fd6-9a5d-4a36-a166-c1139855a665 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_056b0fd6-9a5d-4a36-a166-c1139855a665","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:20.6843721+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9039ad53-334b-48e4-9765-71ea43be8ae6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9039ad53-334b-48e4-9765-71ea43be8ae6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:20.6844926+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:20.6845216+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:20.6985031+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9557ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9557,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:20.6986047+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1282ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1282,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:20.7035750+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a79d88a6-4133-49fb-aa30-dba780168d92 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a79d88a6-4133-49fb-aa30-dba780168d92","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:21.2042667+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_bcd63b38-9528-400e-bf9f-65fcf1ce989f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_bcd63b38-9528-400e-bf9f-65fcf1ce989f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:21.7072844+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e2b1c374-effb-44ff-b6f1-baca410ebe2f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e2b1c374-effb-44ff-b6f1-baca410ebe2f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:22.2021633+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8397dcc1-85bf-4b36-99e8-1fb092109159\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8397dcc1-85bf-4b36-99e8-1fb092109159\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:22.2022858+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:22.2023149+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:22.2166210+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2786ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2786,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:22.2167141+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.4448ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4448,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:22.2221103+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_072e8deb-76c8-4a88-b68c-8001a1535429 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_072e8deb-76c8-4a88-b68c-8001a1535429","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:22.7186540+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_face6996-cab9-42c1-9120-3c77ba8e10c3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_face6996-cab9-42c1-9120-3c77ba8e10c3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:23.2238338+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_fa438086-e7c0-41ac-aae2-aa248bf857b9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_fa438086-e7c0-41ac-aae2-aa248bf857b9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:23.7163836+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"07b2ed47-b6b8-4269-ad26-50d046120c6d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"07b2ed47-b6b8-4269-ad26-50d046120c6d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:23.7164988+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:23.7165226+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:23.7305111+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9637ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9637,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:23.7306088+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.125ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.125,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:23.7354659+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_facf4ba5-3801-4bc4-b4cc-a6cc940a9741 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_facf4ba5-3801-4bc4-b4cc-a6cc940a9741","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:24.2341745+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8db56b85-28b8-4031-b4e6-0451929ebf1c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8db56b85-28b8-4031-b4e6-0451929ebf1c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:24.7352103+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_aaa8fb17-959d-49a2-8b7e-5d2d441dbdc5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_aaa8fb17-959d-49a2-8b7e-5d2d441dbdc5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:25.2323687+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fc3a4e62-344f-4771-85c8-2b754c98efb9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fc3a4e62-344f-4771-85c8-2b754c98efb9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:25.2324764+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:25.2325023+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:25.2460507+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.5212ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5212,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:25.2461555+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6917ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6917,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:25.2512153+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_94bc61a6-9a52-4c79-a92c-97d665a0eecd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_94bc61a6-9a52-4c79-a92c-97d665a0eecd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:25.7518846+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f2253b1c-51f0-4b8d-9032-396911c62d5f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f2253b1c-51f0-4b8d-9032-396911c62d5f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:26.2512265+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e16ee5ef-6615-42d1-845c-021b2482b540 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e16ee5ef-6615-42d1-845c-021b2482b540","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:26.7461908+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c05ce24e-0268-4136-9104-17f07cf0d4d2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c05ce24e-0268-4136-9104-17f07cf0d4d2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:26.7463055+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:26.7463289+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:26.7602633+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9073ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9073,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:26.7603632+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.0734ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0734,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:26.7650966+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d73d389b-86ff-48d5-98cd-698060394e9d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d73d389b-86ff-48d5-98cd-698060394e9d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:27.2635021+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_88f00767-25db-4f6a-8593-354b4ceea144 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_88f00767-25db-4f6a-8593-354b4ceea144","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:27.7666234+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_88756812-abd2-41bf-94d0-d68455044c38 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_88756812-abd2-41bf-94d0-d68455044c38","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:28.2695412+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a5fdeb1b-b62b-46eb-ae88-dae2c0c61110\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a5fdeb1b-b62b-46eb-ae88-dae2c0c61110\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:28.2696649+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:28.2696948+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:28.2835418+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.8208ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.8208,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:28.2836267+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9794ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9794,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:28.2888561+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_05b19492-acef-4498-ba03-a886266f94dd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_05b19492-acef-4498-ba03-a886266f94dd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:28.7868758+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2bc4da9f-4e00-47e6-ae45-1b93f8b1b135 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2bc4da9f-4e00-47e6-ae45-1b93f8b1b135","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:29.2901081+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_926ef37e-fb45-4071-b5f6-f9ad137fd4c9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_926ef37e-fb45-4071-b5f6-f9ad137fd4c9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:29.7888494+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cf13b838-1f29-48f1-8486-1666d6b9c2ad\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cf13b838-1f29-48f1-8486-1666d6b9c2ad\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:29.7889764+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:29.7890057+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:29.8030043+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9711ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9711,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:29.8031175+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1578ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1578,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:29.8081675+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_41b2aa1a-5a0f-414f-a53d-fb26f1926b73 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_41b2aa1a-5a0f-414f-a53d-fb26f1926b73","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:30.3102686+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_68e6e496-0d4f-4eda-843b-1f6b294f27ff for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_68e6e496-0d4f-4eda-843b-1f6b294f27ff","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:30.8072421+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_96ac853f-ef1f-4c5a-9b21-92eac819e9ab for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_96ac853f-ef1f-4c5a-9b21-92eac819e9ab","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:31.3080385+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fe91b4fa-03aa-4be1-9f0f-c0aa1bf2f4e9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fe91b4fa-03aa-4be1-9f0f-c0aa1bf2f4e9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:31.3081584+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:31.3081884+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:31.3218328+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.618ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.618,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:31.3219180+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.7765ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.7765,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:31.3275798+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_962d88fa-14cc-4cbf-b7bb-0e8aee438b85 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_962d88fa-14cc-4cbf-b7bb-0e8aee438b85","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:31.8261738+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_294733af-21a3-4a5c-8d88-7fd306e36eeb for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_294733af-21a3-4a5c-8d88-7fd306e36eeb","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:32.3254922+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_54da6c4b-2320-44ac-89b8-119cf80f1ccb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_54da6c4b-2320-44ac-89b8-119cf80f1ccb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:32.8261962+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d2c68433-9b64-41e0-9abb-2baedc07f625\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d2c68433-9b64-41e0-9abb-2baedc07f625\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:32.8263212+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:32.8263525+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:32.8406059+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2203ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2203,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:32.8407390+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.4359ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4359,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:32.8464113+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b35c68b3-8f46-4662-bc27-af1f22ec2fc9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b35c68b3-8f46-4662-bc27-af1f22ec2fc9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:33.3474681+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_26c452c5-0e64-461f-8894-13e809d795db for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_26c452c5-0e64-461f-8894-13e809d795db","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:33.8465714+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_92417970-295c-4a8b-85e0-b0e6a057f5e6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_92417970-295c-4a8b-85e0-b0e6a057f5e6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:34.3495847+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa1ca8d9-5406-402a-a400-9facf0e53e3c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"aa1ca8d9-5406-402a-a400-9facf0e53e3c\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:34.3496981+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:34.3497225+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:34.3631230+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.3741ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.3741,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:34.3632093+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.5276ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.5276,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:34.3680610+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4ba58f86-4b33-4ac8-9b88-7e3609a7315a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4ba58f86-4b33-4ac8-9b88-7e3609a7315a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:34.8687662+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_492aaf04-2534-443a-92cb-3d048713fdf2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_492aaf04-2534-443a-92cb-3d048713fdf2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:35.3718237+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cfec267b-e88c-42ea-a245-14a8f9bea8de for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cfec267b-e88c-42ea-a245-14a8f9bea8de","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:35.8686922+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"131f6dcc-3f1f-4a32-bd76-4cf0e288d0a6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"131f6dcc-3f1f-4a32-bd76-4cf0e288d0a6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:35.8688025+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:35.8688283+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:35.8828494+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9946ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9946,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:35.8829377+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.1482ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1482,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:35.8878118+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fdae1f03-5e8c-46d3-950e-4abe51517992 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fdae1f03-5e8c-46d3-950e-4abe51517992","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:36.3864800+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2444e723-6113-4d2e-b362-c91bbacd0ecc for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2444e723-6113-4d2e-b362-c91bbacd0ecc","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:36.8896583+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_28dae2a7-6215-4dcc-a5d6-8faebc852676 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_28dae2a7-6215-4dcc-a5d6-8faebc852676","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:37.3881490+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"28cafca6-ce44-49ec-be98-8d61ca48ad3e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"28cafca6-ce44-49ec-be98-8d61ca48ad3e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:37.3882729+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:37.3883037+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:37.4025461+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2138ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2138,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:37.4026420+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.3868ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3868,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:37.4082628+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_01ccad44-8ed2-4c95-8098-ad59db103aa3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_01ccad44-8ed2-4c95-8098-ad59db103aa3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:37.9115298+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_299443c9-6620-47b1-9160-5c834c48d1f3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_299443c9-6620-47b1-9160-5c834c48d1f3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:38.4085601+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_af3d8fe9-e1e3-43bc-89f4-9983c26e8852 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_af3d8fe9-e1e3-43bc-89f4-9983c26e8852","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:38.9093776+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"76072818-ec98-4cb5-8b36-0385dc2e967e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"76072818-ec98-4cb5-8b36-0385dc2e967e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:38.9094955+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:38.9095253+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:38.9237246+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.1709ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.1709,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:38.9238196+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.3432ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3432,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:38.9289480+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fe34fe53-3c54-40f8-8c0b-a207429e25c2 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fe34fe53-3c54-40f8-8c0b-a207429e25c2","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:39.4310555+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_caf78e02-58c7-4c28-b321-17443a1eaac2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_caf78e02-58c7-4c28-b321-17443a1eaac2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:39.9366484+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ebbde6e5-9f0f-44b7-8d54-2c7eb280141a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ebbde6e5-9f0f-44b7-8d54-2c7eb280141a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:40.4317691+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3bbfaf24-1063-4d47-9101-38366d6d25b4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3bbfaf24-1063-4d47-9101-38366d6d25b4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:40.4318946+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:40.4319256+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:40.4514396+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 19.4835ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.4835,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:40.4515566+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.6792ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.6792,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:40.4565866+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5a9f3c76-b545-4843-a5db-68d2eafcca23 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5a9f3c76-b545-4843-a5db-68d2eafcca23","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:40.9609372+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8206c200-b978-4589-8d3d-5e75de1ee459 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8206c200-b978-4589-8d3d-5e75de1ee459","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:41.4621522+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_83944e32-952e-4fc3-9140-050dfb870adb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_83944e32-952e-4fc3-9140-050dfb870adb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:41.9568597+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ad21b239-7519-495c-82db-1939d7405ce6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ad21b239-7519-495c-82db-1939d7405ce6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:41.9569806+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:41.9570101+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:41.9705350+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.4959ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.4959,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:41.9706381+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.6742ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.6742,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:41.9763226+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_eb633fc9-50d0-43d4-a29e-3fe4cf2bf5a7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_eb633fc9-50d0-43d4-a29e-3fe4cf2bf5a7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:42.4751908+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_39c40a5a-14d5-4ba4-8463-aa203515f957 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_39c40a5a-14d5-4ba4-8463-aa203515f957","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:42.9764178+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_73f6e8fb-180f-4318-94ac-a667ba0e68f9 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_73f6e8fb-180f-4318-94ac-a667ba0e68f9","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:43.4755988+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e25e15dd-ba6a-4c32-9b0d-3078a5fa7f18\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e25e15dd-ba6a-4c32-9b0d-3078a5fa7f18\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:43.4757140+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:43.4757397+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:43.4900763+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.3071ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3071,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:43.4901753+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.4761ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4761,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:43.4951676+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_15260234-787a-4510-888e-2b87e3d3d8bf for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_15260234-787a-4510-888e-2b87e3d3d8bf","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:43.9955274+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f6aa777f-f35b-42cb-8f67-dbe07b5112a0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f6aa777f-f35b-42cb-8f67-dbe07b5112a0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:44.4945002+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4ada6410-027f-4bbf-a749-705a8b0023a6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4ada6410-027f-4bbf-a749-705a8b0023a6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:44.9935684+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f5ec50bb-9b7f-4f17-a460-54e2e95573dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f5ec50bb-9b7f-4f17-a460-54e2e95573dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:44.9936835+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:44.9937100+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:45.0081677+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.4306ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4306,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:45.0082812+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.6119ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.6119,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:45.0133748+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b978f8ac-112e-42d7-a99c-71c9d0fe62b3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b978f8ac-112e-42d7-a99c-71c9d0fe62b3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:45.5149847+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_95771342-6bce-47f6-af53-04cd03dd2ade for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_95771342-6bce-47f6-af53-04cd03dd2ade","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:46.0146317+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_9734c425-5f07-45e9-85db-b438453511a5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_9734c425-5f07-45e9-85db-b438453511a5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:46.5176299+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e01e15b4-c424-40e8-8364-91c393fc967a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e01e15b4-c424-40e8-8364-91c393fc967a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:46.5177377+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:46.5177630+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:46.5320031+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.2168ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.2168,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:46.5321107+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.3898ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.3898,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:46.5369118+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d66d35c1-a970-4d8c-91de-1f2831c197cd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d66d35c1-a970-4d8c-91de-1f2831c197cd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:47.0390286+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_da9e9ec2-e896-47c0-9936-ff01e55071f9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_da9e9ec2-e896-47c0-9936-ff01e55071f9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:47.5384427+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cff1b1d2-b60c-4651-a374-4cfd1cbba4a3 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cff1b1d2-b60c-4651-a374-4cfd1cbba4a3","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:48.0370262+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cc990a94-17a5-45bd-bc20-067a29c18633\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cc990a94-17a5-45bd-bc20-067a29c18633\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:48.0371344+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:48.0371577+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:48.0509609+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.777ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.777,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:48.0510509+12:00","LogLevel":"Information","Message":"End processing HTTP request after 13.9324ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9324,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:48.0560654+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_bc622a01-6948-413c-971f-7c8dff3674b4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_bc622a01-6948-413c-971f-7c8dff3674b4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:48.5588562+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5d7b2e60-2f66-49a3-9b31-a7dc5944cf35 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5d7b2e60-2f66-49a3-9b31-a7dc5944cf35","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:49.0581862+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cedc2989-e62a-4910-9dac-1342b2821c25 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cedc2989-e62a-4910-9dac-1342b2821c25","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:49.5531071+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2ef3e2e1-d11b-4a09-a9fa-08902f680ff2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2ef3e2e1-d11b-4a09-a9fa-08902f680ff2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:49.5532329+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:49.5532583+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:49.5672030+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 13.9161ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":13.9161,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:49.5673107+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.0945ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.0945,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:49.5729115+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_07dc85d6-141d-4299-aebc-164abfa76a71 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_07dc85d6-141d-4299-aebc-164abfa76a71","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:50.0758240+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ac8dac9b-ace2-4186-b6e9-95bbbc49e922 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ac8dac9b-ace2-4186-b6e9-95bbbc49e922","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:50.5772007+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c66d75d8-ff31-4032-8a32-a76ab8bb466d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c66d75d8-ff31-4032-8a32-a76ab8bb466d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:51.0720428+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"38e99371-b157-455a-8952-670bfffa8155\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"38e99371-b157-455a-8952-670bfffa8155\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:51.0721637+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:51.0721899+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:51.0886130+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 16.3979ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":16.3979,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:51.0887164+12:00","LogLevel":"Information","Message":"End processing HTTP request after 16.5671ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":16.5671,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:51.0949362+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7a6b75b5-d4b0-4587-a1a2-15b365413d9d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7a6b75b5-d4b0-4587-a1a2-15b365413d9d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:51.5939890+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_81c2f31e-db00-4ba7-b832-daf324c7d2fb for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_81c2f31e-db00-4ba7-b832-daf324c7d2fb","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:52.0957197+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ec230d6b-9700-45e3-9c0e-d0fcb8367bdd for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ec230d6b-9700-45e3-9c0e-d0fcb8367bdd","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:52.5920532+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"66defc44-35c0-456e-86b7-391a72a63cb8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"66defc44-35c0-456e-86b7-391a72a63cb8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:52.5921764+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:52.5922032+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:52.6070732+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.8432ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.8432,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:48:52.6071980+12:00","LogLevel":"Information","Message":"End processing HTTP request after 15.0379ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":15.0379,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99 accounts attempts a transfer to a S1 account
-&gt; done: PainMockedStepDefinitions.WhenDebtorProductTypesAreTransferredToCreditorProductType("I1, I9, I30, L5, ...", "S1") (53.2s)
Then all product facility transfer combos are NOT successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreNotSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a80ae59a-6335-4038-b474-8a44900ac68a" testId="c249c980-3de8-89bf-6821-41f38ac23492" testName="RetryUASRequestTimesOut" computerName="ip-10-130-163-65" duration="00:00:16.0340478" startTime="2025-09-12T15:40:07.1914239+12:00" endTime="2025-09-12T15:40:23.2257844+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a80ae59a-6335-4038-b474-8a44900ac68a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:07.1931254+12:00","LogLevel":"Information","Message":"Starting Test Execution: Retry UAS request times out:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Retry UAS request times out","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:07.2018560+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_cdafe0b8-8fbb-4eb9-b7ba-1dabf12e9838Not Delayed for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_cdafe0b8-8fbb-4eb9-b7ba-1dabf12e9838Not Delayed","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:07.2036815+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_cdafe0b8-8fbb-4eb9-b7ba-1dabf12e9838 Delayed for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_cdafe0b8-8fbb-4eb9-b7ba-1dabf12e9838 Delayed","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:07.7031460+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6c1e9579-7c91-4726-a6db-8d1b55263daf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6c1e9579-7c91-4726-a6db-8d1b55263daf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:07.7033021+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:07.7033380+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:17.7145375+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 10011.1098ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10011.1098,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:17.7146594+12:00","LogLevel":"Information","Message":"End processing HTTP request after 10011.3856ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10011.3856,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:17.7151965+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"OPERATION_CANCEL_TOKEN\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"OPERATION_CANCEL_TOKEN\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the UAS mock response will time out
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillTimeOut() (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (10.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 1 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(1) (5.0s)
And there are 1 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(1, "UAS") (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field               | Value                                                                                     |
  | $.errors[0].message | The request was canceled due to the configured HttpClient.Timeout of 10 seconds elapsing. |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6b6e16d5-52ac-4161-a89d-7ce1b8b1c32e" testId="09e92047-e9c4-5609-5dbd-7817c618d424" testName="OPARetriesForAllowedResponses (504,,)" computerName="ip-10-130-163-65" duration="00:00:02.6061544" startTime="2025-09-12T15:39:44.3971508+12:00" endTime="2025-09-12T15:39:47.0036361+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6b6e16d5-52ac-4161-a89d-7ce1b8b1c32e">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:44.3977959+12:00","LogLevel":"Information","Message":"Starting Test Execution: OPA retries for allowed responses:[\"[ErrorCode, 504]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"OPA retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 504]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:44.4026004+12:00","LogLevel":"Information","Message":"Successfully created map OPA_1 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA_1","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:44.4052738+12:00","LogLevel":"Information","Message":"Successfully created map OPA for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPA","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:44.9089502+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_feaa9fa6-668b-4ad6-addc-6fdb047ce555 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_feaa9fa6-668b-4ad6-addc-6fdb047ce555","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:45.4044651+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_63a7ef1f-9fa9-49c3-852f-4042227a0348 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_63a7ef1f-9fa9-49c3-852f-4042227a0348","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:45.9010974+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4aa40ea9-fbd2-4f7c-95e0-ae5377a47adc\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4aa40ea9-fbd2-4f7c-95e0-ae5377a47adc\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:45.9012798+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:45.9013722+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:46.4894004+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 587.9579ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":587.9579,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:46.4895293+12:00","LogLevel":"Information","Message":"End processing HTTP request after 588.2781ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":588.2781,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:46.4902147+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"62727243b80448b5bfd1362074d12095\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:45.401Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:45.401Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"62727243b80448b5bfd1362074d12095\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:45.401Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:45.401Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will return 504 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBeThenSuccessful("504") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the OPA mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "OPA") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b1928a00-336c-4dc6-92ba-5dfdeabe4e2b" testId="877d9882-d828-5927-467b-956b819a9e1d" testName="PainTransferUltracsToUltracsHappyPath" computerName="ip-10-130-163-65" duration="00:00:02.1364991" startTime="2025-09-12T15:39:34.3881127+12:00" endTime="2025-09-12T15:39:36.5281245+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1928a00-336c-4dc6-92ba-5dfdeabe4e2b">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:34.3962642+12:00","LogLevel":"Information","Message":"Starting Test Execution: Pain transfer Ultracs to Ultracs happy path:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Pain transfer Ultracs to Ultracs happy path","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:34.4048178+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b77400c1-637a-4511-b3a6-6c1e9b1217ed for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b77400c1-637a-4511-b3a6-6c1e9b1217ed","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:34.9124532+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_35a5729d-bf9f-486f-bac2-a6487814c540 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_35a5729d-bf9f-486f-bac2-a6487814c540","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:35.4121843+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a79a8e51-8583-401d-9d8d-a8f0e01a2afc for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a79a8e51-8583-401d-9d8d-a8f0e01a2afc","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:39:35.9098255+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3c945f88-cd01-49c3-9fa3-846786bbe4db\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3c945f88-cd01-49c3-9fa3-846786bbe4db\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:35.9100561+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:35.9101691+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:36.0174091+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 107.1334ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":107.1334,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:36.0179390+12:00","LogLevel":"Information","Message":"End processing HTTP request after 107.9188ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":107.9188,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:36.0185640+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"46a7817d246d4c6a96848ad8bc0464d4\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:35.408Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:35.408Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"46a7817d246d4c6a96848ad8bc0464d4\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:39:35.408Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:39:35.408Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1154221e-46c4-466c-affd-f28f799a94df" testId="fe1cfd3d-bdc4-d95a-37c7-f86b80933e0b" testName="AccountTypeRulesForTransfers_AllowedPaths (Successful Legacy to Legacy,LegacyCore,LegacyCore,)" computerName="ip-10-130-163-65" duration="00:00:02.0728370" startTime="2025-09-12T15:41:11.7839665+12:00" endTime="2025-09-12T15:41:13.8576045+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1154221e-46c4-466c-affd-f28f799a94df">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:11.7871725+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - allowed paths:[\"[Description, Successful Legacy to Legacy]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, LegacyCore]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - allowed paths","scenarioInfo.Arguments":["[Description, Successful Legacy to Legacy]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, LegacyCore]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:11.7919161+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_da1089bf-10ab-4e39-98e7-197652c5f953 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_da1089bf-10ab-4e39-98e7-197652c5f953","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:12.2968182+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e6fff126-2b01-4e4f-a9b2-e4aa7aebcdc8 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e6fff126-2b01-4e4f-a9b2-e4aa7aebcdc8","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:12.7949076+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8bbe578d-e577-4d41-835d-563749aa2a46 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8bbe578d-e577-4d41-835d-563749aa2a46","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:13.2952316+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"78975c25-d1a2-4026-9f4f-b05ac834a7d3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"78975c25-d1a2-4026-9f4f-b05ac834a7d3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:13.2953948+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:13.2954425+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:13.3528653+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.3815ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.3815,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:13.3533967+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.0429ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.0429,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:13.3536585+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"4478932e6bf5408bb8c40ce14cdc686a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:12.792Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:12.792Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"4478932e6bf5408bb8c40ce14cdc686a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:12.792Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:12.792Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="abe7c89a-a95b-4d7c-936a-0d4e9010cccc" testId="0d7d1807-a7a7-d302-2661-0616557d6737" testName="DebtorAccountWithCoreOriginationAndNullSignatoriesIsAllowed" computerName="ip-10-130-163-65" duration="00:00:02.0868882" startTime="2025-09-12T15:41:36.3458827+12:00" endTime="2025-09-12T15:41:38.4330689+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="abe7c89a-a95b-4d7c-936a-0d4e9010cccc">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:36.3476791+12:00","LogLevel":"Information","Message":"Starting Test Execution: Debtor account with Core origination and null signatories is allowed:[]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Debtor account with Core origination and null signatories is allowed","scenarioInfo.Arguments":[],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:36.3512199+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5e012f53-7952-4263-9e61-6bd430c20664 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5e012f53-7952-4263-9e61-6bd430c20664","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:36.8546734+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_047e801a-416c-43d5-80df-34f9e5955701 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_047e801a-416c-43d5-80df-34f9e5955701","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:37.3569977+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cb751948-8bef-4e14-8626-b36496a19a6d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cb751948-8bef-4e14-8626-b36496a19a6d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:37.8568554+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"336dd133-37a5-4598-9015-fc12752dfbe8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"336dd133-37a5-4598-9015-fc12752dfbe8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:37.8569553+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:37.8569818+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:37.9312259+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 74.2169ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":74.2169,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:37.9313422+12:00","LogLevel":"Information","Message":"End processing HTTP request after 74.3987ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":74.3987,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:37.9316360+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"416ae4e4a66a46b79a4f19dc5340aede\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:37.353Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:37.353Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"416ae4e4a66a46b79a4f19dc5340aede\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:37.353Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:41:37.353Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Core") (0.0s)
And the UAS mock debtor account will have field MinimumNumberOfSignatories set to null
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "MinimumNumberOfSi...", "null") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eab2baa5-ed09-4233-bf97-dd22ddb5cf52" testId="71990d27-92f5-6ac3-b228-52e671538da7" testName="AccountStatusRules (Unsuccessful Opened to BlockedGeneral,Opened,BlockedGeneral,Creditor account status is not valid.,)" computerName="ip-10-130-163-65" duration="00:00:02.0205408" startTime="2025-09-12T15:41:42.4848384+12:00" endTime="2025-09-12T15:41:44.5056833+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eab2baa5-ed09-4233-bf97-dd22ddb5cf52">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:42.4854111+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account status rules:[\"[Description, Unsuccessful Opened to BlockedGeneral]\",\"[DebtorFieldValue, Opened]\",\"[CreditorFieldValue, BlockedGeneral]\",\"[ErrorMessage, Creditor account status is not valid.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account status rules","scenarioInfo.Arguments":["[Description, Unsuccessful Opened to BlockedGeneral]","[DebtorFieldValue, Opened]","[CreditorFieldValue, BlockedGeneral]","[ErrorMessage, Creditor account status is not valid.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:42.4887842+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7423fb4c-0be8-4926-bc6b-f0e20e4c3786 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7423fb4c-0be8-4926-bc6b-f0e20e4c3786","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:42.9935375+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7b629c08-3570-4bf7-9bfa-f21c8b0b319c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7b629c08-3570-4bf7-9bfa-f21c8b0b319c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:43.4948646+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_41ed7ddd-6fc1-4069-b451-db8becd0e52d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_41ed7ddd-6fc1-4069-b451-db8becd0e52d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:43.9922288+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ac429e5d-4f8a-41d5-b8a7-c9f2abe16907\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"ac429e5d-4f8a-41d5-b8a7-c9f2abe16907\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:43.9923420+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:43.9923716+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:44.0068862+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.4816ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.4816,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:44.0069939+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.6684ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.6684,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:44.0072188+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"e52c5b795d3041afacc70a41b03eb95a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:44.006Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"e52c5b795d3041afacc70a41b03eb95a\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:44.006Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"INVALID_ACCOUNT_STATE\",\"message\":\"Creditor account status is not valid.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountStatus set to Opened
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "Opened") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedGeneral
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedGeneral") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                 |
  | __typename                         | UnsuccessfulPayment                   |
  | debtorAccountNumber                |                                       |
  | creditorAccountNumber              |                                       |
  | paymentId                          | *                                     |
  | paymentInstructionCreationDateTime | *                                     |
  | initiatingAccessNumber             | *                                     |
  | debtorAccountCode                  | *                                     |
  | debtorAccountParticulars           | *                                     |
  | debtorAccountReference             | *                                     |
  | creditorAccountCode                | *                                     |
  | creditorAccountParticulars         | *                                     |
  | creditorAccountReference           | *                                     |
  | amount                             | *                                     |
  | code                               | INVALID_ACCOUNT_STATE                 |
  | message                            | Creditor account status is not valid. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9836caea-7b24-481a-b18e-45c3e08e2446" testId="8e04972e-479b-c5cb-e5bc-de8856808ce5" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S34,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3446624" startTime="2025-09-12T15:43:44.6454527+12:00" endTime="2025-09-12T15:44:06.9904692+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9836caea-7b24-481a-b18e-45c3e08e2446">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:43:44.6463735+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S34]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S34]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:44.6577213+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ef19d0aa-31d6-4091-91be-78c635b66501 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ef19d0aa-31d6-4091-91be-78c635b66501","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:45.1602473+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6bdc6a03-4835-4959-b340-4f0534221216 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6bdc6a03-4835-4959-b340-4f0534221216","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:45.6596505+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0ee41e6a-01ef-4931-b18c-923546ab236c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0ee41e6a-01ef-4931-b18c-923546ab236c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:46.1562531+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"250e25c0-1c1f-46a8-8c0e-1f1d46987bf3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"250e25c0-1c1f-46a8-8c0e-1f1d46987bf3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:46.1564013+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:46.1564358+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:46.2122067+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.7411ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.7411,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:46.2123064+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.9221ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.9221,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:46.2177146+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_392fe3d6-e6b9-454c-8fee-fb638c7ff453 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_392fe3d6-e6b9-454c-8fee-fb638c7ff453","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:46.7189193+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1f3cb3e0-b634-4ad4-afa3-e8a03e7ce153 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1f3cb3e0-b634-4ad4-afa3-e8a03e7ce153","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:47.2184026+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_91aa691f-853f-4282-991b-af3a68c1cff8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_91aa691f-853f-4282-991b-af3a68c1cff8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:47.7172792+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e5438b86-8ef7-474e-aaee-597fb17d6e21\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e5438b86-8ef7-474e-aaee-597fb17d6e21\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:47.7174038+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:47.7174329+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:47.7708115+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.3515ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3515,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:47.7709332+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.5478ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5478,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:47.7760708+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f1bde492-5fc1-4008-9401-5d67f660da40 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f1bde492-5fc1-4008-9401-5d67f660da40","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:48.2751900+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a51c1dee-2a89-410e-a84f-8908aba7d310 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a51c1dee-2a89-410e-a84f-8908aba7d310","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:48.7745828+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_eb5014b8-a423-47fe-99dd-e62badb661d1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_eb5014b8-a423-47fe-99dd-e62badb661d1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:49.2735085+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"868ddeb6-b815-4c41-99ac-31d78a68ba99\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"868ddeb6-b815-4c41-99ac-31d78a68ba99\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:49.2736184+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:49.2736443+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:49.3279078+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2388ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2388,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:49.3279941+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.3906ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3906,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:49.3329845+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0ea77502-cde4-4c73-8fcd-eba9b5cb6442 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0ea77502-cde4-4c73-8fcd-eba9b5cb6442","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:49.8352008+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_4f5fe561-1fd1-46b6-8ff4-cd95d08f0258 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_4f5fe561-1fd1-46b6-8ff4-cd95d08f0258","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:50.3326280+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3ce43be1-fa3b-43b1-b1ba-a2776f605164 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3ce43be1-fa3b-43b1-b1ba-a2776f605164","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:50.8335857+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c5a35c22-4bde-4ccc-b8db-dc7fb81b57ed\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c5a35c22-4bde-4ccc-b8db-dc7fb81b57ed\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:50.8337086+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:50.8337376+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:50.8917275+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.961ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.961,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:50.8918610+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.1706ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.1706,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:50.8967723+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1d818d2f-7cdb-424e-a345-aabbf74f1692 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1d818d2f-7cdb-424e-a345-aabbf74f1692","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:51.3998444+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c4ec047e-b588-4ff4-bb55-593885cab7b2 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c4ec047e-b588-4ff4-bb55-593885cab7b2","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:51.8991171+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ff174b59-165f-4526-bc6d-4983144723d8 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ff174b59-165f-4526-bc6d-4983144723d8","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:52.3957410+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d85dc70c-15a5-42ec-a18e-f4b7884cb9b8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d85dc70c-15a5-42ec-a18e-f4b7884cb9b8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:52.3958675+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:52.3958962+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:52.4482638+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.3383ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3383,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:52.4483722+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.5214ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5214,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:52.4534806+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8cd759c0-3b72-4fc1-b5b0-e0150e24a515 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8cd759c0-3b72-4fc1-b5b0-e0150e24a515","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:52.9553289+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_86f03e0a-b45a-40da-a5cf-5ef14154b26a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_86f03e0a-b45a-40da-a5cf-5ef14154b26a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:53.4548553+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_797882b0-da68-420c-a2e4-d12cabfb7d67 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_797882b0-da68-420c-a2e4-d12cabfb7d67","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:53.9542370+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"26bad88b-b265-46a9-b0b6-5bef6bb40d0d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"26bad88b-b265-46a9-b0b6-5bef6bb40d0d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:53.9543582+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:53.9543878+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:54.0053756+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 50.9597ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.9597,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:54.0054814+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.139ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.139,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:54.0104518+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4877a7ed-a5fe-4e11-ae5d-3b4c0defbe30 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4877a7ed-a5fe-4e11-ae5d-3b4c0defbe30","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:54.5112196+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_24bb3c3b-8e04-41bf-a9b1-323d768a8b7a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_24bb3c3b-8e04-41bf-a9b1-323d768a8b7a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:55.0125078+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_79ec254e-b1bf-4f03-919a-6d04725332d6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_79ec254e-b1bf-4f03-919a-6d04725332d6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:55.5091656+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c9214293-9e6d-40c3-b2b3-df71241e0e80\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c9214293-9e6d-40c3-b2b3-df71241e0e80\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:55.5092964+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:55.5093253+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:55.5615208+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.1659ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.1659,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:55.5616398+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3603ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3603,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:55.5666603+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c7e1dc21-9733-4af7-bb10-8e1f1d92ac48 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c7e1dc21-9733-4af7-bb10-8e1f1d92ac48","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:56.0674652+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9a4db842-25ca-4a25-85ec-b15cf47cd834 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9a4db842-25ca-4a25-85ec-b15cf47cd834","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:56.5667079+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4fe0174f-b65d-4247-af47-15fe0d36d49d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4fe0174f-b65d-4247-af47-15fe0d36d49d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:57.0655062+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"45142478-3585-4429-a0e6-383c36232211\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"45142478-3585-4429-a0e6-383c36232211\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:57.0656258+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:57.0656530+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:57.1189286+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.2449ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2449,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:57.1190135+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.4067ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4067,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:57.1268609+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_87151d81-66eb-4461-b801-9de6ccabad62 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_87151d81-66eb-4461-b801-9de6ccabad62","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:57.6278409+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6781f76b-f33f-48bb-a245-6e221f92a0dc for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6781f76b-f33f-48bb-a245-6e221f92a0dc","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:58.1290260+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_abf9984b-8370-48a3-9fc8-70fbba4dc495 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_abf9984b-8370-48a3-9fc8-70fbba4dc495","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:58.6256826+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1d3aaac4-809f-4606-b22b-0127a4194485\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1d3aaac4-809f-4606-b22b-0127a4194485\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:58.6258064+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:58.6258339+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:58.6861146+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 60.2524ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.2524,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:58.6862112+12:00","LogLevel":"Information","Message":"End processing HTTP request after 60.4235ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.4235,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:58.6918496+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fcbdc474-dac3-4a2e-b7ae-6ed3dea48515 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fcbdc474-dac3-4a2e-b7ae-6ed3dea48515","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:59.1911152+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_cd8ce74a-e3d4-4b5e-8dc5-1f1b1b053ddb for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_cd8ce74a-e3d4-4b5e-8dc5-1f1b1b053ddb","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:59.6900715+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e229a7c8-c2e5-4dc1-83cf-df74d5f6e6eb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e229a7c8-c2e5-4dc1-83cf-df74d5f6e6eb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:00.1913774+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4b96b69a-c257-4bd4-ac6d-b36f6c28b1f0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4b96b69a-c257-4bd4-ac6d-b36f6c28b1f0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:00.1915012+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:00.1915272+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:00.2472071+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.6544ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.6544,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:00.2473205+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.8361ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.8361,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:00.2524427+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_92adeec6-bf5a-445d-b5bd-d0b536db7132 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_92adeec6-bf5a-445d-b5bd-d0b536db7132","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:00.7549146+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_999cc806-9c29-4455-923e-c48b760df509 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_999cc806-9c29-4455-923e-c48b760df509","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:01.2545310+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8f3d3dbe-ce94-46b5-ad90-845e5eabda4c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8f3d3dbe-ce94-46b5-ad90-845e5eabda4c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:01.7534715+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"06719713-1752-48d0-9563-f9e3de54ad72\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"06719713-1752-48d0-9563-f9e3de54ad72\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:01.7535870+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:01.7536122+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:01.8057898+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.1545ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.1545,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:01.8058859+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3132ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3132,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:01.8109478+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_37bcda90-205b-4760-93de-7669ea3241d6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_37bcda90-205b-4760-93de-7669ea3241d6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:02.3105754+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_539cd118-07fd-4c0a-a1a2-0c891759b508 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_539cd118-07fd-4c0a-a1a2-0c891759b508","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:02.8117882+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_70448f23-18c4-43b6-ba96-5a2957807ef6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_70448f23-18c4-43b6-ba96-5a2957807ef6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:03.3082048+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"03824083-281c-4ec5-9365-f3a14278b38a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"03824083-281c-4ec5-9365-f3a14278b38a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:03.3083209+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:03.3083459+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:03.3638752+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.5026ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.5026,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:03.3639813+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.6747ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.6747,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:03.3692528+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_856da826-f712-4c6e-92eb-9c65b90c36fb for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_856da826-f712-4c6e-92eb-9c65b90c36fb","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:03.8715189+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_91e6e457-67a6-426a-87e0-78ab2fea568e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_91e6e457-67a6-426a-87e0-78ab2fea568e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:04.3705401+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6127ad33-56bf-407c-83d1-2b6435bfaeca for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6127ad33-56bf-407c-83d1-2b6435bfaeca","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:04.8691576+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"58b2da1e-e032-4b6e-8d90-1303d21d118d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"58b2da1e-e032-4b6e-8d90-1303d21d118d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:04.8692785+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:04.8693063+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:04.9210082+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.6729ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.6729,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:04.9211061+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.8465ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.8465,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:04.9267740+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_6e750c2f-c412-4afa-ab65-7196191b41f0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_6e750c2f-c412-4afa-ab65-7196191b41f0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:05.4267939+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6e2d5526-afd9-4984-9e0a-4eadaaeabb05 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6e2d5526-afd9-4984-9e0a-4eadaaeabb05","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:05.9295670+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f3c19245-0b95-4888-9f70-66ef7558f01e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f3c19245-0b95-4888-9f70-66ef7558f01e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:06.4283379+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"53bbce2c-4bbc-44a3-9e26-016975ce262f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"53bbce2c-4bbc-44a3-9e26-016975ce262f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:06.4284577+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:06.4284876+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:06.4867769+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.2624ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.2624,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:06.4868700+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.4292ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.4292,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S34 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S34", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fda78eb8-f39f-4570-be15-dceaca128be4" testId="a212f48f-f3f7-c834-59a0-3e4e89a8bc6e" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S40,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3283031" startTime="2025-09-12T15:46:43.3611436+12:00" endTime="2025-09-12T15:47:05.6898027+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fda78eb8-f39f-4570-be15-dceaca128be4">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:46:43.3619711+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S40]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S40]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:43.3682815+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_2a74f72d-b395-4b29-b9d5-5558fcd8ed6e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_2a74f72d-b395-4b29-b9d5-5558fcd8ed6e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:43.8720277+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_092b0989-107c-4f82-90c1-9d3ff059020a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_092b0989-107c-4f82-90c1-9d3ff059020a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:44.3709473+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f3870dbf-2fe4-47d7-bc61-d26267b9aa03 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f3870dbf-2fe4-47d7-bc61-d26267b9aa03","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:44.8696511+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8b23e59e-be95-4b0c-9828-ec1d434ab8aa\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8b23e59e-be95-4b0c-9828-ec1d434ab8aa\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:44.8697787+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:44.8698110+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:44.9296657+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.8204ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.8204,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:44.9297799+12:00","LogLevel":"Information","Message":"End processing HTTP request after 60.0173ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.0173,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:44.9351447+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7f8511a1-8ce5-43e7-9a6a-af1f3771b97c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7f8511a1-8ce5-43e7-9a6a-af1f3771b97c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:45.4358218+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c16af3df-23f5-40bd-bcbe-7627d87bf042 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c16af3df-23f5-40bd-bcbe-7627d87bf042","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:45.9346728+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_abee56ff-b432-427f-909a-4b3074ebf1f2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_abee56ff-b432-427f-909a-4b3074ebf1f2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:46.4335483+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4d9049ee-4622-4071-9943-683f3c9d9ad7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4d9049ee-4622-4071-9943-683f3c9d9ad7\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:46.4366458+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:46.4367343+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:46.4910246+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2567ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2567,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:46.4911529+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.4974ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.4974,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:46.4970373+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1a3ec003-05b9-4474-b12e-b39fd975b2d4 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1a3ec003-05b9-4474-b12e-b39fd975b2d4","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:46.9989950+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b0ff21a3-c1cd-45ad-bc31-faff0b12d56e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b0ff21a3-c1cd-45ad-bc31-faff0b12d56e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:47.4981371+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_33be7fac-b7cc-4a5f-b88b-88dd15f23090 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_33be7fac-b7cc-4a5f-b88b-88dd15f23090","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:47.9969793+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d584310f-9f6d-4e8b-995a-409259947aa0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d584310f-9f6d-4e8b-995a-409259947aa0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:47.9971004+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:47.9971330+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:48.0512557+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.0948ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0948,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:48.0513870+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.3027ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3027,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:48.0566614+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_280adfdb-5329-4930-8bf6-134036ca6764 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_280adfdb-5329-4930-8bf6-134036ca6764","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:48.5585503+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_626091a7-a45c-404d-a98f-f156d23c64ed for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_626091a7-a45c-404d-a98f-f156d23c64ed","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:49.0595193+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8390a13c-6f6d-4ae5-8075-c54cad011372 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8390a13c-6f6d-4ae5-8075-c54cad011372","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:49.5563359+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cfc08514-1ff7-4acc-bcd0-263df83dc409\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cfc08514-1ff7-4acc-bcd0-263df83dc409\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:49.5564563+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:49.5564863+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:49.6078159+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.2998ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.2998,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:49.6079255+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.4862ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.4862,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:49.6131959+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_23f123c1-e274-4a53-896c-0414f27688f9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_23f123c1-e274-4a53-896c-0414f27688f9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:50.1159611+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_53426f92-6d5e-4451-9de1-c78a6b9b7a4d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_53426f92-6d5e-4451-9de1-c78a6b9b7a4d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:50.6151875+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3753496c-51f4-4347-ad0a-9a5d24dccc32 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3753496c-51f4-4347-ad0a-9a5d24dccc32","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:51.1119458+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7ed606d2-8eb2-4c57-911c-d0eb00ca4fb5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7ed606d2-8eb2-4c57-911c-d0eb00ca4fb5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:51.1120569+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:51.1120839+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:51.1639333+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.8232ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.8232,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:51.1640331+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.9911ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.9911,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:51.1696134+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e8b09749-cc78-4866-85e4-03c6740e1e16 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e8b09749-cc78-4866-85e4-03c6740e1e16","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:51.6703395+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c44f4982-3b1d-4216-bb5e-591657a7bfda for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c44f4982-3b1d-4216-bb5e-591657a7bfda","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:52.1713376+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_868b4f19-5a28-4b46-8443-016163a5d7c1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_868b4f19-5a28-4b46-8443-016163a5d7c1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:52.6681674+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"dae79742-4731-4e80-9292-6e2c9efa6638\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"dae79742-4731-4e80-9292-6e2c9efa6638\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:52.6682872+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:52.6683164+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:52.7261737+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.8266ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.8266,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:52.7262743+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.0038ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.0038,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:52.7316046+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f860623a-8bb2-4f1a-8454-64456af90f69 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f860623a-8bb2-4f1a-8454-64456af90f69","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:53.2300984+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_afcf6352-2455-4310-a82f-0e733e1f4b54 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_afcf6352-2455-4310-a82f-0e733e1f4b54","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:53.7316031+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_75031687-e315-4fa2-a231-b191cf32b5c0 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_75031687-e315-4fa2-a231-b191cf32b5c0","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:54.2282646+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9f54a33e-8bd8-45bb-9f09-ca041ee8f082\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9f54a33e-8bd8-45bb-9f09-ca041ee8f082\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:54.2283866+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:54.2284149+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:54.2801273+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.6839ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.6839,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:54.2802400+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.8701ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.8701,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:54.2855186+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_29d180ee-8a12-44f9-bedc-60ff003b9657 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_29d180ee-8a12-44f9-bedc-60ff003b9657","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:54.7863309+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c2cd7417-7720-4aa3-86f3-e677adbb4e38 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c2cd7417-7720-4aa3-86f3-e677adbb4e38","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:55.2875713+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_349e90c4-c742-4fda-9766-59c83e2eede2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_349e90c4-c742-4fda-9766-59c83e2eede2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:55.7844361+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1e40cea2-0b15-4102-b21f-886f4e1e0d7a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1e40cea2-0b15-4102-b21f-886f4e1e0d7a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:55.7845539+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:55.7845799+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:55.8379449+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.3378ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3378,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:55.8380407+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.5018ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5018,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:55.8429470+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ea7c1c6c-17de-4fdb-86c3-4be0cb865b4e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ea7c1c6c-17de-4fdb-86c3-4be0cb865b4e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:56.3438819+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_764e5bf0-f55b-4c14-9dc0-1b3db242d1ac for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_764e5bf0-f55b-4c14-9dc0-1b3db242d1ac","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:56.8427529+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b8f8536b-698b-4a21-9cdf-35eae3977798 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b8f8536b-698b-4a21-9cdf-35eae3977798","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:57.3414924+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"067645f6-befd-4edd-bfa0-4d7378b68606\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"067645f6-befd-4edd-bfa0-4d7378b68606\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:57.3416065+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:57.3416298+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:57.3952239+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.5683ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5683,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:57.3953313+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.7417ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.7417,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:57.4012878+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b0449616-6224-4e13-b233-afe3cf08952b for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b0449616-6224-4e13-b233-afe3cf08952b","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:57.9026987+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_7a4d70b2-418e-4991-966e-6b205375ca06 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_7a4d70b2-418e-4991-966e-6b205375ca06","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:58.4043562+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ec8ef1f0-c829-4c9e-b88f-0b46d27e8e0d for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ec8ef1f0-c829-4c9e-b88f-0b46d27e8e0d","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:58.9004928+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"eac68cc3-0b80-41c4-a985-e88c0783dcc8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"eac68cc3-0b80-41c4-a985-e88c0783dcc8\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:46:58.9006043+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:58.9006299+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:58.9528492+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.1938ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.1938,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:58.9529624+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3748ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3748,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:46:58.9579148+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_42998dc8-6e8c-49ea-a708-6fb67103560a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_42998dc8-6e8c-49ea-a708-6fb67103560a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:59.4579788+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_67d74809-b176-419a-b88e-5ec9c8229597 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_67d74809-b176-419a-b88e-5ec9c8229597","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:46:59.9591373+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4394285d-2434-45cd-926e-b440dbe88541 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4394285d-2434-45cd-926e-b440dbe88541","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:00.4559578+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"934a02db-d718-4eca-acdd-1c9be334e23d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"934a02db-d718-4eca-acdd-1c9be334e23d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:00.4560720+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:00.4560971+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:00.5135015+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.3785ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.3785,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:00.5136201+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.5634ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.5634,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:00.5183585+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_db378147-f92a-47a2-bf94-71c7904b872a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_db378147-f92a-47a2-bf94-71c7904b872a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:01.0193058+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_80e08e83-f15f-457d-8f8c-c5de69f7cd17 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_80e08e83-f15f-457d-8f8c-c5de69f7cd17","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:01.5185404+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4baee667-f2ae-4535-b777-c43b5df57b59 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4baee667-f2ae-4535-b777-c43b5df57b59","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:02.0170197+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"350e98b8-a49c-4ed9-b249-d9cbf93879ad\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"350e98b8-a49c-4ed9-b249-d9cbf93879ad\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:02.0171407+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:02.0171700+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:02.0733955+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 56.1948ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.1948,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:02.0735250+12:00","LogLevel":"Information","Message":"End processing HTTP request after 56.3992ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":56.3992,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:02.0790335+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_73085fce-4116-4bf5-b815-a01df8c2b2ee for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_73085fce-4116-4bf5-b815-a01df8c2b2ee","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:02.5787593+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a6590628-0281-4dc0-9f8f-00fd1cfb39d4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a6590628-0281-4dc0-9f8f-00fd1cfb39d4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:03.0781699+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_56d8e435-fbec-4607-ba1d-8a22b0e5743f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_56d8e435-fbec-4607-ba1d-8a22b0e5743f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:03.5770613+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"250467a1-ee53-481b-b96f-f4b1980a44c6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"250467a1-ee53-481b-b96f-f4b1980a44c6\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:03.5771903+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:03.5772200+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:03.6294713+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.221ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.221,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:03.6295674+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3945ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3945,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:03.6345353+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1240b7ff-21ba-463e-b73f-2ad958a75b01 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1240b7ff-21ba-463e-b73f-2ad958a75b01","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:04.1364075+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_4324ba20-96b5-4e33-b2ab-51c00959c648 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_4324ba20-96b5-4e33-b2ab-51c00959c648","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:04.6357154+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_9c5dd021-ad7e-4b0e-ae39-d8237c2ba0df for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_9c5dd021-ad7e-4b0e-ae39-d8237c2ba0df","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:47:05.1323270+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1eb49575-a495-40b0-bb22-15af1b547025\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1eb49575-a495-40b0-bb22-15af1b547025\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:47:05.1324500+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:05.1324788+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:05.1853891+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.879ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.879,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:47:05.1854934+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.0606ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.0606,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S40 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S40", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2d4a1f43-d1fe-4654-96de-9e34c42173e7" testId="06e0d18b-70d0-2540-7137-5fed072bc7dc" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S3,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3366956" startTime="2025-09-12T15:44:06.9912916+12:00" endTime="2025-09-12T15:44:29.3283764+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d4a1f43-d1fe-4654-96de-9e34c42173e7">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:44:06.9917979+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S3]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S3]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:07.0006391+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_ee02c2b2-3d4e-4c7a-880b-942f4c212e6a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_ee02c2b2-3d4e-4c7a-880b-942f4c212e6a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:07.5034145+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e5532c0e-c6eb-47d4-87d0-88837816961f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e5532c0e-c6eb-47d4-87d0-88837816961f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:08.0026020+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a15c32bf-8dfc-4e2c-b059-eb3f9bf45cc2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a15c32bf-8dfc-4e2c-b059-eb3f9bf45cc2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:08.5014222+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c9ae2a3e-3027-450e-842f-998ffc1408ff\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c9ae2a3e-3027-450e-842f-998ffc1408ff\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:08.5015501+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:08.5015803+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:08.5547091+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.0986ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.0986,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:08.5548111+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.2763ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2763,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:08.5599872+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4fbf0e51-cabd-499e-9fe8-442693bc9a36 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4fbf0e51-cabd-499e-9fe8-442693bc9a36","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:09.0649019+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8800471b-128d-466b-b2a7-1a41f2496ec7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8800471b-128d-466b-b2a7-1a41f2496ec7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:09.5643534+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b7976199-4ef9-4871-b643-db2f3e306e0b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b7976199-4ef9-4871-b643-db2f3e306e0b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:10.0610147+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c06c8410-5b4b-4660-be51-16bc5e226929\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c06c8410-5b4b-4660-be51-16bc5e226929\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:10.0611348+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:10.0611620+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:10.1146977+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.5095ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5095,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:10.1147948+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6769ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6769,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:10.1197585+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b3cebb65-bbe9-48e7-9380-4571f921c7e3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b3cebb65-bbe9-48e7-9380-4571f921c7e3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:10.6207692+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_451b1e5d-a6b5-4d57-a2d8-e1c758dfd908 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_451b1e5d-a6b5-4d57-a2d8-e1c758dfd908","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:11.1179512+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_bcd35eff-7019-4aea-9892-2ea0efef454f for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_bcd35eff-7019-4aea-9892-2ea0efef454f","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:11.6164826+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"852a2387-9133-45b3-aefb-d6ff73e56370\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"852a2387-9133-45b3-aefb-d6ff73e56370\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:11.6165990+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:11.6166246+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:11.6694925+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.8394ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.8394,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:11.6695998+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.018ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.018,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:11.6749148+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_22203d7a-3635-491d-8e65-65cf9fb9296e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_22203d7a-3635-491d-8e65-65cf9fb9296e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:12.1757897+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c9571a08-2b77-4606-81d8-137dda5b188e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c9571a08-2b77-4606-81d8-137dda5b188e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:12.6747606+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c85a0983-4135-4be8-914f-27165aa72970 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c85a0983-4135-4be8-914f-27165aa72970","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:13.1735594+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cf617374-b242-4441-903b-b77c60f200c5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cf617374-b242-4441-903b-b77c60f200c5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:13.1736816+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:13.1737095+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:13.2286397+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.9031ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.9031,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:13.2287305+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.0682ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.0682,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:13.2336105+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0a17234c-c97c-4f80-a924-5b911d945f61 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0a17234c-c97c-4f80-a924-5b911d945f61","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:13.7344984+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_637557d8-eee9-4854-a720-13273aa71054 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_637557d8-eee9-4854-a720-13273aa71054","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:14.2358297+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1aa147aa-feb9-4e6d-9515-1fff0d981b66 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1aa147aa-feb9-4e6d-9515-1fff0d981b66","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:14.7346249+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e6e854b1-1639-4e60-a18f-1d9d0da4b26d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"e6e854b1-1639-4e60-a18f-1d9d0da4b26d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:14.7347730+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:14.7348051+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:14.8000794+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 65.2469ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":65.2469,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:14.8002056+12:00","LogLevel":"Information","Message":"End processing HTTP request after 65.4536ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":65.4536,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:14.8059874+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e0f8bdef-ef87-47f4-a607-f5e2358301f3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e0f8bdef-ef87-47f4-a607-f5e2358301f3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:15.3066949+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_aca6c8e0-26e9-4853-a449-cad2b37f2c97 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_aca6c8e0-26e9-4853-a449-cad2b37f2c97","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:15.8059939+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_07942ae3-1d88-4f04-a391-37d8dd29456b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_07942ae3-1d88-4f04-a391-37d8dd29456b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:16.3071692+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f91aeb93-31b8-4700-9520-1328270e6805\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f91aeb93-31b8-4700-9520-1328270e6805\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:16.3073009+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:16.3073297+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:16.3629599+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.5748ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.5748,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:16.3630648+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.7802ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.7802,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:16.3683436+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_bb9c5321-f2a8-48a1-941e-2cc17085bd0d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_bb9c5321-f2a8-48a1-941e-2cc17085bd0d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:16.8710751+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_0ad010ac-9b03-4a61-965f-5edc8cef3d4f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_0ad010ac-9b03-4a61-965f-5edc8cef3d4f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:17.3704320+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_25749204-80d3-47f6-a347-0900e5152dc6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_25749204-80d3-47f6-a347-0900e5152dc6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:17.8695476+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"48f6516f-8efd-43a5-8dc2-e2bf1e030003\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"48f6516f-8efd-43a5-8dc2-e2bf1e030003\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:17.8696683+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:17.8696973+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:17.9221201+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.3937ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3937,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:17.9222402+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.5894ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.5894,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:17.9276175+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d43601cd-d9b7-4908-80e4-a7671b6952e6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d43601cd-d9b7-4908-80e4-a7671b6952e6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:18.4268168+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_dc725f7b-8fcc-4be3-9022-b5247661886c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_dc725f7b-8fcc-4be3-9022-b5247661886c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:18.9277772+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ce87e951-d636-42e4-83aa-2b074720680c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ce87e951-d636-42e4-83aa-2b074720680c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:19.4244358+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d65bb278-37ec-4675-9375-7d51f7807e51\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d65bb278-37ec-4675-9375-7d51f7807e51\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:19.4245581+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:19.4245859+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:19.4761868+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.5722ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.5722,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:19.4762986+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.7568ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.7568,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:19.4813717+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_87b9febe-1009-4bd5-b57b-80d7cf185abd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_87b9febe-1009-4bd5-b57b-80d7cf185abd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:19.9839317+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_09f85120-d094-43d2-bf30-99481732860a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_09f85120-d094-43d2-bf30-99481732860a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:20.4833009+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_265491a2-fc8e-4b04-bc3d-ce6063e271b6 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_265491a2-fc8e-4b04-bc3d-ce6063e271b6","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:20.9805217+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"432c1641-a44d-45c0-9546-16a6154e2020\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"432c1641-a44d-45c0-9546-16a6154e2020\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:20.9806480+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:20.9806862+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:21.0329934+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.2783ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.2783,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:21.0331170+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.4853ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4853,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:21.0383020+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_20f05ea3-d3a8-4b98-ad62-24a90d50bcf3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_20f05ea3-d3a8-4b98-ad62-24a90d50bcf3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:21.5392135+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_46d2f39a-6916-4220-8bda-c22eb5590437 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_46d2f39a-6916-4220-8bda-c22eb5590437","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:22.0384647+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_8c600923-8949-4a6b-b1e3-32cf7d7a6dac for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_8c600923-8949-4a6b-b1e3-32cf7d7a6dac","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:22.5373679+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2deacde0-7dc2-43f4-8d26-b6f60df963af\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2deacde0-7dc2-43f4-8d26-b6f60df963af\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:22.5374874+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:22.5375162+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:22.5947418+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.1973ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.1973,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:22.5948409+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.3695ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.3695,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:22.6004514+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c0fd75a1-a8f7-40d6-9ec4-10c8e090ba28 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c0fd75a1-a8f7-40d6-9ec4-10c8e090ba28","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:23.1031233+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_2efdef4f-a0c3-4895-9251-370586227e92 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_2efdef4f-a0c3-4895-9251-370586227e92","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:23.6026826+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_83bb0b6a-67b9-4546-a65e-592650647d85 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_83bb0b6a-67b9-4546-a65e-592650647d85","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:24.0994495+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"32e552bb-aa24-4489-a211-2f33de254ef4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"32e552bb-aa24-4489-a211-2f33de254ef4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:24.0995719+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:24.0996019+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:24.1506417+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.0131ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.0131,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:24.1507507+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.1946ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.1946,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:24.1555769+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7e40e335-9894-48d6-82a6-3f7bafec6cc6 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7e40e335-9894-48d6-82a6-3f7bafec6cc6","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:24.6548635+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_01f3e905-69b7-417e-b1ff-9cb792a6aef9 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_01f3e905-69b7-417e-b1ff-9cb792a6aef9","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:25.1542144+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f588d5e7-f866-4057-8d99-1f9871fb88d7 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f588d5e7-f866-4057-8d99-1f9871fb88d7","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:25.6552664+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d6d050c8-503b-4fa3-acc4-1eb7cb49d3bf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d6d050c8-503b-4fa3-acc4-1eb7cb49d3bf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:25.6554078+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:25.6554356+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:25.7076590+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.1987ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.1987,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:25.7077518+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.3596ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.3596,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:25.7126478+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_b6e266d2-4821-4674-abf3-e7925c1854c5 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_b6e266d2-4821-4674-abf3-e7925c1854c5","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:26.2146684+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f9e20747-5038-46cc-88f1-0f5c60253617 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f9e20747-5038-46cc-88f1-0f5c60253617","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:26.7142917+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e9b20e11-8e0c-466a-835c-489129111008 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e9b20e11-8e0c-466a-835c-489129111008","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:27.2130196+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f6991b5a-acc2-4dc2-bbce-cf2f8ac77ecd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f6991b5a-acc2-4dc2-bbce-cf2f8ac77ecd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:27.2131394+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:27.2131678+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:27.2645857+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 51.3896ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.3896,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:27.2647100+12:00","LogLevel":"Information","Message":"End processing HTTP request after 51.5891ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.5891,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:27.2700398+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_53af575c-39a4-4edf-9733-e36386b9f9e9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_53af575c-39a4-4edf-9733-e36386b9f9e9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:27.7730172+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c43bca9c-5756-43d2-9552-5db9459c5b22 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c43bca9c-5756-43d2-9552-5db9459c5b22","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:28.2703709+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_33ad7cc8-c7c3-4da1-bb05-eb0d41c4fe97 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_33ad7cc8-c7c3-4da1-bb05-eb0d41c4fe97","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:28.7688555+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bafd43a4-9848-40c8-9905-dce3962cd9df\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bafd43a4-9848-40c8-9905-dce3962cd9df\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:28.7689799+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:28.7690064+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:28.8264689+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 57.4351ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.4351,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:28.8265909+12:00","LogLevel":"Information","Message":"End processing HTTP request after 57.6291ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.6291,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S3 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S3", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="53e85676-cd1d-4117-b2d3-b3ca2233f5fd" testId="c64894c3-343e-4478-36df-59ff09c63261" testName="InvalidJWTTokenTests (Missing sub,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJhdXRoX2xldmVsIjoyLCJhdWRpdFRyYWNraW5nSWQiOiI0ZTgyY2ExNy00NTM1LTQzNTctODRhZS05NjE4YjY2N2U1OTUtMzAxNDAxIiwic3VibmFtZSI6IjY2NTI2MjciLCJpc3MiOiJodHRwczovL2lkZW50aXR5Lm10bHMuNGRjMi5jaXAtbm9uLXByb2R1Y3Rpb24ubm9ucHJvZC5pbnRlcm5hbC5hd3Mua2l3aWJhbmsuY28ubnovYW0vb2F1dGgyL3JlYWxtcy9yb290L3JlYWxtcy9jdXN0b21lcnMiLCJhY3RpdmUiOnRydWUsInNlc3Npb25fbm9uY2UiOiI4ZGYwM2U1OC1jOTcwLTQzMmQtOWZkOS0xOTlmOWZiNjdhODkiLCJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXV0aEdyYW50SWQiOiJPX1hEc3c5UEdNOGZQYnBMTHVsOXE1SHVsZzgiLCJjbGllbnRfaWQiOiJjdXN0b21lcnNJbXBsaWNpdEZsb3dUZXN0aW5nU3VwcG9ydFNlcnZpY2UiLCJhdWQiOiI2ZjZiOWZmNS1mMTNjLTQ1OTYtYmYwOS0yYTFiY2M1YTc5ZTAiLCJ1c2VyX2lkIjoiNjY1MjYyNyIsInN1Yl90eXBlIjoiY3VzdG9tZXIiLCJzY29wZSI6ImRlZmF1bHQiLCJyZWFsbSI6Ii9jdXN0b21lcnMiLCJleHAiOjE3NTQ1MTU1NjYsImxlZ2FjeV9rYl9sb2dpbl9uYW1lIjoiNjY1MjYyNyIsInVzZXJuYW1lIjoiNjY1MjYyNyJ9.ecsft4-Y5q0Xajj7YHDakBdEdySpPoNRFyy16AE2XhXTC1kycCaj5adYhLwomYvK1MpGFg3Xe8NVkxTcUz61cQ,)" computerName="ip-10-130-163-65" duration="00:00:00.5182300" startTime="2025-09-12T15:39:31.0660175+12:00" endTime="2025-09-12T15:39:31.5846361+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53e85676-cd1d-4117-b2d3-b3ca2233f5fd">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:31.0670458+12:00","LogLevel":"Information","Message":"Starting Test Execution: Invalid JWT token tests:[\"[Description, Missing sub]\",\"[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJhdXRoX2xldmVsIjoyLCJhdWRpdFRyYWNraW5nSWQiOiI0ZTgyY2ExNy00NTM1LTQzNTctODRhZS05NjE4YjY2N2U1OTUtMzAxNDAxIiwic3VibmFtZSI6IjY2NTI2MjciLCJpc3MiOiJodHRwczovL2lkZW50aXR5Lm10bHMuNGRjMi5jaXAtbm9uLXByb2R1Y3Rpb24ubm9ucHJvZC5pbnRlcm5hbC5hd3Mua2l3aWJhbmsuY28ubnovYW0vb2F1dGgyL3JlYWxtcy9yb290L3JlYWxtcy9jdXN0b21lcnMiLCJhY3RpdmUiOnRydWUsInNlc3Npb25fbm9uY2UiOiI4ZGYwM2U1OC1jOTcwLTQzMmQtOWZkOS0xOTlmOWZiNjdhODkiLCJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXV0aEdyYW50SWQiOiJPX1hEc3c5UEdNOGZQYnBMTHVsOXE1SHVsZzgiLCJjbGllbnRfaWQiOiJjdXN0b21lcnNJbXBsaWNpdEZsb3dUZXN0aW5nU3VwcG9ydFNlcnZpY2UiLCJhdWQiOiI2ZjZiOWZmNS1mMTNjLTQ1OTYtYmYwOS0yYTFiY2M1YTc5ZTAiLCJ1c2VyX2lkIjoiNjY1MjYyNyIsInN1Yl90eXBlIjoiY3VzdG9tZXIiLCJzY29wZSI6ImRlZmF1bHQiLCJyZWFsbSI6Ii9jdXN0b21lcnMiLCJleHAiOjE3NTQ1MTU1NjYsImxlZ2FjeV9rYl9sb2dpbl9uYW1lIjoiNjY1MjYyNyIsInVzZXJuYW1lIjoiNjY1MjYyNyJ9.ecsft4-Y5q0Xajj7YHDakBdEdySpPoNRFyy16AE2XhXTC1kycCaj5adYhLwomYvK1MpGFg3Xe8NVkxTcUz61cQ]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Invalid JWT token tests","scenarioInfo.Arguments":["[Description, Missing sub]","[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJhdXRoX2xldmVsIjoyLCJhdWRpdFRyYWNraW5nSWQiOiI0ZTgyY2ExNy00NTM1LTQzNTctODRhZS05NjE4YjY2N2U1OTUtMzAxNDAxIiwic3VibmFtZSI6IjY2NTI2MjciLCJpc3MiOiJodHRwczovL2lkZW50aXR5Lm10bHMuNGRjMi5jaXAtbm9uLXByb2R1Y3Rpb24ubm9ucHJvZC5pbnRlcm5hbC5hd3Mua2l3aWJhbmsuY28ubnovYW0vb2F1dGgyL3JlYWxtcy9yb290L3JlYWxtcy9jdXN0b21lcnMiLCJhY3RpdmUiOnRydWUsInNlc3Npb25fbm9uY2UiOiI4ZGYwM2U1OC1jOTcwLTQzMmQtOWZkOS0xOTlmOWZiNjdhODkiLCJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXV0aEdyYW50SWQiOiJPX1hEc3c5UEdNOGZQYnBMTHVsOXE1SHVsZzgiLCJjbGllbnRfaWQiOiJjdXN0b21lcnNJbXBsaWNpdEZsb3dUZXN0aW5nU3VwcG9ydFNlcnZpY2UiLCJhdWQiOiI2ZjZiOWZmNS1mMTNjLTQ1OTYtYmYwOS0yYTFiY2M1YTc5ZTAiLCJ1c2VyX2lkIjoiNjY1MjYyNyIsInN1Yl90eXBlIjoiY3VzdG9tZXIiLCJzY29wZSI6ImRlZmF1bHQiLCJyZWFsbSI6Ii9jdXN0b21lcnMiLCJleHAiOjE3NTQ1MTU1NjYsImxlZ2FjeV9rYl9sb2dpbl9uYW1lIjoiNjY1MjYyNyIsInVzZXJuYW1lIjoiNjY1MjYyNyJ9.ecsft4-Y5q0Xajj7YHDakBdEdySpPoNRFyy16AE2XhXTC1kycCaj5adYhLwomYvK1MpGFg3Xe8NVkxTcUz61cQ]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:31.0722557+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"74577416-b694-4c9e-b410-f476754db052\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"74577416-b694-4c9e-b410-f476754db052\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:31.0723990+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:31.0724610+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:31.0828721+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 10.3524ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10.3524,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:31.0830097+12:00","LogLevel":"Information","Message":"End processing HTTP request after 10.6211ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10.6211,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:31.0843228+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the JWT token will be eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJhdXRoX2xldmVsIjoyLCJhdWRpdFRyYWNraW5nSWQiOiI0ZTgyY2ExNy00NTM1LTQzNTctODRhZS05NjE4YjY2N2U1OTUtMzAxNDAxIiwic3VibmFtZSI6IjY2NTI2MjciLCJpc3MiOiJodHRwczovL2lkZW50aXR5Lm10bHMuNGRjMi5jaXAtbm9uLXByb2R1Y3Rpb24ubm9ucHJvZC5pbnRlcm5hbC5hd3Mua2l3aWJhbmsuY28ubnovYW0vb2F1dGgyL3JlYWxtcy9yb290L3JlYWxtcy9jdXN0b21lcnMiLCJhY3RpdmUiOnRydWUsInNlc3Npb25fbm9uY2UiOiI4ZGYwM2U1OC1jOTcwLTQzMmQtOWZkOS0xOTlmOWZiNjdhODkiLCJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXV0aEdyYW50SWQiOiJPX1hEc3c5UEdNOGZQYnBMTHVsOXE1SHVsZzgiLCJjbGllbnRfaWQiOiJjdXN0b21lcnNJbXBsaWNpdEZsb3dUZXN0aW5nU3VwcG9ydFNlcnZpY2UiLCJhdWQiOiI2ZjZiOWZmNS1mMTNjLTQ1OTYtYmYwOS0yYTFiY2M1YTc5ZTAiLCJ1c2VyX2lkIjoiNjY1MjYyNyIsInN1Yl90eXBlIjoiY3VzdG9tZXIiLCJzY29wZSI6ImRlZmF1bHQiLCJyZWFsbSI6Ii9jdXN0b21lcnMiLCJleHAiOjE3NTQ1MTU1NjYsImxlZ2FjeV9rYl9sb2dpbl9uYW1lIjoiNjY1MjYyNyIsInVzZXJuYW1lIjoiNjY1MjYyNyJ9.ecsft4-Y5q0Xajj7YHDakBdEdySpPoNRFyy16AE2XhXTC1kycCaj5adYhLwomYvK1MpGFg3Xe8NVkxTcUz61cQ
-&gt; done: PainMockedStepDefinitions.GivenTheJwtTokenWillBe("eyJ0eXAiOiJKV1QiL...") (0.0s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field                       | Value                   |
  | $.errors[0].message         | Unknown error occurred. |
  | $.errors[0].path[0]         | initiateTransfer        |
  | $.errors[0].extensions.code | INTERNAL_SERVER_ERROR   |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4f0c1c09-56ab-4f24-a3e6-bac3a945a6c9" testId="3e6f912f-5ebb-65a4-9492-1d065ca74479" testName="FreezeStatus_Unsuccessful (Unsuccessful type 2 to none,AgainstAllWithdrawalsFromThisAccount,none,debtor,,)" computerName="ip-10-130-163-65" duration="00:00:02.0260572" startTime="2025-09-12T15:42:02.7481885+12:00" endTime="2025-09-12T15:42:04.7745531+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4f0c1c09-56ab-4f24-a3e6-bac3a945a6c9">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:02.7487629+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Unsuccessful:[\"[Description, Unsuccessful type 2 to none]\",\"[DebtorFieldValue, AgainstAllWithdrawalsFromThisAccount]\",\"[CreditorFieldValue, none]\",\"[WhichAccountFrozen, debtor]\",\"[ErrorMessage, ]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Unsuccessful","scenarioInfo.Arguments":["[Description, Unsuccessful type 2 to none]","[DebtorFieldValue, AgainstAllWithdrawalsFromThisAccount]","[CreditorFieldValue, none]","[WhichAccountFrozen, debtor]","[ErrorMessage, ]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:02.7521188+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_559a67df-14cf-440b-a664-e011a2a425f7 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_559a67df-14cf-440b-a664-e011a2a425f7","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:03.2599231+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_eaeb4025-cef1-4678-b6e9-ca648b433fe2 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_eaeb4025-cef1-4678-b6e9-ca648b433fe2","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:03.7585426+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_3ee23510-5872-404c-a65c-20ddb3788949 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_3ee23510-5872-404c-a65c-20ddb3788949","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:04.2593026+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3ec24265-bcc2-439b-bdd7-fd2aefc8d6aa\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"3ec24265-bcc2-439b-bdd7-fd2aefc8d6aa\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:04.2594541+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:04.2594850+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:04.2740730+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.5548ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.5548,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:04.2742347+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.797ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.797,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:04.2747193+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"10e701b895d64f079f9d2fc615412806\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:04.273Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"FROZEN_ACCOUNT\",\"message\":\"Debtor account has been frozen.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"10e701b895d64f079f9d2fc615412806\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:04.273Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"FROZEN_ACCOUNT\",\"message\":\"Debtor account has been frozen.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to AgainstAllWithdrawalsFromThisAccount
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "AgainstAllWithdra...") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "none") (0.0s)
And the UAS mock debtor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value               |
  | __typename                         | UnsuccessfulPayment |
  | debtorAccountNumber                |                     |
  | creditorAccountNumber              |                     |
  | paymentId                          | *                   |
  | paymentInstructionCreationDateTime | *                   |
  | initiatingAccessNumber             | *                   |
  | debtorAccountCode                  | *                   |
  | debtorAccountParticulars           | *                   |
  | debtorAccountReference             | *                   |
  | creditorAccountCode                | *                   |
  | creditorAccountParticulars         | *                   |
  | creditorAccountReference           | *                   |
  | amount                             | *                   |
  | code                               | FROZEN_ACCOUNT      |
  | message                            |                     |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7db69181-6641-464e-8a8f-e38a0f3f5572" testId="2c8e7d26-c354-2c58-3d19-9f453287ea68" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S2,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3324997" startTime="2025-09-12T15:44:29.3291357+12:00" endTime="2025-09-12T15:44:51.6625510+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7db69181-6641-464e-8a8f-e38a0f3f5572">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:44:29.3295377+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S2]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S2]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:29.3365550+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_da1dfd1e-ede2-48a3-be7f-81f77e47e196 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_da1dfd1e-ede2-48a3-be7f-81f77e47e196","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:29.8395034+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_30e505d9-f73e-4330-8697-f7981b964ce0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_30e505d9-f73e-4330-8697-f7981b964ce0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:30.3386148+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d9514916-80df-474f-b4a1-ce5cf37ccaf5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d9514916-80df-474f-b4a1-ce5cf37ccaf5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:30.8373795+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"30bf6133-ed81-4eb4-a2a3-9eab47bcc4dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"30bf6133-ed81-4eb4-a2a3-9eab47bcc4dd\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:30.8374937+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:30.8375177+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:30.8912294+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.6848ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6848,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:30.8913208+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.84ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.84,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:30.8964085+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_6856ffb4-0148-40fe-8c7b-901acd7c977e for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_6856ffb4-0148-40fe-8c7b-901acd7c977e","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:31.3993405+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c4987965-cea1-4f2f-8593-8055fd95281f for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c4987965-cea1-4f2f-8593-8055fd95281f","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:31.8988944+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a1723829-8706-47cd-a5f3-8ddb2e9f96cd for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a1723829-8706-47cd-a5f3-8ddb2e9f96cd","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:32.3976447+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6e8a9f26-b1a8-44f7-8c20-e0cf9bffbafc\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6e8a9f26-b1a8-44f7-8c20-e0cf9bffbafc\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:32.3977675+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:32.3977990+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:32.4529669+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 55.1434ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.1434,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:32.4530534+12:00","LogLevel":"Information","Message":"End processing HTTP request after 55.3027ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":55.3027,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:32.4581213+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e8796ee0-9645-47ff-85cb-98b22b4e0a99 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e8796ee0-9645-47ff-85cb-98b22b4e0a99","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:32.9588594+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9e113873-1edd-42f4-b78b-0a78e67566a0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9e113873-1edd-42f4-b78b-0a78e67566a0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:33.4602914+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_13c4a55f-d776-45bf-8962-c3d90989e2da for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_13c4a55f-d776-45bf-8962-c3d90989e2da","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:33.9568433+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c4ea2319-ac5e-4654-aae6-4ca710c022e4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c4ea2319-ac5e-4654-aae6-4ca710c022e4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:33.9569494+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:33.9569735+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:34.0103813+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.3806ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3806,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:34.0104758+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.5412ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5412,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:34.0153278+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_d4039704-9815-4acd-b1b3-1e764042730a for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_d4039704-9815-4acd-b1b3-1e764042730a","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:34.5141779+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1394cb1e-253d-4d8b-84f8-7a294e2e8fe8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1394cb1e-253d-4d8b-84f8-7a294e2e8fe8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:35.0155159+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ec395cb6-99ad-4d94-88ad-7ec4cd20f856 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ec395cb6-99ad-4d94-88ad-7ec4cd20f856","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:35.5122210+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7fa71724-9dd4-4a31-9238-cc6f84b15741\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7fa71724-9dd4-4a31-9238-cc6f84b15741\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:35.5123324+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:35.5123575+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:35.5661605+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.777ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.777,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:35.5662771+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.9584ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.9584,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:35.5716229+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_23e568c6-ad74-457e-8651-0109eac6b58c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_23e568c6-ad74-457e-8651-0109eac6b58c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:36.0704376+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_537b3c85-4d10-4e37-868c-b9dd5c68a387 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_537b3c85-4d10-4e37-868c-b9dd5c68a387","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:36.5715229+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_95d9da48-8565-400b-9d30-c102983f45cd for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_95d9da48-8565-400b-9d30-c102983f45cd","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:37.0686395+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8a808a7d-0ac1-4a3d-b7b7-af1a752db3ff\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8a808a7d-0ac1-4a3d-b7b7-af1a752db3ff\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:37.0687659+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:37.0687943+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:37.1285038+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.6792ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.6792,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:37.1286351+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.8879ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.8879,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:37.1340382+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_828ac7c8-8a39-4524-8d36-e49eab07c750 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_828ac7c8-8a39-4524-8d36-e49eab07c750","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:37.6351784+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b7224360-cd55-4e21-8ffd-71bd2840297c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b7224360-cd55-4e21-8ffd-71bd2840297c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:38.1344222+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d588dc31-7fe7-485e-a592-66dc6bad18b5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d588dc31-7fe7-485e-a592-66dc6bad18b5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:38.6333276+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"acd17483-b033-4129-a617-edb4ee3c728e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"acd17483-b033-4129-a617-edb4ee3c728e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:38.6334525+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:38.6334821+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:38.6866846+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.1733ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.1733,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:38.6868054+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.3699ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.3699,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:38.6919353+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_67d2e699-4cec-4915-8be2-ce457b4a6199 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_67d2e699-4cec-4915-8be2-ce457b4a6199","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:39.1931490+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_421595a9-ea3e-432c-a455-b6092426f3f4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_421595a9-ea3e-432c-a455-b6092426f3f4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:39.6923105+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_acd8442a-b8f6-40bd-bd90-3fee584ac9ed for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_acd8442a-b8f6-40bd-bd90-3fee584ac9ed","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:40.1912277+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cfb0e23c-6682-4576-ac2e-fffd653b39e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"cfb0e23c-6682-4576-ac2e-fffd653b39e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:40.1913794+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:40.1914311+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:40.2438738+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.4086ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4086,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:40.2439701+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.6346ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.6346,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:40.2519848+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_cea54381-71cf-4730-80af-b0df16500c4f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_cea54381-71cf-4730-80af-b0df16500c4f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:40.7509555+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_44f88e90-457a-4088-8211-b92137c3b546 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_44f88e90-457a-4088-8211-b92137c3b546","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:41.2500639+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_6a7f4bae-6795-43a9-9dde-94e2495be9ae for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_6a7f4bae-6795-43a9-9dde-94e2495be9ae","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:41.7492115+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1910babe-91c8-49af-8e2e-1d5dfd2b4823\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1910babe-91c8-49af-8e2e-1d5dfd2b4823\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:41.7493239+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:41.7493472+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:41.8029482+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.5724ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5724,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:41.8030741+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.7673ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.7673,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:41.8084948+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_fec97bce-f57c-4823-80ae-6b1b1e30bfc3 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_fec97bce-f57c-4823-80ae-6b1b1e30bfc3","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:42.3114606+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_376b202e-a7b0-4632-903f-4cffab8f4a94 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_376b202e-a7b0-4632-903f-4cffab8f4a94","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:42.8105865+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_f8229c5a-0fb8-43ca-8806-697c1ed1ae99 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_f8229c5a-0fb8-43ca-8806-697c1ed1ae99","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:43.3093271+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5648cb1e-e61b-44a5-a615-fed7ed0805f5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"5648cb1e-e61b-44a5-a615-fed7ed0805f5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:43.3094482+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:43.3094779+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:43.3630130+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.5058ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.5058,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:43.3631271+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6958ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6958,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:43.3682446+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7cf2e27b-dc0e-4b7d-9686-d94ef653f816 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7cf2e27b-dc0e-4b7d-9686-d94ef653f816","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:43.8714598+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a5a2afc7-64ba-45f5-9109-c70ecf16d39a for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a5a2afc7-64ba-45f5-9109-c70ecf16d39a","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:44.3707169+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_9c16d387-7d5d-4cb6-a7c2-4f1beff4de5a for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_9c16d387-7d5d-4cb6-a7c2-4f1beff4de5a","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:44.8678672+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c2c11b62-39db-4d67-b186-6944a6bd9d16\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c2c11b62-39db-4d67-b186-6944a6bd9d16\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:44.8679790+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:44.8680023+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:44.9276349+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.6073ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.6073,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:44.9277355+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.7722ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.7722,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:44.9331261+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_e77ef8ef-c3f0-40a0-9044-a8986731b58d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_e77ef8ef-c3f0-40a0-9044-a8986731b58d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:45.4340436+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_1ac27aae-a0cd-45a0-9263-c51d4e37b441 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_1ac27aae-a0cd-45a0-9263-c51d4e37b441","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:45.9354084+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a4c6ec97-5189-4c19-a6c1-551e1098cd76 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a4c6ec97-5189-4c19-a6c1-551e1098cd76","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:46.4323991+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"54fa2203-0f73-434c-b11d-fc18b5fb0568\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"54fa2203-0f73-434c-b11d-fc18b5fb0568\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:46.4325229+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:46.4325511+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:46.4850547+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.4734ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.4734,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:46.4851605+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.6553ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.6553,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:46.4904590+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4b4f163d-1dc3-40ef-b1c2-030047632c5d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4b4f163d-1dc3-40ef-b1c2-030047632c5d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:46.9902653+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_87973e32-e025-468b-813b-6b15bf47f46e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_87973e32-e025-468b-813b-6b15bf47f46e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:47.4917616+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_97c08da0-b120-4e96-b6b2-2ee7d461a7a4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_97c08da0-b120-4e96-b6b2-2ee7d461a7a4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:47.9883223+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fd176c5f-83da-4c37-b056-29ca680ed44d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"fd176c5f-83da-4c37-b056-29ca680ed44d\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:47.9884326+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:47.9884586+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:48.0432241+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.7306ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.7306,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:48.0433382+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.9206ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.9206,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:48.0482383+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_55e402c1-3921-4780-85b9-bf7c3054c9fa for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_55e402c1-3921-4780-85b9-bf7c3054c9fa","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:48.5518490+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_017fd37e-295b-49f9-bc21-18d97735557b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_017fd37e-295b-49f9-bc21-18d97735557b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:49.0531792+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_c5b2d73a-15d7-4499-a6f4-e2825da6b828 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_c5b2d73a-15d7-4499-a6f4-e2825da6b828","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:49.5521559+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"75ba26ad-b619-4032-957d-561c35d62738\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"75ba26ad-b619-4032-957d-561c35d62738\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:49.5522807+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:49.5523090+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:49.6043810+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.0445ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.0445,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:49.6044929+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.2271ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.2271,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:49.6097575+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_221943c1-c2c8-4b1d-84d5-318fe5ae28bd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_221943c1-c2c8-4b1d-84d5-318fe5ae28bd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:50.1109422+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_5b46f285-0b48-416d-b0f7-63cfed487f7e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_5b46f285-0b48-416d-b0f7-63cfed487f7e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:50.6103033+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ce74155c-9434-4ed0-a830-196f3ae51008 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ce74155c-9434-4ed0-a830-196f3ae51008","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:44:51.1070930+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7d306e32-afc8-4f8d-8fc2-66f582228a4a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7d306e32-afc8-4f8d-8fc2-66f582228a4a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:44:51.1072138+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:51.1072442+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:51.1605247+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.2503ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.2503,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:44:51.1606331+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.4363ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4363,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S2 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S2", "S4, S9, S8, S1, S...") (21.8s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5f9d3be7-cf6b-4c23-a267-96b888394044" testId="5aabf67a-c765-73f2-650c-72e1d01f86cd" testName="ErrorResponseCodesFromUAS (501,,)" computerName="ip-10-130-163-65" duration="00:00:02.0278027" startTime="2025-09-12T15:49:16.2478542+12:00" endTime="2025-09-12T15:49:18.2758832+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5f9d3be7-cf6b-4c23-a267-96b888394044">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:16.2483445+12:00","LogLevel":"Information","Message":"Starting Test Execution: Error response codes from UAS:[\"[ErrorCode, 501]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Error response codes from UAS","scenarioInfo.Arguments":["[ErrorCode, 501]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:16.2516684+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_d082dd05-8386-4744-968b-1c59fe80c4ca for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_d082dd05-8386-4744-968b-1c59fe80c4ca","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:16.7505386+12:00","LogLevel":"Information","Message":"Successfully created map UASError_501_0b721dae-eb63-4a89-a606-3313854c0b4c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_501_0b721dae-eb63-4a89-a606-3313854c0b4c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:17.2491490+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1434fe0a-6e53-41c5-977f-d6fe01e62400\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"1434fe0a-6e53-41c5-977f-d6fe01e62400\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:17.2492516+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:17.2492785+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:17.7764777+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 527.1714ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":527.1714,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:17.7766177+12:00","LogLevel":"Information","Message":"End processing HTTP request after 527.3772ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":527.3772,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:17.7769132+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"2b86daab28e0407f9b7bf36136a692d8\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:17.775Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"2b86daab28e0407f9b7bf36136a692d8\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:17.775Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be 501
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("501") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f49be7e3-957b-405f-8af2-257a8b183765" testId="a85b161f-8259-4afb-0e80-3d5a01a67f97" testName="FreezeStatus_Successful (Successful None to type 3,none,creditor,ToHoldSpecificCreditBalance,)" computerName="ip-10-130-163-65" duration="00:00:02.0727661" startTime="2025-09-12T15:42:06.8444960+12:00" endTime="2025-09-12T15:42:08.9174898+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f49be7e3-957b-405f-8af2-257a8b183765">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:06.8452422+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Successful:[\"[Description, Successful None to type 3]\",\"[DebtorFieldValue, none]\",\"[WhichAccountFrozen, creditor]\",\"[CreditorFieldValue, ToHoldSpecificCreditBalance]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Successful","scenarioInfo.Arguments":["[Description, Successful None to type 3]","[DebtorFieldValue, none]","[WhichAccountFrozen, creditor]","[CreditorFieldValue, ToHoldSpecificCreditBalance]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:06.8489082+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_237908f5-d1fb-437e-b5a4-00c9b56c0c48 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_237908f5-d1fb-437e-b5a4-00c9b56c0c48","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:07.3566077+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_a82653ea-32f2-4d00-861d-f6e5fc33264d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_a82653ea-32f2-4d00-861d-f6e5fc33264d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:07.8550654+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_e062c08c-7011-4523-86ef-fb3150d66a64 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_e062c08c-7011-4523-86ef-fb3150d66a64","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:08.3539909+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a942a53b-588a-48a4-9b16-722edcede1af\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a942a53b-588a-48a4-9b16-722edcede1af\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:08.3541013+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:08.3541299+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:08.4133064+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 59.14ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.14,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:08.4134078+12:00","LogLevel":"Information","Message":"End processing HTTP request after 59.3238ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":59.3238,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:08.4136389+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"5e96fcd2bf4b4c9dbd04a06fdc1eb965\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:07.852Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:07.852Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"5e96fcd2bf4b4c9dbd04a06fdc1eb965\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:07.852Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:07.852Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "none") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to ToHoldSpecificCreditBalance
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "ToHoldSpecificCre...") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                |         |
  | creditorAccountNumber              |         |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2aff22b3-c913-49cb-bdda-d96e3073d24c" testId="59ce3f63-66a8-7067-8123-30138292516a" testName="PainCorrectlyCreatesTheTransferRefField (Successful Core to Core,Core,Core,TMVToTMV,)" computerName="ip-10-130-163-65" duration="00:00:02.0663913" startTime="2025-09-12T15:48:59.3254003+12:00" endTime="2025-09-12T15:49:01.3919850+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2aff22b3-c913-49cb-bdda-d96e3073d24c">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:48:59.3258011+12:00","LogLevel":"Information","Message":"Starting Test Execution: Pain correctly creates the transfer ref field:[\"[Description, Successful Core to Core]\",\"[DebtorFieldValue, Core]\",\"[CreditorFieldValue, Core]\",\"[TransferRefType, TMVToTMV]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Pain correctly creates the transfer ref field","scenarioInfo.Arguments":["[Description, Successful Core to Core]","[DebtorFieldValue, Core]","[CreditorFieldValue, Core]","[TransferRefType, TMVToTMV]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:48:59.3313096+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9a2beada-2b59-4a00-bb22-e21fe2a9734b for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9a2beada-2b59-4a00-bb22-e21fe2a9734b","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:48:59.8356265+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_69ecfcee-539f-4236-b23c-9c6823f71a52 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_69ecfcee-539f-4236-b23c-9c6823f71a52","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:00.3355618+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b3e5c23f-ffe7-4d33-9444-8f999bb1e26c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b3e5c23f-ffe7-4d33-9444-8f999bb1e26c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:00.8362563+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bc61e63d-4108-412b-b50e-b44fd0ba78e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"bc61e63d-4108-412b-b50e-b44fd0ba78e5\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:00.8363640+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:00.8363891+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:00.8910029+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.5875ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.5875,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:00.8910899+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.7367ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.7367,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:00.8913280+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"019fc812d6d04e04873f3ed6d6dfc39d\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:00.333Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:00.333Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"019fc812d6d04e04873f3ed6d6dfc39d\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:00.333Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:00.333Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:00.8929616+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"debtorAccountSource\": \"TMV\",\n  \"creditorAccountSource\": \"TMV\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","MessageTemplate":"Captured request is:\n{\n  \"debtorAccountSource\": \"TMV\",\n  \"creditorAccountSource\": \"TMV\",\n  \"debtorAccountId\": \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\",\n  \"creditorAccountId\": \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\",\n  \"accessNumber\": \"6652627\",\n  \"amount\": {\n    \"value\": \"1.00\",\n    \"currency\": \"NZD\"\n  },\n  \"debtorAccountNumber\": \"389023066848503\",\n  \"debtorAccountParticulars\": \"string\",\n  \"debtorAccountCode\": \"string\",\n  \"debtorAccountReference\": \"string\",\n  \"creditorAccountNumber\": \"389023066848509\",\n  \"creditorAccountParticulars\": \"string\",\n  \"creditorAccountCode\": \"string\",\n  \"creditorAccountReference\": \"string\"\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "Core") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the outgoing request to Porch contains the correct transferRef for type TMVToTMV
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchContainsTheCorrectTransferRefForType("TMVToTMV") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="86eadc50-755e-4fd8-8e0a-31ad735d4014" testId="e41b2607-ad85-fd8b-b87c-e1668f1f9a98" testName="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S9,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" computerName="ip-10-130-163-65" duration="00:00:22.3582484" startTime="2025-09-12T15:43:22.2854168+12:00" endTime="2025-09-12T15:43:44.6441897+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="86eadc50-755e-4fd8-8e0a-31ad735d4014">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:43:22.2861702+12:00","LogLevel":"Information","Message":"Starting Test Execution: Product facility types - transfer to/from eligible immediate combos:[\"[DebtorProductType, S9]\",\"[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Product facility types - transfer to/from eligible immediate combos","scenarioInfo.Arguments":["[DebtorProductType, S9]","[CreditorProductTypes, S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:22.2963243+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5e507726-b8dc-4fcc-b271-5d9c43f09a24 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5e507726-b8dc-4fcc-b271-5d9c43f09a24","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:22.7956784+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_c3e53847-1020-45a0-99cc-96f1bdcda6c8 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_c3e53847-1020-45a0-99cc-96f1bdcda6c8","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:23.2951770+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ab6b77ea-aef2-4e57-9851-5493ecb4b747 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ab6b77ea-aef2-4e57-9851-5493ecb4b747","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:23.7938258+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2fdb574a-4d79-4274-b8f2-c9241b276cb2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2fdb574a-4d79-4274-b8f2-c9241b276cb2\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:23.7939482+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:23.7939784+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:23.8482684+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2623ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2623,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:23.8483601+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.4274ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4274,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:23.8533394+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_c51fc788-3d80-4eb1-84b6-bda6b9d56ca9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_c51fc788-3d80-4eb1-84b6-bda6b9d56ca9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:24.3544034+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_84b86dff-9305-4297-b1a4-d79faa457952 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_84b86dff-9305-4297-b1a4-d79faa457952","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:24.8556414+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_1604156c-ec19-499f-a940-7604aada5e78 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_1604156c-ec19-499f-a940-7604aada5e78","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:25.3545086+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"44faafad-f684-472d-a223-f2cb9605c887\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"44faafad-f684-472d-a223-f2cb9605c887\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:25.3546256+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:25.3546521+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:25.4087467+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.0693ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0693,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:25.4088635+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.2553ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2553,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:25.4136156+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_4c563a35-1b49-449f-b1a6-1c2519d8832d for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_4c563a35-1b49-449f-b1a6-1c2519d8832d","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:25.9143121+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3a41f46d-cb15-4f9e-a9a7-444c9afc2eb6 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3a41f46d-cb15-4f9e-a9a7-444c9afc2eb6","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:26.4158487+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_ecd517e8-cea6-47d3-ab37-d8fb1126e605 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_ecd517e8-cea6-47d3-ab37-d8fb1126e605","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:26.9132501+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6c1ade1b-db03-4ad2-9cce-dfd304e7de22\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6c1ade1b-db03-4ad2-9cce-dfd304e7de22\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:26.9133696+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:26.9133966+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:26.9715103+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.0868ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.0868,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:26.9716142+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.2582ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.2582,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:26.9772698+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_1bad3420-04ce-46f8-b15c-32389fed33cf for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_1bad3420-04ce-46f8-b15c-32389fed33cf","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:27.4790261+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f1071cb5-fa80-415a-9ca4-b987edfb616c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f1071cb5-fa80-415a-9ca4-b987edfb616c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:27.9782025+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0a0c91b1-f2db-4e8c-a790-456b7a35a6dc for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0a0c91b1-f2db-4e8c-a790-456b7a35a6dc","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:28.4771738+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"883b0722-b556-43dd-862c-e980d9cd3247\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"883b0722-b556-43dd-862c-e980d9cd3247\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:28.4772955+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:28.4773262+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:28.5293845+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.0307ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.0307,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:28.5294831+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.2053ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.2053,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:28.5345814+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f5f735a8-b4ce-4014-acbc-92baaeff9acd for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f5f735a8-b4ce-4014-acbc-92baaeff9acd","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:29.0356280+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_690946d6-3a90-49ab-be3f-f104be4350ab for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_690946d6-3a90-49ab-be3f-f104be4350ab","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:29.5372391+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_5259f270-d141-44d2-84bc-db42edd000b2 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_5259f270-d141-44d2-84bc-db42edd000b2","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:30.0362661+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6e1ebc13-7ea8-493c-ac0c-74b986c0b1b4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6e1ebc13-7ea8-493c-ac0c-74b986c0b1b4\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:30.0363850+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:30.0364130+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:30.0901858+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.7444ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.7444,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:30.0902777+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.9097ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.9097,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:30.0951048+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7225e4ca-a70a-4b22-858c-686201e5c1cb for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7225e4ca-a70a-4b22-858c-686201e5c1cb","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:30.5949095+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f38d11ec-604d-4628-94c6-90268f4346f0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f38d11ec-604d-4628-94c6-90268f4346f0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:31.0945054+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_4fd96882-1d86-482e-97b4-2849aca6f608 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_4fd96882-1d86-482e-97b4-2849aca6f608","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:31.5954250+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8891a55b-f4ca-4170-a2b7-73e4e14371ed\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"8891a55b-f4ca-4170-a2b7-73e4e14371ed\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:31.5955364+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:31.5955609+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:31.6496052+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.0195ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.0195,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:31.6497204+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.1987ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.1987,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:31.6546232+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_9b98f0f5-faf5-4dd1-8ff4-862ea2acbf08 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_9b98f0f5-faf5-4dd1-8ff4-862ea2acbf08","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:32.1575867+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_b4872d70-bb23-4d4c-9efc-24a1e5275767 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_b4872d70-bb23-4d4c-9efc-24a1e5275767","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:32.6610830+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_99605a49-1db0-4530-8092-6319fdb0dfdb for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_99605a49-1db0-4530-8092-6319fdb0dfdb","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:33.1577366+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6fa62fd0-0768-4019-85c4-34d855db3a1f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6fa62fd0-0768-4019-85c4-34d855db3a1f\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:33.1578631+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:33.1578928+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:33.2211595+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 63.2398ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":63.2398,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:33.2212557+12:00","LogLevel":"Information","Message":"End processing HTTP request after 63.4093ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":63.4093,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:33.2266450+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_dfdd2da6-2e8a-4097-8827-9f6a8029a1d1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_dfdd2da6-2e8a-4097-8827-9f6a8029a1d1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:33.7273369+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ca0c7819-0d0b-45c1-bd03-14b2462d335c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ca0c7819-0d0b-45c1-bd03-14b2462d335c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:34.2263187+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a3b6dcc0-001d-417f-ab55-f76b59bf8846 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a3b6dcc0-001d-417f-ab55-f76b59bf8846","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:34.7273252+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7bf9fbcc-f70e-45fd-9810-526fe4791171\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"7bf9fbcc-f70e-45fd-9810-526fe4791171\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:34.7274670+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:34.7274947+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:34.7859055+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 58.3841ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.3841,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:34.7859935+12:00","LogLevel":"Information","Message":"End processing HTTP request after 58.5445ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.5445,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:34.7905820+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_60f000d1-63d3-436b-ac5d-09c879f29f0f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_60f000d1-63d3-436b-ac5d-09c879f29f0f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:35.2913358+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_0bf0f5f2-55f4-449a-b423-74eda23a5365 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_0bf0f5f2-55f4-449a-b423-74eda23a5365","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:35.7908064+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_2b90e883-72c6-4435-b992-c9a5584ccdf7 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_2b90e883-72c6-4435-b992-c9a5584ccdf7","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:36.2894623+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c6659ad1-0daf-48a3-a11d-a3775d05225b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c6659ad1-0daf-48a3-a11d-a3775d05225b\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:36.2895847+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:36.2896142+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:36.3432931+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.6479ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6479,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:36.3434627+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.8945ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.8945,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:36.3489985+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_22c8c444-5999-4429-bfe3-4dc3bc693ae0 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_22c8c444-5999-4429-bfe3-4dc3bc693ae0","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:36.8516470+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_a83e21b8-95e0-41b3-a252-1c8106224ae3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_a83e21b8-95e0-41b3-a252-1c8106224ae3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:37.3512720+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_966af795-7b58-414d-8bea-2647c113b6f5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_966af795-7b58-414d-8bea-2647c113b6f5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:37.8483018+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b9ed65cf-8c6e-429a-a330-b4872b3b682e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b9ed65cf-8c6e-429a-a330-b4872b3b682e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:37.8484284+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:37.8484572+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:37.9012323+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 52.744ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.744,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:37.9013461+12:00","LogLevel":"Information","Message":"End processing HTTP request after 52.9346ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":52.9346,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:37.9067789+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_0ed82034-d0d7-4448-9b67-aac5e7b6c9ae for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_0ed82034-d0d7-4448-9b67-aac5e7b6c9ae","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:38.4077400+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_ed890900-448c-4597-a862-8ca6c8f81d10 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_ed890900-448c-4597-a862-8ca6c8f81d10","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:38.9065973+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b8e93cf3-58f0-413c-967b-c2f5dba2d9ba for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b8e93cf3-58f0-413c-967b-c2f5dba2d9ba","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:39.4056383+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"12680817-503a-4fc3-9983-49d8bba19828\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"12680817-503a-4fc3-9983-49d8bba19828\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:39.4057732+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:39.4058185+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:39.4593798+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.533ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.533,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:39.4594985+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.745ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.745,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:39.4648255+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7c949c09-9315-4e7f-8012-38f106411920 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7c949c09-9315-4e7f-8012-38f106411920","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:39.9696962+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_e747bfa3-1002-48de-a539-fd1f243a23b0 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_e747bfa3-1002-48de-a539-fd1f243a23b0","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:40.4707929+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_0cf91e8e-3fc1-43b8-a636-40c12352e3e4 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_0cf91e8e-3fc1-43b8-a636-40c12352e3e4","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:40.9678209+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f4f0287a-71c1-4a9d-8ecc-bb94cc5f66e0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f4f0287a-71c1-4a9d-8ecc-bb94cc5f66e0\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:40.9679378+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:40.9679639+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:41.0214881+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 53.4956ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.4956,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:41.0216079+12:00","LogLevel":"Information","Message":"End processing HTTP request after 53.6854ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":53.6854,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:41.0264296+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_5c8e6e43-0a07-447e-9fde-3c5fde7216cc for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_5c8e6e43-0a07-447e-9fde-3c5fde7216cc","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:41.5272422+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_afefe09d-2343-4216-bc6c-c92180b0bc22 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_afefe09d-2343-4216-bc6c-c92180b0bc22","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:42.0270309+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_59ab3784-378c-4591-9a59-78bf556b690b for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_59ab3784-378c-4591-9a59-78bf556b690b","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:42.5257005+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4293bdad-ef9b-48fe-a864-a1c234330946\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"4293bdad-ef9b-48fe-a864-a1c234330946\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:42.5258137+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:42.5258385+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:42.5858909+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 60.0275ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.0275,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:42.5859955+12:00","LogLevel":"Information","Message":"End processing HTTP request after 60.1949ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.1949,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:42.5915099+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_eee7736e-22ff-4537-9c73-24b64e6fdc66 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_eee7736e-22ff-4537-9c73-24b64e6fdc66","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:43.0912965+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_eaa7dc28-932a-4488-a9b1-f83a8df0b29e for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_eaa7dc28-932a-4488-a9b1-f83a8df0b29e","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:43.5902057+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_cf6f6dc8-e8bc-4fc9-a7db-0ed3426aa8e5 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_cf6f6dc8-e8bc-4fc9-a7db-0ed3426aa8e5","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:43:44.0892356+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6c94ef5c-906f-46e6-9400-226567e6b72e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"6c94ef5c-906f-46e6-9400-226567e6b72e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:43:44.0893902+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:44.0894365+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:44.1437935+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.3205ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3205,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:43:44.1438902+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.5216ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.5216,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}



TestContext Messages:
When a S9 account attempts a transfer to S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40 accounts
-&gt; done: PainMockedStepDefinitions.WhenAllCreditorProductTypesAreTransferredToFromTheDebtorProductType("S9", "S4, S9, S8, S1, S...") (21.9s)
Then all product facility transfer combos are successful
-&gt; done: PainMockedStepDefinitions.ThenAllProductFacilityTransferCombosAreSuccessful() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7a9dfd5b-d6bf-4a54-bc32-4e0554f28aa5" testId="53e0ff2d-fd3b-5745-563d-ac96241e8a89" testName="UASReturnsUnusableResponses (creditor only,Debtor account not found.,)" computerName="ip-10-130-163-65" duration="00:00:01.5245235" startTime="2025-09-12T15:49:23.3552756+12:00" endTime="2025-09-12T15:49:24.8800415+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7a9dfd5b-d6bf-4a54-bc32-4e0554f28aa5">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:23.3557751+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS returns unusable responses:[\"[ResponseType, creditor only]\",\"[ErrorMessage, Debtor account not found.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS returns unusable responses","scenarioInfo.Arguments":["[ResponseType, creditor only]","[ErrorMessage, Debtor account not found.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:23.3592220+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_6e98216e-3bd6-4334-b248-47e5b5fa757c for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_6e98216e-3bd6-4334-b248-47e5b5fa757c","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:23.8627514+12:00","LogLevel":"Information","Message":"Successfully created map UASSuccess_00026102-0ef8-483d-9029-285b0a8890c7 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASSuccess_00026102-0ef8-483d-9029-285b0a8890c7","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:24.3604249+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9ff288a2-4887-42eb-9a6b-620fcb075136\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"9ff288a2-4887-42eb-9a6b-620fcb075136\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:24.3605270+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:24.3605556+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:24.3800958+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 19.5123ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.5123,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:24.3802147+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.6992ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.6992,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:24.3804796+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"e14f1b3d738f4b1ab305680d7f1095d4\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:24.379Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Debtor account not found.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"e14f1b3d738f4b1ab305680d7f1095d4\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:24.379Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Debtor account not found.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be creditor only
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("creditor only") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                     |
  | __typename                         | UnsuccessfulPayment       |
  | debtorAccountNumber                |                           |
  | creditorAccountNumber              |                           |
  | paymentId                          | *                         |
  | paymentInstructionCreationDateTime | *                         |
  | initiatingAccessNumber             | *                         |
  | debtorAccountCode                  | *                         |
  | debtorAccountParticulars           | *                         |
  | debtorAccountReference             | *                         |
  | creditorAccountCode                | *                         |
  | creditorAccountParticulars         | *                         |
  | creditorAccountReference           | *                         |
  | amount                             | *                         |
  | code                               | ACCOUNT_DETECTION_FAILED  |
  | message                            | Debtor account not found. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="342989ca-f85c-431a-be64-5a6c2d3497ba" testId="6aa8db1c-0bba-18f7-88e5-18040294e142" testName="FreezeStatus_Unsuccessful (Unsuccessful None to type 1,none,FreezeAgainstAllTellerAction,creditor,Creditor account has been frozen.,)" computerName="ip-10-130-163-65" duration="00:00:02.0359747" startTime="2025-09-12T15:41:58.6822599+12:00" endTime="2025-09-12T15:42:00.7185421+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="342989ca-f85c-431a-be64-5a6c2d3497ba">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:58.6842474+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Unsuccessful:[\"[Description, Unsuccessful None to type 1]\",\"[DebtorFieldValue, none]\",\"[CreditorFieldValue, FreezeAgainstAllTellerAction]\",\"[WhichAccountFrozen, creditor]\",\"[ErrorMessage, Creditor account has been frozen.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Unsuccessful","scenarioInfo.Arguments":["[Description, Unsuccessful None to type 1]","[DebtorFieldValue, none]","[CreditorFieldValue, FreezeAgainstAllTellerAction]","[WhichAccountFrozen, creditor]","[ErrorMessage, Creditor account has been frozen.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:58.6908036+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8ca34ce4-09b6-4735-8370-a93a4f831268 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8ca34ce4-09b6-4735-8370-a93a4f831268","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:59.1976676+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_6324cb7d-3216-4644-b224-1f36db55b26f for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_6324cb7d-3216-4644-b224-1f36db55b26f","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:59.6971477+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_661cd893-a36e-4cff-b8dc-92cb991a4c1e for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_661cd893-a36e-4cff-b8dc-92cb991a4c1e","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:00.1975571+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a479a433-528a-40b1-871c-fd1a82409db3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"a479a433-528a-40b1-871c-fd1a82409db3\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:00.1976691+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:00.1976978+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:00.2179904+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 20.2648ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":20.2648,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:00.2180775+12:00","LogLevel":"Information","Message":"End processing HTTP request after 20.4244ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":20.4244,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:00.2182981+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"847b19a29a88427ab30376815de27932\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:00.217Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"FROZEN_ACCOUNT\",\"message\":\"Creditor account has been frozen.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"847b19a29a88427ab30376815de27932\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:00.217Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"FROZEN_ACCOUNT\",\"message\":\"Creditor account has been frozen.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "none") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to FreezeAgainstAllTellerAction
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "FreezeAgainstAllT...") (0.0s)
And the UAS mock creditor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                             |
  | __typename                         | UnsuccessfulPayment               |
  | debtorAccountNumber                |                                   |
  | creditorAccountNumber              |                                   |
  | paymentId                          | *                                 |
  | paymentInstructionCreationDateTime | *                                 |
  | initiatingAccessNumber             | *                                 |
  | debtorAccountCode                  | *                                 |
  | debtorAccountParticulars           | *                                 |
  | debtorAccountReference             | *                                 |
  | creditorAccountCode                | *                                 |
  | creditorAccountParticulars         | *                                 |
  | creditorAccountReference           | *                                 |
  | amount                             | *                                 |
  | code                               | FROZEN_ACCOUNT                    |
  | message                            | Creditor account has been frozen. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="54e35234-e41e-47b6-b702-f95e0c5a04ef" testId="2028f74c-f524-2a70-2287-4b5ebae70de0" testName="SuccessfulOPAAccountNumberTransformations (Legacy to Legacy,LegacyCore,LegacyCore,9023066848503,9023066848509,)" computerName="ip-10-130-163-65" duration="00:00:02.0655067" startTime="2025-09-12T15:49:05.0063539+12:00" endTime="2025-09-12T15:49:07.0720282+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="54e35234-e41e-47b6-b702-f95e0c5a04ef">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:05.0079483+12:00","LogLevel":"Information","Message":"Starting Test Execution: Successful OPA account number transformations:[\"[Description, Legacy to Legacy]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, LegacyCore]\",\"[ExpectedDebtor, 9023066848503]\",\"[ExpectedCreditor, 9023066848509]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Successful OPA account number transformations","scenarioInfo.Arguments":["[Description, Legacy to Legacy]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, LegacyCore]","[ExpectedDebtor, 9023066848503]","[ExpectedCreditor, 9023066848509]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:05.0147980+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_f6ed6e1d-3f0e-4591-b2c9-83fde556a58c for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_f6ed6e1d-3f0e-4591-b2c9-83fde556a58c","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:05.5144961+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_9e898ee1-668e-46e9-8c36-d3e24465b8bc for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_9e898ee1-668e-46e9-8c36-d3e24465b8bc","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:06.0158096+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_b47722ae-ca67-4041-bf2f-4efe334e23be for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_b47722ae-ca67-4041-bf2f-4efe334e23be","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:06.5153723+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2d812ecf-bb73-432f-bf08-988c0690c4bf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"2d812ecf-bb73-432f-bf08-988c0690c4bf\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:06.5154756+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:06.5155021+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:06.5697777+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 54.2493ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.2493,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:06.5698920+12:00","LogLevel":"Information","Message":"End processing HTTP request after 54.4273ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.4273,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:06.5701895+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"52ce001c4a734268851dae0a0a8757ac\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:06.013Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:06.013Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"52ce001c4a734268851dae0a0a8757ac\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:06.013Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:49:06.013Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:06.5727180+12:00","LogLevel":"Information","Message":"Captured request is:\n{\n  \"input\": {\n    \"action\": \"transfer:Initiate\",\n    \"fromAccounts\": [\n      \"9023066848503\"\n    ],\n    \"toAccounts\": [\n      \"9023066848509\"\n    ]\n  }\n}","MessageTemplate":"Captured request is:\n{\n  \"input\": {\n    \"action\": \"transfer:Initiate\",\n    \"fromAccounts\": [\n      \"9023066848503\"\n    ],\n    \"toAccounts\": [\n      \"9023066848509\"\n    ]\n  }\n}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 3 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(3) (0.0s)
And the outgoing request to OPA contains the fields:
  --- table step argument ---
  | Field                   | Value         |
  | $.input.fromAccounts[0] | 9023066848503 |
  | $.input.toAccounts[0]   | 9023066848509 |
-&gt; done: PainMockedStepDefinitions.ThenTheOutgoingRequestToPorchHasTheFieldValueOf("OPA", &lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bd446a00-b3da-4210-92fc-c5fc8174b6d6" testId="07f44015-8966-38a3-5337-ff7f5881337a" testName="UASRetriesForAllowedResponses (502,,)" computerName="ip-10-130-163-65" duration="00:00:02.5968997" startTime="2025-09-12T15:40:25.8162631+12:00" endTime="2025-09-12T15:40:28.4134907+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bd446a00-b3da-4210-92fc-c5fc8174b6d6">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:25.8171944+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS retries for allowed responses:[\"[ErrorCode, 502]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 502]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:25.8224074+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_93f23e4b-1e5b-4aa0-af9d-84395fd86393 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_93f23e4b-1e5b-4aa0-af9d-84395fd86393","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:26.3302122+12:00","LogLevel":"Information","Message":"Successfully created map UAS_1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS_1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:26.3318476+12:00","LogLevel":"Information","Message":"Successfully created map UAS for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:26.8309260+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_882f2ecf-5a48-4467-88dd-7d588b19f917 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_882f2ecf-5a48-4467-88dd-7d588b19f917","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:27.3314003+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"20453081-556f-4a2c-b8f1-9e052f8a7439\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"20453081-556f-4a2c-b8f1-9e052f8a7439\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:27.3315649+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:27.3316008+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:27.9060019+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 574.3487ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":574.3487,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:27.9061010+12:00","LogLevel":"Information","Message":"End processing HTTP request after 574.5622ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":574.5622,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:27.9066255+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"dedcefea91bf4b1d88e22a01d35c5de1\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:26.828Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:26.828Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"dedcefea91bf4b1d88e22a01d35c5de1\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:26.828Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:26.828Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will return 502 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillReturnThenSuccessful("502") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "UAS") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ac3a016c-d987-4c51-bf10-0b2adbb92b2d" testId="caa2254a-852e-8b49-14df-5fc9678011b9" testName="FreezeStatus_Successful (Successful type 6 to none,FreezeAllDishandUnauthorisedOdFees,debtor,none,)" computerName="ip-10-130-163-65" duration="00:00:02.0829868" startTime="2025-09-12T15:42:13.0571359+12:00" endTime="2025-09-12T15:42:15.1403753+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac3a016c-d987-4c51-bf10-0b2adbb92b2d">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:42:13.0576039+12:00","LogLevel":"Information","Message":"Starting Test Execution: Freeze status - Successful:[\"[Description, Successful type 6 to none]\",\"[DebtorFieldValue, FreezeAllDishandUnauthorisedOdFees]\",\"[WhichAccountFrozen, debtor]\",\"[CreditorFieldValue, none]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Freeze status - Successful","scenarioInfo.Arguments":["[Description, Successful type 6 to none]","[DebtorFieldValue, FreezeAllDishandUnauthorisedOdFees]","[WhichAccountFrozen, debtor]","[CreditorFieldValue, none]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:13.0632674+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_8bcea1f1-64f5-41c0-bf00-df55b2196536 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_8bcea1f1-64f5-41c0-bf00-df55b2196536","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:13.5662333+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_8548a9c4-1b8e-4bef-b73f-541f267ade29 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_8548a9c4-1b8e-4bef-b73f-541f267ade29","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:14.0669470+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_d24dce22-02b7-4eaa-b5fc-575922d11b3c for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_d24dce22-02b7-4eaa-b5fc-575922d11b3c","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:42:14.5636280+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"518ff500-ffde-442a-a2eb-ab05c30b5b61\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"518ff500-ffde-442a-a2eb-ab05c30b5b61\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:42:14.5637288+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:14.5637624+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:14.6384409+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 74.6444ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":74.6444,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:14.6385501+12:00","LogLevel":"Information","Message":"End processing HTTP request after 74.8353ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":74.8353,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:42:14.6387682+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"d3583bc4fea44921934338194972c24b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:14.064Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:14.064Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"d3583bc4fea44921934338194972c24b\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:42:14.064Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:42:14.064Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field AccountFreezeType set to FreezeAllDishandUnauthorisedOdFees
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountFreezeType", "FreezeAllDishandU...") (0.0s)
And the UAS mock creditor account will have field AccountFreezeType set to none
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "AccountFreezeType", "none") (0.0s)
And the UAS mock debtor account will have field AccountStatus set to BlockedFinancial
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "AccountStatus", "BlockedFinancial") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.1s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                |         |
  | creditorAccountNumber              |         |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="43c4dfcf-72aa-48eb-a275-220e50b771d5" testId="f4a61d8c-2861-ff61-3976-fd230042120d" testName="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Legacy to ForeignCurrency,LegacyCore,ForeignCurrency,Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" computerName="ip-10-130-163-65" duration="00:00:02.0230015" startTime="2025-09-12T15:41:24.1286895+12:00" endTime="2025-09-12T15:41:26.1520431+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="43c4dfcf-72aa-48eb-a275-220e50b771d5">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:24.1293446+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - invalid paths:[\"[Description, Unsuccessful Legacy to ForeignCurrency]\",\"[DebtorFieldValue, LegacyCore]\",\"[CreditorFieldValue, ForeignCurrency]\",\"[ErrorMessage, Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - invalid paths","scenarioInfo.Arguments":["[Description, Unsuccessful Legacy to ForeignCurrency]","[DebtorFieldValue, LegacyCore]","[CreditorFieldValue, ForeignCurrency]","[ErrorMessage, Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:24.1336705+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_87f39bc2-f48f-4752-b288-ae8eac8be7f4 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_87f39bc2-f48f-4752-b288-ae8eac8be7f4","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:24.6396878+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_15aff7db-0a5f-4094-a4e6-4076f03758de for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_15aff7db-0a5f-4094-a4e6-4076f03758de","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:25.1370451+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_a00ef87d-d64f-457a-b9a7-42ee533ba1c1 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_a00ef87d-d64f-457a-b9a7-42ee533ba1c1","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:25.6378746+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"95cc9907-9e74-45f4-909e-65b9c995f45e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"95cc9907-9e74-45f4-909e-65b9c995f45e\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:25.6379835+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:25.6380095+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:25.6526543+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.6198ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.6198,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:25.6527366+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.7671ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.7671,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:25.6530744+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"16c44c414c4040cfbbac53f63b034eb9\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:25.651Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"16c44c414c4040cfbbac53f63b034eb9\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:25.651Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to LegacyCore
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "LegacyCore") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to ForeignCurrency
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "ForeignCurrency") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                                                                                  |
  | __typename                         | UnsuccessfulPayment                                                                                    |
  | debtorAccountNumber                |                                                                                                        |
  | creditorAccountNumber              |                                                                                                        |
  | paymentId                          | *                                                                                                      |
  | paymentInstructionCreationDateTime | *                                                                                                      |
  | initiatingAccessNumber             | *                                                                                                      |
  | debtorAccountCode                  | *                                                                                                      |
  | debtorAccountParticulars           | *                                                                                                      |
  | debtorAccountReference             | *                                                                                                      |
  | creditorAccountCode                | *                                                                                                      |
  | creditorAccountParticulars         | *                                                                                                      |
  | creditorAccountReference           | *                                                                                                      |
  | amount                             | *                                                                                                      |
  | code                               | OPERATION_INVALID_FOR_ACCOUNT                                                                          |
  | message                            | Creditor account has invalid origination system. Transaction is not allowed for the selected accounts. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b0686c91-33d2-48bb-a8c0-bd183a17cb4a" testId="1020ce5c-f682-b5ff-646e-0cf7940d4097" testName="InvalidJWTTokenTests (Missing client_id,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.GHzJZn4eVv9x_WanKRWnYFT6ZSHIXovOuXl3kLgIZyF9HfRiAcykeBXkOIuM4gi0fkG8C_iMoUZLiEPlFGlW0A,)" computerName="ip-10-130-163-65" duration="00:00:00.5465772" startTime="2025-09-12T15:39:30.5184214+12:00" endTime="2025-09-12T15:39:31.0654597+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b0686c91-33d2-48bb-a8c0-bd183a17cb4a">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:39:30.5231910+12:00","LogLevel":"Information","Message":"Starting Test Execution: Invalid JWT token tests:[\"[Description, Missing client_id]\",\"[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.GHzJZn4eVv9x_WanKRWnYFT6ZSHIXovOuXl3kLgIZyF9HfRiAcykeBXkOIuM4gi0fkG8C_iMoUZLiEPlFGlW0A]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Invalid JWT token tests","scenarioInfo.Arguments":["[Description, Missing client_id]","[JWTToken, eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.GHzJZn4eVv9x_WanKRWnYFT6ZSHIXovOuXl3kLgIZyF9HfRiAcykeBXkOIuM4gi0fkG8C_iMoUZLiEPlFGlW0A]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:30.5376162+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c30d05e2-4868-4766-967c-4aca4f7ed2c9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"c30d05e2-4868-4766-967c-4aca4f7ed2c9\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:39:30.5384857+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:30.5386611+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:30.5575056+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 18.7227ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.7227,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:30.5577065+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.7453ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.7453,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:39:30.5615551+12:00","LogLevel":"Information","Message":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","MessageTemplate":"{\"errors\":[{\"message\":\"Unknown error occurred.\",\"locations\":[{\"line\":1,\"column\":29}],\"path\":[\"initiateTransfer\"],\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"}}],\"data\":null}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the JWT token will be eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.GHzJZn4eVv9x_WanKRWnYFT6ZSHIXovOuXl3kLgIZyF9HfRiAcykeBXkOIuM4gi0fkG8C_iMoUZLiEPlFGlW0A
-&gt; done: PainMockedStepDefinitions.GivenTheJwtTokenWillBe("eyJ0eXAiOiJKV1QiL...") (0.0s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the error response contains the fields:
  --- table step argument ---
  | Field                       | Value                   |
  | $.errors[0].message         | Unknown error occurred. |
  | $.errors[0].path[0]         | initiateTransfer        |
  | $.errors[0].extensions.code | INTERNAL_SERVER_ERROR   |
-&gt; done: PainMockedStepDefinitions.ThenTheErrorResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1ff619b2-5998-4b74-818b-4957afc99b9c" testId="c34d3573-6de0-8af6-638d-ba6d82d33ac3" testName="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful CreditCard to Core,CreditCard,Core,Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" computerName="ip-10-130-163-65" duration="00:00:02.0236231" startTime="2025-09-12T15:41:26.1524049+12:00" endTime="2025-09-12T15:41:28.1762478+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1ff619b2-5998-4b74-818b-4957afc99b9c">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:41:26.1528302+12:00","LogLevel":"Information","Message":"Starting Test Execution: Account type rules for transfers - invalid paths:[\"[Description, Unsuccessful CreditCard to Core]\",\"[DebtorFieldValue, CreditCard]\",\"[CreditorFieldValue, Core]\",\"[ErrorMessage, Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Account type rules for transfers - invalid paths","scenarioInfo.Arguments":["[Description, Unsuccessful CreditCard to Core]","[DebtorFieldValue, CreditCard]","[CreditorFieldValue, Core]","[ErrorMessage, Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:26.1571257+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_62fd3ebe-8f90-4d7a-acd0-88cba1b80e39 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_62fd3ebe-8f90-4d7a-acd0-88cba1b80e39","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:26.6586407+12:00","LogLevel":"Information","Message":"Successfully created map UASModifiedFields_7c5d4485-52f1-4643-9490-7f957b80bb64 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASModifiedFields_7c5d4485-52f1-4643-9490-7f957b80bb64","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:27.1563934+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_20ec89af-e17c-4d67-8c42-3ff05b61b1d7 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_20ec89af-e17c-4d67-8c42-3ff05b61b1d7","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:41:27.6568095+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"366d23c0-c493-4846-a704-2aac06af6a0a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"366d23c0-c493-4846-a704-2aac06af6a0a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:41:27.6569334+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:27.6569663+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:27.6758662+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 18.8718ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":18.8718,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:27.6759747+12:00","LogLevel":"Information","Message":"End processing HTTP request after 19.0586ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":19.0586,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:41:27.6764395+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f0f4b1d982914ec7ada6ea325807e7aa\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:27.675Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"f0f4b1d982914ec7ada6ea325807e7aa\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:41:27.675Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"OPERATION_INVALID_FOR_ACCOUNT\",\"message\":\"Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock debtor account will have field OriginationSystem set to CreditCard
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("debtor", "OriginationSystem", "CreditCard") (0.0s)
And the UAS mock creditor account will have field OriginationSystem set to Core
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockWillHaveFieldSetTo("creditor", "OriginationSystem", "Core") (0.0s)
And the UAS mock response is generated from the UAS accounts
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseIsGeneratedFromTheUasAccounts() (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                                                                                |
  | __typename                         | UnsuccessfulPayment                                                                                  |
  | debtorAccountNumber                |                                                                                                      |
  | creditorAccountNumber              |                                                                                                      |
  | paymentId                          | *                                                                                                    |
  | paymentInstructionCreationDateTime | *                                                                                                    |
  | initiatingAccessNumber             | *                                                                                                    |
  | debtorAccountCode                  | *                                                                                                    |
  | debtorAccountParticulars           | *                                                                                                    |
  | debtorAccountReference             | *                                                                                                    |
  | creditorAccountCode                | *                                                                                                    |
  | creditorAccountParticulars         | *                                                                                                    |
  | creditorAccountReference           | *                                                                                                    |
  | amount                             | *                                                                                                    |
  | code                               | OPERATION_INVALID_FOR_ACCOUNT                                                                        |
  | message                            | Debtor account has invalid origination system. Transaction is not allowed for the selected accounts. |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e785e3e8-4dde-462c-a2c4-a8ad3e6e37c0" testId="31455632-4ade-dbb3-c7c6-04173c496df7" testName="UASRetriesForAllowedResponses (500,,)" computerName="ip-10-130-163-65" duration="00:00:02.5892883" startTime="2025-09-12T15:40:23.2262234+12:00" endTime="2025-09-12T15:40:25.8158098+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e785e3e8-4dde-462c-a2c4-a8ad3e6e37c0">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:40:23.2278331+12:00","LogLevel":"Information","Message":"Starting Test Execution: UAS retries for allowed responses:[\"[ErrorCode, 500]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"UAS retries for allowed responses","scenarioInfo.Arguments":["[ErrorCode, 500]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:23.2324860+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_f9e80b1c-475b-4247-a481-c35435c5485d for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_f9e80b1c-475b-4247-a481-c35435c5485d","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:23.7402646+12:00","LogLevel":"Information","Message":"Successfully created map UAS_1 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS_1","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:23.7405165+12:00","LogLevel":"Information","Message":"Successfully created map UAS for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UAS","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:24.2412206+12:00","LogLevel":"Information","Message":"Successfully created map POrchTransferSuccess_686f7313-0c02-4f86-b650-cc08d79bb253 for /api/v1/transfer","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"POrchTransferSuccess_686f7313-0c02-4f86-b650-cc08d79bb253","Endpoint":"/api/v1/transfer","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:40:24.7405286+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b2e411f1-02f0-41e2-bee5-21fdd77a798a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"b2e411f1-02f0-41e2-bee5-21fdd77a798a\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:40:24.7407601+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:24.7408339+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:25.3110115+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 570.1102ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":570.1102,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:25.3111555+12:00","LogLevel":"Information","Message":"End processing HTTP request after 570.4177ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":570.4177,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:40:25.3115760+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3c656453124642bdbef367b9d3e05d1d\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:24.237Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:24.237Z\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"389023066848503\",\"creditorAccountNumber\":\"389023066848509\",\"paymentId\":\"3c656453124642bdbef367b9d3e05d1d\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:40:24.237Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"Payment\",\"paymentExecutionDateTime\":\"2025-09-12T03:40:24.237Z\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will return 500 then successful
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillReturnThenSuccessful("500") (0.5s)
And the POrch transfer mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenThePOrchMockResponseWillBe("transfer", "successful") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.6s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the mock has 4 total requests received
-&gt; done: PainMockedStepDefinitions.ThenTheMockHasTotalRequestsReceived(4) (0.0s)
And there are 2 calls to the UAS mock
-&gt; done: PainMockedStepDefinitions.ThenThereAreCallsToTheMock(2, "UAS") (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value   |
  | __typename                         | Payment |
  | debtorAccountNumber                | *       |
  | creditorAccountNumber              | *       |
  | paymentId                          | *       |
  | paymentInstructionCreationDateTime | *       |
  | initiatingAccessNumber             | *       |
  | debtorAccountCode                  | *       |
  | debtorAccountParticulars           | *       |
  | debtorAccountReference             | *       |
  | creditorAccountCode                | *       |
  | creditorAccountParticulars         | *       |
  | creditorAccountReference           | *       |
  | amount                             | *       |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9752f80f-59cb-4072-94f8-5893c09e471d" testId="c3e2b91d-d2bd-fc25-32be-ad8b0d55dff2" testName="ErrorResponseCodesFromUAS (401,,)" computerName="ip-10-130-163-65" duration="00:00:01.5257678" startTime="2025-09-12T15:49:09.1390120+12:00" endTime="2025-09-12T15:49:10.6653805+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9752f80f-59cb-4072-94f8-5893c09e471d">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:09.1416101+12:00","LogLevel":"Information","Message":"Starting Test Execution: Error response codes from UAS:[\"[ErrorCode, 401]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Error response codes from UAS","scenarioInfo.Arguments":["[ErrorCode, 401]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:09.1466174+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_bba12b7f-27c6-4e75-b98c-a4bb0cd95030 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_bba12b7f-27c6-4e75-b98c-a4bb0cd95030","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:09.6472701+12:00","LogLevel":"Information","Message":"Successfully created map UASError_401_59db8f9a-bde3-47fe-91cc-90ca81b4dfce for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_401_59db8f9a-bde3-47fe-91cc-90ca81b4dfce","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:10.1458680+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d88e2627-4571-40af-a484-b88c22f13793\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"d88e2627-4571-40af-a484-b88c22f13793\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:10.1459588+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:10.1459828+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:10.1608031+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 14.7974ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.7974,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:10.1608925+12:00","LogLevel":"Information","Message":"End processing HTTP request after 14.9435ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":14.9435,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:10.1611155+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"a126ae9a5f0244999c4ef68d5b0801b8\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:10.160Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"a126ae9a5f0244999c4ef68d5b0801b8\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:10.160Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be 401
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("401") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.0s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f81b2acb-df5d-45d4-a4c4-39dd3d665792" testId="77bc6f3d-2881-48fd-ac6b-c48eae6e2496" testName="ErrorResponseCodesFromUAS (500,,)" computerName="ip-10-130-163-65" duration="00:00:02.0328956" startTime="2025-09-12T15:49:14.2143293+12:00" endTime="2025-09-12T15:49:16.2474290+12:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f81b2acb-df5d-45d4-a4c4-39dd3d665792">
      <Output>
        <StdOut>{"Timestamp":"2025-09-12T15:49:14.2146671+12:00","LogLevel":"Information","Message":"Starting Test Execution: Error response codes from UAS:[\"[ErrorCode, 500]\"]","MessageTemplate":"Starting Test Execution: {scenarioInfo.Title}:{scenarioInfo.Arguments}","scenarioInfo.Title":"Error response codes from UAS","scenarioInfo.Arguments":["[ErrorCode, 500]"],"SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:14.2178720+12:00","LogLevel":"Information","Message":"Successfully created map OPAsuccessful_3621d300-d877-4c09-b70d-cab11498d1e3 for /v1/data/cap/payments_transfer/assert","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"OPAsuccessful_3621d300-d877-4c09-b70d-cab11498d1e3","Endpoint":"/v1/data/cap/payments_transfer/assert","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:14.7168928+12:00","LogLevel":"Information","Message":"Successfully created map UASError_500_8e48921a-cafd-48a5-b3d6-df05e7698db9 for /graphql","MessageTemplate":"Successfully created map {MappingName} for {Endpoint}","MappingName":"UASError_500_8e48921a-cafd-48a5-b3d6-df05e7698db9","Endpoint":"/graphql","SourceContext":"Kiwibank.CardsAndPayments.Mock.Core.Managers.RemoteMockRequestResponseManager"}
{"Timestamp":"2025-09-12T15:49:15.2178409+12:00","LogLevel":"Information","Message":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f3d77b07-177a-44af-82ff-8d0b5a99b0ea\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","MessageTemplate":"mutation InitiateTransfer { initiateTransfer( idempotencyKey: \"f3d77b07-177a-44af-82ff-8d0b5a99b0ea\" transferDetails: { amount: { value: \"1.00\" currency: NZD } debtorAccountId: \"lc_2ff00be3-5081-4171-8ba6-6f32f66ed70c\" debtorAccountCode: \"string\" debtorAccountParticulars: \"string\" debtorAccountReference: \"string\" creditorAccountId: \"lc_a47b5129-4085-46b6-9f65-baf821fa6b94\" creditorAccountCode: \"string\" creditorAccountParticulars: \"string\" creditorAccountReference: \"string\" } ) { debtorAccountNumber, creditorAccountNumber, paymentId, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountCode, creditorAccountParticulars, creditorAccountReference, __typename, ... on Payment { paymentId, paymentInstructionCreationDateTime, paymentExecutionDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference }, ... on UnsuccessfulPayment { paymentId, code, message, paymentInstructionCreationDateTime, initiatingAccessNumber, amount { value, currency }, debtorAccountNumber, debtorAccountCode, debtorAccountParticulars, debtorAccountReference, creditorAccountNumber, creditorAccountCode, creditorAccountParticulars, creditorAccountReference } } }","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}
{"Timestamp":"2025-09-12T15:49:15.2179426+12:00","LogLevel":"Information","Message":"Start processing HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:15.2179715+12:00","LogLevel":"Information","Message":"Sending HTTP request POST http://localhost:8080/graphql","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:15.7424103+12:00","LogLevel":"Information","Message":"Received HTTP response headers after 524.4073ms - 200","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":524.4073,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.ClientHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:15.7425137+12:00","LogLevel":"Information","Message":"End processing HTTP request after 524.5832ms - 200","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":524.5832,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.Default.LogicalHandler","HttpMethod":"POST","Uri":"http://localhost:8080/graphql","Scope":["HTTP POST http://localhost:8080/graphql"]}
{"Timestamp":"2025-09-12T15:49:15.7428133+12:00","LogLevel":"Information","Message":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"a0a95ebce8a643b0bd1f071ad117bdc1\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:15.741Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}","MessageTemplate":"{\"data\":{\"initiateTransfer\":{\"debtorAccountNumber\":\"\",\"creditorAccountNumber\":\"\",\"paymentId\":\"a0a95ebce8a643b0bd1f071ad117bdc1\",\"paymentInstructionCreationDateTime\":\"2025-09-12T03:49:15.741Z\",\"initiatingAccessNumber\":\"6652627\",\"amount\":{\"value\":\"1.00\",\"currency\":\"NZD\"},\"debtorAccountCode\":\"string\",\"debtorAccountParticulars\":\"string\",\"debtorAccountReference\":\"string\",\"creditorAccountCode\":\"string\",\"creditorAccountParticulars\":\"string\",\"creditorAccountReference\":\"string\",\"__typename\":\"UnsuccessfulPayment\",\"code\":\"ACCOUNT_DETECTION_FAILED\",\"message\":\"Failed to retrieve account information\"}}}","SourceContext":"Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestStepDefinitions.PainMockedStepDefinitions"}



TestContext Messages:
Given an InitiateTransfer mutation is generated
-&gt; done: PainMockedStepDefinitions.GivenAnInitiateTransferMutationIsGenerated() (0.0s)
And the OPA mock response will be successful
-&gt; done: PainMockedStepDefinitions.GivenTheOpaMockResponseWillBe("successful") (0.5s)
And the UAS mock response will be 500
-&gt; done: PainMockedStepDefinitions.GivenTheUasMockResponseWillBeSuccessful("500") (0.5s)
When the request is sent
-&gt; done: PainMockedStepDefinitions.WhenTheRequestIsSent() (0.5s)
Then the response code is 200
-&gt; done: PainMockedStepDefinitions.ThenTheResponseCodeIs(200) (0.0s)
And the response contains the fields:
  --- table step argument ---
  | Field                              | Value                                  |
  | __typename                         | UnsuccessfulPayment                    |
  | debtorAccountNumber                |                                        |
  | creditorAccountNumber              |                                        |
  | paymentId                          | *                                      |
  | paymentInstructionCreationDateTime | *                                      |
  | initiatingAccessNumber             | *                                      |
  | debtorAccountCode                  | *                                      |
  | debtorAccountParticulars           | *                                      |
  | debtorAccountReference             | *                                      |
  | creditorAccountCode                | *                                      |
  | creditorAccountParticulars         | *                                      |
  | creditorAccountReference           | *                                      |
  | amount                             | *                                      |
  | code                               | ACCOUNT_DETECTION_FAILED               |
  | message                            | Failed to retrieve account information |
-&gt; done: PainMockedStepDefinitions.ThenTheResponseContainsTheFields(&lt;table&gt;) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="PainCorrectlyCreatesTheTransferRefField (Successful Legacy to Core,LegacyCore,Core,LegacyToTMV,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="b330ff7e-8af7-1712-c4c5-aa4af30ad36a">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="a516345b-bc25-4c20-99a9-550c21ba2656" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferFieldValidationTestsForPainFeature" name="PainCorrectlyCreatesTheTransferRefField" />
    </UnitTest>
    <UnitTest name="UASRetriesForAllowedResponses (500,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="31455632-4ade-dbb3-c7c6-04173c496df7">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="e785e3e8-4dde-462c-a2c4-a8ad3e6e37c0" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="UASRetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferFromIneligibleImmediateCombos (S1,I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="07d2c399-e88c-6c9c-27db-2be144ec2bf8">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="a2251905-cc14-4ddb-87cf-82c579df21e3" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferFromIneligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="ErrorResponseCodesFromUAS (503,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="43bfdbf4-a99a-58ba-7fe7-372746927f5b">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="fc9db0f2-028d-47f9-affa-a3b86120168c" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="ErrorResponseCodesFromUAS" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_AllowedPaths (Successful Core to Legacy,Core,LegacyCore,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="49616ad6-d2a8-1875-612e-8d6a9518f756">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="2a92f97f-592a-4546-9ba1-0b08265eacd5" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_AllowedPaths" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful CreditCard to Core,CreditCard,Core,Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c34d3573-6de0-8af6-638d-ba6d82d33ac3">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="1ff619b2-5998-4b74-818b-4957afc99b9c" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_InvalidPaths" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Successful (Successful None to type 6,none,creditor,FreezeAllDishandUnauthorisedOdFees,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="d544a4fa-b3c6-1104-d108-0e0d54c610eb">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="c9ff99a4-8409-4282-9302-960a04d946d7" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Successful" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S1,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="88934b0e-c038-0921-ddb1-7be23d7a052c">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="2e518ed7-d0d7-409f-a7fd-a53ddd2e0738" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToIneligibleImmediateCombos (S1,I1, I9, I30, L5, L6, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e58b79f8-933e-4375-36df-e454ae3fdc0d">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="3418920a-d47b-4f84-9e32-a52a4057ba33" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToIneligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="OtherPOrchErrorsDoNotRetry (400,message,Internal Server Error,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="1423a09c-3715-4b13-aaa8-9ddf35feb7a5">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f6abe26b-c0ea-495b-97f8-41cf72da6fee" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OtherPOrchErrorsDoNotRetry" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Opened to Unknown,Opened,Unknown,Creditor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="aeecf30a-fb62-2197-7286-04433123f061">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="bfa1719c-64c2-44b6-ac34-21418b1ecc3a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="OtherPOrchErrorsDoNotRetry (500,message,Internal Server Error,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="257bc512-7952-b7df-feed-fdcbd809f3f9">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="ce4ad48a-7567-478d-961d-c3ea586365cf" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OtherPOrchErrorsDoNotRetry" />
    </UnitTest>
    <UnitTest name="OPARetriesForAllowedResponses (408,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="8ef45f61-55b4-2a13-1c8e-55f37b11dd29">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="fae396a3-a255-4da0-a752-87c05322c958" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OPARetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="PainCorrectlyCreatesTheTransferRefField (Successful Core to Core,Core,Core,TMVToTMV,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="59ce3f63-66a8-7067-8123-30138292516a">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="2aff22b3-c913-49cb-bdda-d96e3073d24c" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferFieldValidationTestsForPainFeature" name="PainCorrectlyCreatesTheTransferRefField" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_AllowedPaths (Successful Legacy to Core,LegacyCore,Core,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="5a767aa9-34b1-4637-6492-dfc9837d6d47">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="1d7da021-d0c0-4234-b7c1-edfc6001ba34" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_AllowedPaths" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Successful (Successful type 6 to none,FreezeAllDishandUnauthorisedOdFees,debtor,none,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="caa2254a-852e-8b49-14df-5fc9678011b9">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="ac3a016c-d987-4c51-bf10-0b2adbb92b2d" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Successful" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Successful (Successful None to type 3,none,creditor,ToHoldSpecificCreditBalance,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="a85b161f-8259-4afb-0e80-3d5a01a67f97">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f49be7e3-957b-405f-8af2-257a8b183765" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Successful" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S34,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="8e04972e-479b-c5cb-e5bc-de8856808ce5">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="9836caea-7b24-481a-b18e-45c3e08e2446" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S4,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="15b1b80d-7461-a6cc-d8f5-812ff4b45a4d">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="1c3f53de-5251-4ed4-a1a4-a49a2196f449" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="OPARetriesToConfiguredMax" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="2b62d568-3184-46ad-1379-c343b5f2425d">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f5a10fa7-3ac2-468f-9055-0fefef8a812a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OPARetriesToConfiguredMax" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S21,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="21af1e32-5405-ea8b-b9ba-56ec74685687">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="e0f629bb-6f54-44aa-b82b-335c43a80569" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="SuccessfulOPAAccountNumberTransformations (Core to Core,Core,Core,2ff00be3-5081-4171-8ba6-6f32f66ed70c,a47b5129-4085-46b6-9f65-baf821fa6b94,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="3e5c6042-6bb3-b9f5-a736-a4e752c117e2">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.TMVTMVTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
      </TestCategory>
      <Execution id="3ba4edf5-81bc-4a3b-abbd-a662cbddf1b9" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedOPAAuthCheckForPainFeature" name="SuccessfulOPAAccountNumberTransformations" />
    </UnitTest>
    <UnitTest name="OtherPOrchErrorsDoNotRetry (408,message,Internal Server Error,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="f39c6877-1863-f10d-e1d5-a113334db8bb">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="86b2c2d3-c6bf-479f-a8a5-e755285a0360" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OtherPOrchErrorsDoNotRetry" />
    </UnitTest>
    <UnitTest name="ErrorResponseCodesFromUAS (408,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="3926459d-0609-001c-2b8c-bd4b8dd28836">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="bd56a9a6-ad6c-42a0-aa3c-f2d34c2c42ec" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="ErrorResponseCodesFromUAS" />
    </UnitTest>
    <UnitTest name="OPARetriesForAllowedResponses (503,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="f1dbcb2b-6bae-3808-31f8-e7af5321c5d7">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="c06df0df-98ec-4ef4-8cd9-7082d058dfe6" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OPARetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="MockedOPAResponseIsUnsuccessful" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c7de8bf5-db98-9244-9374-df85f1283db0">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.TMVTMVTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
      </TestCategory>
      <Execution id="17e5fe86-6737-431c-95ec-9b0781506468" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedOPAAuthCheckForPainFeature" name="MockedOPAResponseIsUnsuccessful" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S1N,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="7a32f101-b71a-87d9-22ad-35c27dc4ee2b">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="1fdae280-817c-48f9-82fe-5a82e49445df" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful BlockedGeneral to Opened,BlockedGeneral,Opened,Debtor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="4f09f936-6800-9aed-c722-6d781f718908">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="7abd212f-44bb-422c-9f41-9b8cc7705f5a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="PorchRetriesForAllowedResponses (503,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="59c88573-0e7e-815d-22f3-9b34515fa396">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="576a4f77-3ec0-4e4d-a7d9-6f2293895d8e" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="PorchRetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="UASRetriesForAllowedResponses (408,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="efc3bcb0-daad-9059-b0e7-9379955f06d5">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="a04f811b-6280-4adf-b63c-329da605ee9c" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="UASRetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="InvalidJWTTokenTests (Missing sub,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJhdXRoX2xldmVsIjoyLCJhdWRpdFRyYWNraW5nSWQiOiI0ZTgyY2ExNy00NTM1LTQzNTctODRhZS05NjE4YjY2N2U1OTUtMzAxNDAxIiwic3VibmFtZSI6IjY2NTI2MjciLCJpc3MiOiJodHRwczovL2lkZW50aXR5Lm10bHMuNGRjMi5jaXAtbm9uLXByb2R1Y3Rpb24ubm9ucHJvZC5pbnRlcm5hbC5hd3Mua2l3aWJhbmsuY28ubnovYW0vb2F1dGgyL3JlYWxtcy9yb290L3JlYWxtcy9jdXN0b21lcnMiLCJhY3RpdmUiOnRydWUsInNlc3Npb25fbm9uY2UiOiI4ZGYwM2U1OC1jOTcwLTQzMmQtOWZkOS0xOTlmOWZiNjdhODkiLCJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXV0aEdyYW50SWQiOiJPX1hEc3c5UEdNOGZQYnBMTHVsOXE1SHVsZzgiLCJjbGllbnRfaWQiOiJjdXN0b21lcnNJbXBsaWNpdEZsb3dUZXN0aW5nU3VwcG9ydFNlcnZpY2UiLCJhdWQiOiI2ZjZiOWZmNS1mMTNjLTQ1OTYtYmYwOS0yYTFiY2M1YTc5ZTAiLCJ1c2VyX2lkIjoiNjY1MjYyNyIsInN1Yl90eXBlIjoiY3VzdG9tZXIiLCJzY29wZSI6ImRlZmF1bHQiLCJyZWFsbSI6Ii9jdXN0b21lcnMiLCJleHAiOjE3NTQ1MTU1NjYsImxlZ2FjeV9rYl9sb2dpbl9uYW1lIjoiNjY1MjYyNyIsInVzZXJuYW1lIjoiNjY1MjYyNyJ9.ecsft4-Y5q0Xajj7YHDakBdEdySpPoNRFyy16AE2XhXTC1kycCaj5adYhLwomYvK1MpGFg3Xe8NVkxTcUz61cQ,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c64894c3-343e-4478-36df-59ff09c63261">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="53e85676-cd1d-4117-b2d3-b3ca2233f5fd" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTestsForJWTTokensFeature" name="InvalidJWTTokenTests" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S20,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="0ac02988-e474-a920-cad8-9f98fd9fe70a">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="7bee6ced-302f-42da-b3ff-9aede832faff" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="DebtorAccountHasInsufficientBalanceFromUASButPaymentIsSuccessful" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="99f21a2f-2e4a-b2b5-ffcf-c75141aa4086">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="6f3b5613-c493-4a6b-b0f9-1d472633a439" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="DebtorAccountHasInsufficientBalanceFromUASButPaymentIsSuccessful" />
    </UnitTest>
    <UnitTest name="RetryPorchRequestTimesOut" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="bda05018-b260-913b-7734-8d1bb9f186eb">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="9f32f44c-2983-449c-9a5d-fa34fe503bd3" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="RetryPorchRequestTimesOut" />
    </UnitTest>
    <UnitTest name="PainCorrectlyCreatesTheTransferRefField (Successful Legacy to Legacy,LegacyCore,LegacyCore,LegacyToLegacy,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="6fe3f6fd-f4a6-a627-1f37-0bc420755f18">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="082ad610-3601-443b-ac6b-8c746f89114a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferFieldValidationTestsForPainFeature" name="PainCorrectlyCreatesTheTransferRefField" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Unsuccessful (Unsuccessful type 2 to none,AgainstAllWithdrawalsFromThisAccount,none,debtor,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="3e6f912f-5ebb-65a4-9492-1d065ca74479">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="4f0c1c09-56ab-4f24-a3e6-bac3a945a6c9" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Unsuccessful" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Legacy to CreditCard,LegacyCore,CreditCard,Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="4a06f0da-e762-c26f-ad87-7e1adc46d72b">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="e5fea18b-12ac-4378-b5c1-bd7b02654e91" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_InvalidPaths" />
    </UnitTest>
    <UnitTest name="JWTClient_IdIsPassedThroughToPOrch (Custom ClientId is passed,rX7sR1337,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiclg3c1IxMzM3IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.E_52mKv5ELlUwm9wWZ7t4nvazcsmhTr_A44dmBmqVBoc_YWhyPabJX9vGprE7dWqcvDI44C6GIWxjTZ-oA5-hQ,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="3b5445f8-d600-cbfc-f80f-fc6f971ce629">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="842a5b98-022f-4627-8f6e-db7d8c183254" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTestsForJWTTokensFeature" name="JWTClient_IdIsPassedThroughToPOrch" />
    </UnitTest>
    <UnitTest name="OPARetriesForAllowedResponses (500,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="5104d440-3bd6-f43d-011d-c60d056c8c65">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="0918b2a8-d564-4170-9f46-a32baf260d2f" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OPARetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Unsuccessful (Unsuccessful None to type 1,none,FreezeAgainstAllTellerAction,creditor,Creditor account has been frozen.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="6aa8db1c-0bba-18f7-88e5-18040294e142">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="342989ca-f85c-431a-be64-5a6c2d3497ba" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Unsuccessful" />
    </UnitTest>
    <UnitTest name="ErrorResponseCodesFromUAS (500,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="77bc6f3d-2881-48fd-ac6b-c48eae6e2496">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f81b2acb-df5d-45d4-a4c4-39dd3d665792" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="ErrorResponseCodesFromUAS" />
    </UnitTest>
    <UnitTest name="PainCorrectlyCreatesTheTransferRefField (Successful Core to Legacy,Core,LegacyCore,TMVToLegacy,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="49461e46-4f91-0e9d-6ad0-95595e11df66">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="290153b6-b273-47d1-b65d-fb11e88e0f3d" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferFieldValidationTestsForPainFeature" name="PainCorrectlyCreatesTheTransferRefField" />
    </UnitTest>
    <UnitTest name="UASDoesNotReturnAResponse" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="ff3fe98c-7cb9-28c3-23a0-c996805f9c98">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="611a3949-88c0-4d87-ba5b-d8a597461f12" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="UASDoesNotReturnAResponse" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Opened to BlockedUnvalidated,Opened,BlockedUnvalidated,Creditor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="9b41717e-395f-0ddb-2d53-af1f6bebe018">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="e1e90696-0198-4da3-858b-1e58e0d4e852" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="UASRetriesForAllowedResponses (502,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="07f44015-8966-38a3-5337-ff7f5881337a">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="bd446a00-b3da-4210-92fc-c5fc8174b6d6" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="UASRetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S2,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="2c8e7d26-c354-2c58-3d19-9f453287ea68">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="7db69181-6641-464e-8a8f-e38a0f3f5572" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="OtherPOrchErrorsDoNotRetry (429,message,Duplicate Payment Request - Already Processing,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="76281e6f-fba3-cf80-4f21-020a0fa2d035">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="3807ae70-d5f6-4edb-ad6e-ecd5ede41787" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OtherPOrchErrorsDoNotRetry" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S30,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="b04c68e9-f073-7537-afed-b59e8710cb47">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="05a3fbaa-c5cc-486d-86a6-f41d39633289" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="UASRetriesForAllowedResponses (503,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="9e2eea2f-e2fc-71d6-ac11-dce0ab73068c">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="3fdcdf1a-d04d-4aa5-a2ec-382b42fb28d0" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="UASRetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Opened to BlockedGeneral,Opened,BlockedGeneral,Creditor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="71990d27-92f5-6ac3-b228-52e671538da7">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="eab2baa5-ed09-4233-bf97-dd22ddb5cf52" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_AllowedPaths (Successful Core to Core,Core,Core,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="2c80bca1-5598-bc16-c422-eff5305c50cb">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="7b044bab-0193-4ac0-8fd2-29aae9fc7a68" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_AllowedPaths" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Kiwisaver to Core,Kiwisaver,Core,Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="8d6ab228-e602-11a3-70a6-5899f1d866b2">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f62f8e47-232e-43f4-a3e2-094c36de3c74" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_InvalidPaths" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Legacy to Kiwisaver,LegacyCore,Kiwisaver,Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="13ea6fd3-b0de-6ed9-10ba-8c91e2efc2ce">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="12091f6e-e360-463e-8028-45e5d4c453bc" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_InvalidPaths" />
    </UnitTest>
    <UnitTest name="UASReturnsUnusableResponses (debtor only,Creditor account not found.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="6b6315ae-2ca6-c782-81b2-d45a8dab0f02">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="e3b06e7e-54d3-4b60-a19f-5efcc8348a63" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="UASReturnsUnusableResponses" />
    </UnitTest>
    <UnitTest name="RetryOPARequestTimesOut" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="db54655c-59dd-9bba-d5b4-06de3482b6be">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="74b5eb79-5981-4524-a0ac-dba93c7eabfe" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="RetryOPARequestTimesOut" />
    </UnitTest>
    <UnitTest name="UASReturnsUnusableResponses (creditor only,Debtor account not found.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="53e0ff2d-fd3b-5745-563d-ac96241e8a89">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="7a9dfd5b-d6bf-4a54-bc32-4e0554f28aa5" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="UASReturnsUnusableResponses" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful BlockedUnverified to Opened,BlockedUnverified,Opened,Debtor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="0f2f36ba-ef89-5783-17f2-cd9bd3a45796">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="c4aebb58-f896-4335-90e3-54e873a009b4" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Opened to BlockedUnverified,Opened,BlockedUnverified,Creditor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="1c0027ee-97b9-3d72-8e49-3cf2292147e1">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="d5665606-f27d-4527-8a01-cdc3c552d321" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="PainTransferUltracsToUltracsHappyPath" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="877d9882-d828-5927-467b-956b819a9e1d">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="b1928a00-336c-4dc6-92ba-5dfdeabe4e2b" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedAcceptTestForPainAPIFeature" name="PainTransferUltracsToUltracsHappyPath" />
    </UnitTest>
    <UnitTest name="UASReturnsUnusableResponses (empty,Failed to retrieve account information,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="9bd9dcd3-96c6-e5cd-8089-f60285fd7733">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="084f96fc-a541-435b-9551-79e5d11c16d4" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="UASReturnsUnusableResponses" />
    </UnitTest>
    <UnitTest name="SuccessfulOPAAccountNumberTransformations (Legacy to Legacy,LegacyCore,LegacyCore,9023066848503,9023066848509,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="2028f74c-f524-2a70-2287-4b5ebae70de0">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.TMVTMVTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
      </TestCategory>
      <Execution id="54e35234-e41e-47b6-b702-f95e0c5a04ef" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedOPAAuthCheckForPainFeature" name="SuccessfulOPAAccountNumberTransformations" />
    </UnitTest>
    <UnitTest name="ErrorResponseCodesFromUAS (501,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="5aabf67a-c765-73f2-650c-72e1d01f86cd">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="5f9d3be7-cf6b-4c23-a267-96b888394044" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="ErrorResponseCodesFromUAS" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Unsuccessful (Unsuccessful type 1 to none,FreezeAgainstAllTellerAction,none,debtor,Debtor account has been frozen.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="af8fad5b-8eb7-1cfa-84d6-4f799b72e0ad">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="14644c1a-343e-458e-b756-4221f789dfa6" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Unsuccessful" />
    </UnitTest>
    <UnitTest name="UASRetriesForAllowedResponses (504,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="99e35413-b1bb-f92b-f53d-141041e8b024">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="dd3aa33d-58e3-4446-862f-826255c9f004" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="UASRetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S40,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="a212f48f-f3f7-c834-59a0-3e4e89a8bc6e">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="fda78eb8-f39f-4570-be15-dceaca128be4" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="UASRetriesToConfiguredMax" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="672cd772-47fc-5952-be85-b1b776c8a665">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f810b75f-6958-4d10-90e1-93af6a618161" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="UASRetriesToConfiguredMax" />
    </UnitTest>
    <UnitTest name="ErrorResponseCodesFromUAS (401,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c3e2b91d-d2bd-fc25-32be-ad8b0d55dff2">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="9752f80f-59cb-4072-94f8-5893c09e471d" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="ErrorResponseCodesFromUAS" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Successful (Successful type 3 to none,ToHoldSpecificCreditBalance,debtor,none,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="0f425572-5768-29e4-4c66-55e75a1e1a59">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="b9d207e3-9b60-47be-8134-778a5f7677d3" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Successful" />
    </UnitTest>
    <UnitTest name="RetryUASRequestTimesOut" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c249c980-3de8-89bf-6821-41f38ac23492">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="a80ae59a-6335-4038-b474-8a44900ac68a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="RetryUASRequestTimesOut" />
    </UnitTest>
    <UnitTest name="OPARetriesForAllowedResponses (502,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e489a39e-36aa-5011-ee67-cc97728ac749">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="e94e1a10-b2cc-4456-8d61-a14085ccd929" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OPARetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful BlockedUnvalidated to Opened,BlockedUnvalidated,Opened,Debtor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="d4af027d-cada-fd71-a4cc-96e9a887148d">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="a5362659-474b-46d9-bbff-4ce691bc5489" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="InvalidJWTTokenTests (Missing legacy_kb_login_name,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiY2xpZW50X2lkIjoiY3VzdG9tZXJzSW1wbGljaXRGbG93VGVzdGluZ1N1cHBvcnRTZXJ2aWNlIiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.M5LE_VHBVxZjXcLHTXrrOGBm4RLJanfr_TJyDm-EjVNQoZfoqcwqn8kE8fDMpP-Y1o8DFCtNwqcnZfbAACKAmQ,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e33e77d5-e3eb-55fe-4e6a-90c7b81a6a1f">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="8bc9e3c7-21bb-47e7-950c-4afc813c9fa3" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTestsForJWTTokensFeature" name="InvalidJWTTokenTests" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Unknown to Opened,Unknown,Opened,Debtor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="3583df6b-2018-57da-0ded-16b8e8188edd">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="ad72de16-3bd7-40b2-9711-f2a5c406d0c4" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S22,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e9471ba7-4335-f853-8d6f-f5c3435b0581">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="abc34311-c1f5-4c62-abb9-0f4ac9b311f5" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful ForeignCurrency to Core,ForeignCurrency,Core,Debtor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="f0c00b70-e96a-9b79-8f80-40d25e70a906">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="49430a11-d4eb-447a-8b90-65fea6a853cc" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_InvalidPaths" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Closed to Opened,Closed,Opened,Debtor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="7beb5a18-69f6-951f-e4a1-e1bc823a0118">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="98b3b6f3-cce1-4159-ae6a-93240ba8fb14" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="AccountIdFieldsAreMandatoryForTransfers" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="a0a9eb38-6c92-8037-1d1c-3f8f34e95f2a">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="2fe76d23-630a-4eb4-a53e-940a4c7e9863" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferFieldValidationTestsForPainFeature" name="AccountIdFieldsAreMandatoryForTransfers" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_InvalidPaths (Unsuccessful Legacy to ForeignCurrency,LegacyCore,ForeignCurrency,Creditor account has invalid origination system. Transaction is not allowed for the selected accounts.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="f4a61d8c-2861-ff61-3976-fd230042120d">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="43c4dfcf-72aa-48eb-a275-220e50b771d5" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_InvalidPaths" />
    </UnitTest>
    <UnitTest name="DebtorAccountWithCoreOriginationAndNullSignatoriesIsAllowed" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="0d7d1807-a7a7-d302-2661-0616557d6737">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="abe7c89a-a95b-4d7c-936a-0d4e9010cccc" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="DebtorAccountWithCoreOriginationAndNullSignatoriesIsAllowed" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S33,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e52107b0-a6c0-d76b-fbdc-50757846dd42">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="b00f939b-07ce-4666-a4e8-953df5566c2b" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="UASUnrechableSocketError" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c681f884-4718-96bc-adc4-d3d6d9ed4b5a">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="69377f00-06c0-4996-b7e3-c5b1616fa141" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="UASUnrechableSocketError" />
    </UnitTest>
    <UnitTest name="ErrorResponseCodesFromUAS (403,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="7960eede-2276-2dd4-a89b-e1527158ca2e">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="c7b00b53-d22c-4431-81ca-216468616cd5" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedInteractionsBetweenPainAndUASFeature" name="ErrorResponseCodesFromUAS" />
    </UnitTest>
    <UnitTest name="DebtorAccountSignatoriesMustBe1" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="4e53899d-5e4e-e65e-8624-c67dca0f2d5f">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="549e3db1-3927-4f6c-8410-d4caa2cdcb4a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="DebtorAccountSignatoriesMustBe1" />
    </UnitTest>
    <UnitTest name="FreezeStatus_Successful (Successful None to type 2,none,creditor,AgainstAllWithdrawalsFromThisAccount,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="c40f6989-18a7-2d9e-b102-a468d4299a05">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="09f81674-1c59-49d2-ab6a-7431b84e6d8e" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="FreezeStatus_Successful" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S3,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="06e0d18b-70d0-2540-7137-5fed072bc7dc">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="2d4a1f43-d1fe-4654-96de-9e34c42173e7" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="OPARetriesForAllowedResponses (504,,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="09e92047-e9c4-5609-5dbd-7817c618d424">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="6b6e16d5-52ac-4161-a89d-7ce1b8b1c32e" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="OPARetriesForAllowedResponses" />
    </UnitTest>
    <UnitTest name="PorchRetriesToConfiguredMax" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="ace05726-0023-1ea8-2630-d87474842a27">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="f5f26831-f58a-44e2-8ca4-27b014f6c6a9" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedRetryTestsForPainDownstreamServicesFeature" name="PorchRetriesToConfiguredMax" />
    </UnitTest>
    <UnitTest name="InvalidJWTTokenTests (Missing client_id,eyJ0eXAiOiJKV1QiLCJraWQiOiJnNHluTmY3MjRpU3VWTVM4UklEWEkyQlhDeVE9IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ1cm46a2l3aWJhbms6Y3VzdG9tZXI6MDVkN2M4ZjAtZWQxNC00MzBmLTgyODctZGI1YmVjMzMxY2VkIiwiYXV0aF9sZXZlbCI6MiwiYXVkaXRUcmFja2luZ0lkIjoiNGU4MmNhMTctNDUzNS00MzU3LTg0YWUtOTYxOGI2NjdlNTk1LTMwMTQwMSIsInN1Ym5hbWUiOiI2NjUyNjI3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5tdGxzLjRkYzIuY2lwLW5vbi1wcm9kdWN0aW9uLm5vbnByb2QuaW50ZXJuYWwuYXdzLmtpd2liYW5rLmNvLm56L2FtL29hdXRoMi9yZWFsbXMvcm9vdC9yZWFsbXMvY3VzdG9tZXJzIiwiYWN0aXZlIjp0cnVlLCJzZXNzaW9uX25vbmNlIjoiOGRmMDNlNTgtYzk3MC00MzJkLTlmZDktMTk5ZjlmYjY3YTg5IiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiT19YRHN3OVBHTThmUGJwTEx1bDlxNUh1bGc4IiwiYXVkIjoiNmY2YjlmZjUtZjEzYy00NTk2LWJmMDktMmExYmNjNWE3OWUwIiwidXNlcl9pZCI6IjY2NTI2MjciLCJzdWJfdHlwZSI6ImN1c3RvbWVyIiwic2NvcGUiOiJkZWZhdWx0IiwicmVhbG0iOiIvY3VzdG9tZXJzIiwiZXhwIjoxNzU0NTE1NTY2LCJsZWdhY3lfa2JfbG9naW5fbmFtZSI6IjY2NTI2MjciLCJ1c2VybmFtZSI6IjY2NTI2MjcifQ.GHzJZn4eVv9x_WanKRWnYFT6ZSHIXovOuXl3kLgIZyF9HfRiAcykeBXkOIuM4gi0fkG8C_iMoUZLiEPlFGlW0A,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="1020ce5c-f682-b5ff-646e-0cf7940d4097">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="b0686c91-33d2-48bb-a8c0-bd183a17cb4a" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTestsForJWTTokensFeature" name="InvalidJWTTokenTests" />
    </UnitTest>
    <UnitTest name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos (S9,S4, S9, S8, S1, S1N, S3, S2, S20, S21, S22, S30, S33, S34, S40,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e41b2607-ad85-fd8b-b87c-e1668f1f9a98">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="86eadc50-755e-4fd8-8e0a-31ad735d4014" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="ProductFacilityTypes_TransferToFromEligibleImmediateCombos" />
    </UnitTest>
    <UnitTest name="AccountStatusRules (Unsuccessful Opened to Closed,Opened,Closed,Creditor account status is not valid.,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="e0761c8d-33b0-96aa-64e0-b3d8684883ec">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="92a43ad0-700f-431f-84d5-c63f6b1a2be5" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountStatusRules" />
    </UnitTest>
    <UnitTest name="AccountTypeRulesForTransfers_AllowedPaths (Successful Legacy to Legacy,LegacyCore,LegacyCore,)" storage="/codebuild/output/src2043426101/src/kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/testings.integration.mocked/bin/release/net8.0/kiwibank.payments.pain.testings.integration.mocked.dll" id="fe1cfd3d-bdc4-d95a-37c7-f86b80933e0b">
      <TestCategory>
        <TestCategoryItem TestCategory="Outcome:L4ProcessPayment.UltracsUltracsTransfer" />
        <TestCategoryItem TestCategory="Process:L4ProcessPayment" />
      </TestCategory>
      <Execution id="1154221e-46c4-466c-affd-f28f799a94df" />
      <TestMethod codeBase="/codebuild/output/src2043426101/src/Kiwibank-kb-cap-0cc8e8abec5297b8e3a35c2fcf6d6e0e0e42c0e0/services/pain/src/Testings.Integration.Mocked/bin/Release/net8.0/Kiwibank.Payments.Pain.Testings.Integration.Mocked.dll" adapterTypeName="executor://mstestadapter/v2" className="Kiwibank.Payments.Pain.Testings.Integration.Mocked.TestFeatures.MockedTransferInitiationBusinessLogicTestsForPainFeature" name="AccountTypeRulesForTransfers_AllowedPaths" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="4f09f936-6800-9aed-c722-6d781f718908" executionId="7abd212f-44bb-422c-9f41-9b8cc7705f5a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7a32f101-b71a-87d9-22ad-35c27dc4ee2b" executionId="1fdae280-817c-48f9-82fe-5a82e49445df" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3b5445f8-d600-cbfc-f80f-fc6f971ce629" executionId="842a5b98-022f-4627-8f6e-db7d8c183254" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="99e35413-b1bb-f92b-f53d-141041e8b024" executionId="dd3aa33d-58e3-4446-862f-826255c9f004" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="672cd772-47fc-5952-be85-b1b776c8a665" executionId="f810b75f-6958-4d10-90e1-93af6a618161" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49461e46-4f91-0e9d-6ad0-95595e11df66" executionId="290153b6-b273-47d1-b65d-fb11e88e0f3d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b330ff7e-8af7-1712-c4c5-aa4af30ad36a" executionId="a516345b-bc25-4c20-99a9-550c21ba2656" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="99f21a2f-2e4a-b2b5-ffcf-c75141aa4086" executionId="6f3b5613-c493-4a6b-b0f9-1d472633a439" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="59c88573-0e7e-815d-22f3-9b34515fa396" executionId="576a4f77-3ec0-4e4d-a7d9-6f2293895d8e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f39c6877-1863-f10d-e1d5-a113334db8bb" executionId="86b2c2d3-c6bf-479f-a8a5-e755285a0360" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2c80bca1-5598-bc16-c422-eff5305c50cb" executionId="7b044bab-0193-4ac0-8fd2-29aae9fc7a68" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ef45f61-55b4-2a13-1c8e-55f37b11dd29" executionId="fae396a3-a255-4da0-a752-87c05322c958" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9e2eea2f-e2fc-71d6-ac11-dce0ab73068c" executionId="3fdcdf1a-d04d-4aa5-a2ec-382b42fb28d0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="efc3bcb0-daad-9059-b0e7-9379955f06d5" executionId="a04f811b-6280-4adf-b63c-329da605ee9c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c40f6989-18a7-2d9e-b102-a468d4299a05" executionId="09f81674-1c59-49d2-ab6a-7431b84e6d8e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ace05726-0023-1ea8-2630-d87474842a27" executionId="f5f26831-f58a-44e2-8ca4-27b014f6c6a9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aeecf30a-fb62-2197-7286-04433123f061" executionId="bfa1719c-64c2-44b6-ac34-21418b1ecc3a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6fe3f6fd-f4a6-a627-1f37-0bc420755f18" executionId="082ad610-3601-443b-ac6b-8c746f89114a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7960eede-2276-2dd4-a89b-e1527158ca2e" executionId="c7b00b53-d22c-4431-81ca-216468616cd5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="88934b0e-c038-0921-ddb1-7be23d7a052c" executionId="2e518ed7-d0d7-409f-a7fd-a53ddd2e0738" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1dbcb2b-6bae-3808-31f8-e7af5321c5d7" executionId="c06df0df-98ec-4ef4-8cd9-7082d058dfe6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0a9eb38-6c92-8037-1d1c-3f8f34e95f2a" executionId="2fe76d23-630a-4eb4-a53e-940a4c7e9863" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ff3fe98c-7cb9-28c3-23a0-c996805f9c98" executionId="611a3949-88c0-4d87-ba5b-d8a597461f12" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3583df6b-2018-57da-0ded-16b8e8188edd" executionId="ad72de16-3bd7-40b2-9711-f2a5c406d0c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="13ea6fd3-b0de-6ed9-10ba-8c91e2efc2ce" executionId="12091f6e-e360-463e-8028-45e5d4c453bc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e9471ba7-4335-f853-8d6f-f5c3435b0581" executionId="abc34311-c1f5-4c62-abb9-0f4ac9b311f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b04c68e9-f073-7537-afed-b59e8710cb47" executionId="05a3fbaa-c5cc-486d-86a6-f41d39633289" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4e53899d-5e4e-e65e-8624-c67dca0f2d5f" executionId="549e3db1-3927-4f6c-8410-d4caa2cdcb4a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="43bfdbf4-a99a-58ba-7fe7-372746927f5b" executionId="fc9db0f2-028d-47f9-affa-a3b86120168c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b62d568-3184-46ad-1379-c343b5f2425d" executionId="f5a10fa7-3ac2-468f-9055-0fefef8a812a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="af8fad5b-8eb7-1cfa-84d6-4f799b72e0ad" executionId="14644c1a-343e-458e-b756-4221f789dfa6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8d6ab228-e602-11a3-70a6-5899f1d866b2" executionId="f62f8e47-232e-43f4-a3e2-094c36de3c74" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7beb5a18-69f6-951f-e4a1-e1bc823a0118" executionId="98b3b6f3-cce1-4159-ae6a-93240ba8fb14" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0f425572-5768-29e4-4c66-55e75a1e1a59" executionId="b9d207e3-9b60-47be-8134-778a5f7677d3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b41717e-395f-0ddb-2d53-af1f6bebe018" executionId="e1e90696-0198-4da3-858b-1e58e0d4e852" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c681f884-4718-96bc-adc4-d3d6d9ed4b5a" executionId="69377f00-06c0-4996-b7e3-c5b1616fa141" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d544a4fa-b3c6-1104-d108-0e0d54c610eb" executionId="c9ff99a4-8409-4282-9302-960a04d946d7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e489a39e-36aa-5011-ee67-cc97728ac749" executionId="e94e1a10-b2cc-4456-8d61-a14085ccd929" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e58b79f8-933e-4375-36df-e454ae3fdc0d" executionId="3418920a-d47b-4f84-9e32-a52a4057ba33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c7de8bf5-db98-9244-9374-df85f1283db0" executionId="17e5fe86-6737-431c-95ec-9b0781506468" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="db54655c-59dd-9bba-d5b4-06de3482b6be" executionId="74b5eb79-5981-4524-a0ac-dba93c7eabfe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ac02988-e474-a920-cad8-9f98fd9fe70a" executionId="7bee6ced-302f-42da-b3ff-9aede832faff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="15b1b80d-7461-a6cc-d8f5-812ff4b45a4d" executionId="1c3f53de-5251-4ed4-a1a4-a49a2196f449" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="21af1e32-5405-ea8b-b9ba-56ec74685687" executionId="e0f629bb-6f54-44aa-b82b-335c43a80569" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b6315ae-2ca6-c782-81b2-d45a8dab0f02" executionId="e3b06e7e-54d3-4b60-a19f-5efcc8348a63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e5c6042-6bb3-b9f5-a736-a4e752c117e2" executionId="3ba4edf5-81bc-4a3b-abbd-a662cbddf1b9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bd9dcd3-96c6-e5cd-8089-f60285fd7733" executionId="084f96fc-a541-435b-9551-79e5d11c16d4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3926459d-0609-001c-2b8c-bd4b8dd28836" executionId="bd56a9a6-ad6c-42a0-aa3c-f2d34c2c42ec" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1423a09c-3715-4b13-aaa8-9ddf35feb7a5" executionId="f6abe26b-c0ea-495b-97f8-41cf72da6fee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e52107b0-a6c0-d76b-fbdc-50757846dd42" executionId="b00f939b-07ce-4666-a4e8-953df5566c2b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76281e6f-fba3-cf80-4f21-020a0fa2d035" executionId="3807ae70-d5f6-4edb-ad6e-ecd5ede41787" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bda05018-b260-913b-7734-8d1bb9f186eb" executionId="9f32f44c-2983-449c-9a5d-fa34fe503bd3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4a06f0da-e762-c26f-ad87-7e1adc46d72b" executionId="e5fea18b-12ac-4378-b5c1-bd7b02654e91" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e33e77d5-e3eb-55fe-4e6a-90c7b81a6a1f" executionId="8bc9e3c7-21bb-47e7-950c-4afc813c9fa3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5104d440-3bd6-f43d-011d-c60d056c8c65" executionId="0918b2a8-d564-4170-9f46-a32baf260d2f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49616ad6-d2a8-1875-612e-8d6a9518f756" executionId="2a92f97f-592a-4546-9ba1-0b08265eacd5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e0761c8d-33b0-96aa-64e0-b3d8684883ec" executionId="92a43ad0-700f-431f-84d5-c63f6b1a2be5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5a767aa9-34b1-4637-6492-dfc9837d6d47" executionId="1d7da021-d0c0-4234-b7c1-edfc6001ba34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d4af027d-cada-fd71-a4cc-96e9a887148d" executionId="a5362659-474b-46d9-bbff-4ce691bc5489" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f0c00b70-e96a-9b79-8f80-40d25e70a906" executionId="49430a11-d4eb-447a-8b90-65fea6a853cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0f2f36ba-ef89-5783-17f2-cd9bd3a45796" executionId="c4aebb58-f896-4335-90e3-54e873a009b4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="257bc512-7952-b7df-feed-fdcbd809f3f9" executionId="ce4ad48a-7567-478d-961d-c3ea586365cf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c0027ee-97b9-3d72-8e49-3cf2292147e1" executionId="d5665606-f27d-4527-8a01-cdc3c552d321" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="07d2c399-e88c-6c9c-27db-2be144ec2bf8" executionId="a2251905-cc14-4ddb-87cf-82c579df21e3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c249c980-3de8-89bf-6821-41f38ac23492" executionId="a80ae59a-6335-4038-b474-8a44900ac68a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="09e92047-e9c4-5609-5dbd-7817c618d424" executionId="6b6e16d5-52ac-4161-a89d-7ce1b8b1c32e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="877d9882-d828-5927-467b-956b819a9e1d" executionId="b1928a00-336c-4dc6-92ba-5dfdeabe4e2b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fe1cfd3d-bdc4-d95a-37c7-f86b80933e0b" executionId="1154221e-46c4-466c-affd-f28f799a94df" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0d7d1807-a7a7-d302-2661-0616557d6737" executionId="abe7c89a-a95b-4d7c-936a-0d4e9010cccc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="71990d27-92f5-6ac3-b228-52e671538da7" executionId="eab2baa5-ed09-4233-bf97-dd22ddb5cf52" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8e04972e-479b-c5cb-e5bc-de8856808ce5" executionId="9836caea-7b24-481a-b18e-45c3e08e2446" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a212f48f-f3f7-c834-59a0-3e4e89a8bc6e" executionId="fda78eb8-f39f-4570-be15-dceaca128be4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="06e0d18b-70d0-2540-7137-5fed072bc7dc" executionId="2d4a1f43-d1fe-4654-96de-9e34c42173e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c64894c3-343e-4478-36df-59ff09c63261" executionId="53e85676-cd1d-4117-b2d3-b3ca2233f5fd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e6f912f-5ebb-65a4-9492-1d065ca74479" executionId="4f0c1c09-56ab-4f24-a3e6-bac3a945a6c9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2c8e7d26-c354-2c58-3d19-9f453287ea68" executionId="7db69181-6641-464e-8a8f-e38a0f3f5572" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5aabf67a-c765-73f2-650c-72e1d01f86cd" executionId="5f9d3be7-cf6b-4c23-a267-96b888394044" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a85b161f-8259-4afb-0e80-3d5a01a67f97" executionId="f49be7e3-957b-405f-8af2-257a8b183765" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="59ce3f63-66a8-7067-8123-30138292516a" executionId="2aff22b3-c913-49cb-bdda-d96e3073d24c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e41b2607-ad85-fd8b-b87c-e1668f1f9a98" executionId="86eadc50-755e-4fd8-8e0a-31ad735d4014" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53e0ff2d-fd3b-5745-563d-ac96241e8a89" executionId="7a9dfd5b-d6bf-4a54-bc32-4e0554f28aa5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6aa8db1c-0bba-18f7-88e5-18040294e142" executionId="342989ca-f85c-431a-be64-5a6c2d3497ba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2028f74c-f524-2a70-2287-4b5ebae70de0" executionId="54e35234-e41e-47b6-b702-f95e0c5a04ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="07f44015-8966-38a3-5337-ff7f5881337a" executionId="bd446a00-b3da-4210-92fc-c5fc8174b6d6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="caa2254a-852e-8b49-14df-5fc9678011b9" executionId="ac3a016c-d987-4c51-bf10-0b2adbb92b2d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4a61d8c-2861-ff61-3976-fd230042120d" executionId="43c4dfcf-72aa-48eb-a275-220e50b771d5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1020ce5c-f682-b5ff-646e-0cf7940d4097" executionId="b0686c91-33d2-48bb-a8c0-bd183a17cb4a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c34d3573-6de0-8af6-638d-ba6d82d33ac3" executionId="1ff619b2-5998-4b74-818b-4957afc99b9c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="31455632-4ade-dbb3-c7c6-04173c496df7" executionId="e785e3e8-4dde-462c-a2c4-a8ad3e6e37c0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c3e2b91d-d2bd-fc25-32be-ad8b0d55dff2" executionId="9752f80f-59cb-4072-94f8-5893c09e471d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77bc6f3d-2881-48fd-ac6b-c48eae6e2496" executionId="f81b2acb-df5d-45d4-a4c4-39dd3d665792" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="91" executed="90" passed="90" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.0.2+dd36e86129 (64-bit .NET 8.0.20)
[xUnit.net 00:00:00.07]   Discovering: Kiwibank.Payments.Pain.Testings.Integration.Mocked
[xUnit.net 00:00:00.09]   Discovered:  Kiwibank.Payments.Pain.Testings.Integration.Mocked
Test 'UASDoesNotReturnAResponse' was skipped in the test run.
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>